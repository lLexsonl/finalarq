;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/29/2019 10:21:55 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EF45  	GOTO        1162
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x001C	0x0E0F      	MOVLW       15
0x001E	0x6E0C      	MOVWF       R12, 0
0x0020	0x0E47      	MOVLW       71
0x0022	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x0024	0x2E0D      	DECFSZ      R13, 1, 0
0x0026	0xD7FE      	BRA         L_Delay_5500us5
0x0028	0x2E0C      	DECFSZ      R12, 1, 0
0x002A	0xD7FC      	BRA         L_Delay_5500us5
0x002C	0x0000      	NOP
0x002E	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0030	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0032	0x0E21      	MOVLW       33
0x0034	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0036	0x2E0D      	DECFSZ      R13, 1, 0
0x0038	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x003A	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x003C	0x0000      	NOP
0x003E	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0040	0x0012      	RETURN      0
; end of _Delay_1us
_I2C1_Is_Idle:
;__Lib_I2C_b10.c,29 :: 		
;__Lib_I2C_b10.c,30 :: 		
0x0042	0xB4C7      	BTFSC       SSPSTAT, 2 
0x0044	0xD009      	BRA         L_I2C1_Is_Idle0
;__Lib_I2C_b10.c,31 :: 		
0x0046	0x0E1F      	MOVLW       31
0x0048	0x14C5      	ANDWF       SSPCON2, 0 
0x004A	0x6E01      	MOVWF       R1 
0x004C	0x5001      	MOVF        R1, 0 
0x004E	0x0A00      	XORLW       0
0x0050	0xE103      	BNZ         L_I2C1_Is_Idle1
;__Lib_I2C_b10.c,32 :: 		
0x0052	0x0E01      	MOVLW       1
0x0054	0x6E00      	MOVWF       R0 
0x0056	0xD001      	BRA         L_end_I2C1_Is_Idle
L_I2C1_Is_Idle1:
L_I2C1_Is_Idle0:
;__Lib_I2C_b10.c,33 :: 		
0x0058	0x6A00      	CLRF        R0 
;__Lib_I2C_b10.c,34 :: 		
L_end_I2C1_Is_Idle:
0x005A	0x0012      	RETURN      0
; end of _I2C1_Is_Idle
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x005C	0x0100      	MOVLB       0
0x005E	0xBF9B      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0060	0xD002      	BRA         L__Lcd_Cmd21
0x0062	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0064	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0066	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0068	0xBD9B      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x006A	0xD002      	BRA         L__Lcd_Cmd23
0x006C	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x006E	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0070	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0072	0xBB9B      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x0074	0xD002      	BRA         L__Lcd_Cmd25
0x0076	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0078	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x007A	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x007C	0xB99B      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x007E	0xD002      	BRA         L__Lcd_Cmd27
0x0080	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0082	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0084	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0086	0xB18D      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x0088	0xD002      	BRA         L__Lcd_Cmd29
0x008A	0x8084      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x008C	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x008E	0x9084      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0090	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x0092	0xDFD4      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0094	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x0096	0xB79B      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x0098	0xD002      	BRA         L__Lcd_Cmd31
0x009A	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x009C	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x009E	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00A0	0xB59B      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x00A2	0xD002      	BRA         L__Lcd_Cmd33
0x00A4	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00A6	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00A8	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00AA	0xB39B      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x00AC	0xD002      	BRA         L__Lcd_Cmd35
0x00AE	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00B0	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00B2	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00B4	0xB19B      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x00B6	0xD002      	BRA         L__Lcd_Cmd37
0x00B8	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00BA	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00BC	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00BE	0xB18D      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00C0	0xD002      	BRA         L__Lcd_Cmd39
0x00C2	0x8084      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00C4	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00C6	0x9084      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00C8	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00CA	0xDFB8      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00CC	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00CE	0xA18D      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00D0	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00D2	0xDFA4      	RCALL       _Delay_5500us
0x00D4	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00D6	0xDFAD      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00D8	0x0012      	RETURN      0
; end of _Lcd_Cmd
_I2C1_Wr:
;__Lib_I2C_b10.c,84 :: 		
;__Lib_I2C_b10.c,86 :: 		
0x00DA	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_b10.c,87 :: 		
0x00DC	0xFFC9C099  	MOVFF       FARG_I2C1_Wr_data_, SSPBUF
;__Lib_I2C_b10.c,89 :: 		
L_I2C1_Wr18:
0x00E0	0xA4C7      	BTFSS       SSPSTAT, 2 
0x00E2	0xD001      	BRA         L_I2C1_Wr19
;__Lib_I2C_b10.c,90 :: 		
0x00E4	0xD7FD      	BRA         L_I2C1_Wr18
L_I2C1_Wr19:
;__Lib_I2C_b10.c,92 :: 		
L_I2C1_Wr20:
0x00E6	0xB69E      	BTFSC       PIR1, 3 
0x00E8	0xD001      	BRA         L_I2C1_Wr21
;__Lib_I2C_b10.c,93 :: 		
0x00EA	0xD7FD      	BRA         L_I2C1_Wr20
L_I2C1_Wr21:
;__Lib_I2C_b10.c,95 :: 		
0x00EC	0xBCC5      	BTFSC       SSPCON2, 6 
0x00EE	0xD002      	BRA         L_I2C1_Wr22
;__Lib_I2C_b10.c,96 :: 		
0x00F0	0x6A00      	CLRF        R0 
0x00F2	0xD003      	BRA         L_end_I2C1_Wr
;__Lib_I2C_b10.c,97 :: 		
L_I2C1_Wr22:
;__Lib_I2C_b10.c,99 :: 		
0x00F4	0x84C5      	BSF         SSPCON2, 2 
;__Lib_I2C_b10.c,100 :: 		
0x00F6	0x0E02      	MOVLW       2
0x00F8	0x6E00      	MOVWF       R0 
;__Lib_I2C_b10.c,102 :: 		
L_end_I2C1_Wr:
0x00FA	0x0012      	RETURN      0
; end of _I2C1_Wr
_I2C1_Repeated_Start:
;__Lib_I2C_b10.c,54 :: 		
;__Lib_I2C_b10.c,55 :: 		
0x00FC	0x82C5      	BSF         SSPCON2, 1 
;__Lib_I2C_b10.c,56 :: 		
L_I2C1_Repeated_Start10:
0x00FE	0xA2C5      	BTFSS       SSPCON2, 1 
0x0100	0xD001      	BRA         L_I2C1_Repeated_Start11
;__Lib_I2C_b10.c,57 :: 		
0x0102	0xD7FD      	BRA         L_I2C1_Repeated_Start10
L_I2C1_Repeated_Start11:
;__Lib_I2C_b10.c,58 :: 		
L_end_I2C1_Repeated_Start:
0x0104	0x0012      	RETURN      0
; end of _I2C1_Repeated_Start
_I2C1_Start:
;__Lib_I2C_b10.c,36 :: 		
;__Lib_I2C_b10.c,39 :: 		
0x0106	0x0100      	MOVLB       0
0x0108	0x6B99      	CLRF        I2C1_Start_j_L0, 1
0x010A	0x6B9A      	CLRF        I2C1_Start_j_L0+1, 1
L_I2C1_Start2:
0x010C	0x519A      	MOVF        I2C1_Start_j_L0+1, 0, 1
0x010E	0x0812      	SUBLW       18
0x0110	0xE102      	BNZ         L__I2C1_Start27
0x0112	0x5199      	MOVF        I2C1_Start_j_L0, 0, 1
0x0114	0x088E      	SUBLW       142
L__I2C1_Start27:
0x0116	0xE308      	BNC         L_I2C1_Start3
;__Lib_I2C_b10.c,40 :: 		
0x0118	0xDF94      	RCALL       _I2C1_Is_Idle
0x011A	0x5200      	MOVF        R0, 1 
0x011C	0xE001      	BZ          L_I2C1_Start5
;__Lib_I2C_b10.c,41 :: 		
0x011E	0xD004      	BRA         L_I2C1_Start3
L_I2C1_Start5:
;__Lib_I2C_b10.c,39 :: 		
0x0120	0x0100      	MOVLB       0
0x0122	0x4B99      	INFSNZ      I2C1_Start_j_L0, 1, 1
0x0124	0x2B9A      	INCF        I2C1_Start_j_L0+1, 1, 1
;__Lib_I2C_b10.c,42 :: 		
0x0126	0xD7F2      	BRA         L_I2C1_Start2
L_I2C1_Start3:
0x0128	0x0100      	MOVLB       0
;__Lib_I2C_b10.c,44 :: 		
0x012A	0x0E12      	MOVLW       18
0x012C	0x5D9A      	SUBWF       I2C1_Start_j_L0+1, 0, 1
0x012E	0xE102      	BNZ         L__I2C1_Start28
0x0130	0x0E8F      	MOVLW       143
0x0132	0x5D99      	SUBWF       I2C1_Start_j_L0, 0, 1
L__I2C1_Start28:
0x0134	0xE303      	BNC         L_I2C1_Start6
;__Lib_I2C_b10.c,45 :: 		
0x0136	0x0E7B      	MOVLW       123
0x0138	0x6E00      	MOVWF       R0 
0x013A	0xD005      	BRA         L_end_I2C1_Start
L_I2C1_Start6:
;__Lib_I2C_b10.c,47 :: 		
0x013C	0x80C5      	BSF         SSPCON2, 0 
;__Lib_I2C_b10.c,48 :: 		
L_I2C1_Start8:
0x013E	0xA0C5      	BTFSS       SSPCON2, 0 
0x0140	0xD001      	BRA         L_I2C1_Start9
;__Lib_I2C_b10.c,49 :: 		
0x0142	0xD7FD      	BRA         L_I2C1_Start8
L_I2C1_Start9:
;__Lib_I2C_b10.c,50 :: 		
0x0144	0x6A00      	CLRF        R0 
;__Lib_I2C_b10.c,52 :: 		
L_end_I2C1_Start:
0x0146	0x0012      	RETURN      0
; end of _I2C1_Start
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0148	0x0100      	MOVLB       0
0x014A	0x918D      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,53 :: 		
0x014C	0xF09BC099  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x0150	0xDF85      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0152	0x818D      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0154	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Div_8X8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x0156	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x0158	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x015A	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x015C	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x015E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x0160	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x0162	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x0164	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x0166	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x0168	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x016A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x016C	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x016E	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x0170	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8X8_U:
0x0172	0x0012      	RETURN      0
; end of _Div_8X8_U
_I2C1_Stop:
;__Lib_I2C_b10.c,105 :: 		
;__Lib_I2C_b10.c,106 :: 		
0x0174	0x84C5      	BSF         SSPCON2, 2 
;__Lib_I2C_b10.c,107 :: 		
L_end_I2C1_Stop:
0x0176	0x0012      	RETURN      0
; end of _I2C1_Stop
_I2C1_Rd:
;__Lib_I2C_b10.c,60 :: 		
;__Lib_I2C_b10.c,63 :: 		
0x0178	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_b10.c,64 :: 		
0x017A	0x86C5      	BSF         SSPCON2, 3 
;__Lib_I2C_b10.c,66 :: 		
L_I2C1_Rd12:
0x017C	0xB69E      	BTFSC       PIR1, 3 
0x017E	0xD001      	BRA         L_I2C1_Rd13
;__Lib_I2C_b10.c,67 :: 		
0x0180	0xD7FD      	BRA         L_I2C1_Rd12
L_I2C1_Rd13:
;__Lib_I2C_b10.c,69 :: 		
0x0182	0xF001CFC9  	MOVFF       SSPBUF, R1
;__Lib_I2C_b10.c,70 :: 		
0x0186	0x0100      	MOVLB       0
0x0188	0x5199      	MOVF        FARG_I2C1_Rd_ack, 0, 1
0x018A	0x0A00      	XORLW       0
0x018C	0xE102      	BNZ         L_I2C1_Rd14
;__Lib_I2C_b10.c,71 :: 		
0x018E	0x8AC5      	BSF         SSPCON2, 5 
0x0190	0xD001      	BRA         L_I2C1_Rd15
L_I2C1_Rd14:
;__Lib_I2C_b10.c,73 :: 		
0x0192	0x9AC5      	BCF         SSPCON2, 5 
L_I2C1_Rd15:
;__Lib_I2C_b10.c,75 :: 		
0x0194	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_b10.c,76 :: 		
0x0196	0x88C5      	BSF         SSPCON2, 4 
;__Lib_I2C_b10.c,78 :: 		
L_I2C1_Rd16:
0x0198	0xB69E      	BTFSC       PIR1, 3 
0x019A	0xD001      	BRA         L_I2C1_Rd17
;__Lib_I2C_b10.c,79 :: 		
0x019C	0xD7FD      	BRA         L_I2C1_Rd16
L_I2C1_Rd17:
;__Lib_I2C_b10.c,81 :: 		
0x019E	0xF000C001  	MOVFF       R1, R0
;__Lib_I2C_b10.c,82 :: 		
L_end_I2C1_Rd:
0x01A2	0x0012      	RETURN      0
; end of _I2C1_Rd
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x01A4	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x01A6	0x0E80      	MOVLW       128
0x01A8	0x0100      	MOVLB       0
0x01AA	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x01AC	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x01AE	0x0EC0      	MOVLW       192
0x01B0	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x01B2	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x01B4	0x0E94      	MOVLW       148
0x01B6	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x01B8	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x01BA	0x0ED4      	MOVLW       212
0x01BC	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x01BE	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x01C0	0x0E80      	MOVLW       128
0x01C2	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x01C4	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x01C6	0x0100      	MOVLB       0
0x01C8	0x5194      	MOVF        FARG_Lcd_Out_row, 0, 1
0x01CA	0x0A01      	XORLW       1
0x01CC	0xE0EC      	BZ          L_Lcd_Out13
0x01CE	0x5194      	MOVF        FARG_Lcd_Out_row, 0, 1
0x01D0	0x0A02      	XORLW       2
0x01D2	0xE0ED      	BZ          L_Lcd_Out14
0x01D4	0x5194      	MOVF        FARG_Lcd_Out_row, 0, 1
0x01D6	0x0A03      	XORLW       3
0x01D8	0xE0ED      	BZ          L_Lcd_Out15
0x01DA	0x5194      	MOVF        FARG_Lcd_Out_row, 0, 1
0x01DC	0x0A04      	XORLW       4
0x01DE	0xE0ED      	BZ          L_Lcd_Out16
0x01E0	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x01E2	0x0595      	DECF        FARG_Lcd_Out_column, 0, 1
0x01E4	0x6E00      	MOVWF       R0 
0x01E6	0x5194      	MOVF        FARG_Lcd_Out_row, 0, 1
0x01E8	0x2600      	ADDWF       R0, 1 
0x01EA	0xF094C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x01EE	0xF09BC000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x01F2	0xDF34      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x01F4	0x918D      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,198 :: 		
0x01F6	0x6B98      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x01F8	0x5198      	MOVF        Lcd_Out_i_L0, 0, 1
0x01FA	0x2596      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x01FC	0x6EE9      	MOVWF       FSR0L 
0x01FE	0x0E00      	MOVLW       0
0x0200	0x2197      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0202	0x6EEA      	MOVWF       FSR0H 
0x0204	0x52EE      	MOVF        POSTINC0, 1 
0x0206	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0208	0x5198      	MOVF        Lcd_Out_i_L0, 0, 1
0x020A	0x2596      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x020C	0x6EE9      	MOVWF       FSR0L 
0x020E	0x0E00      	MOVLW       0
0x0210	0x2197      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0212	0x6EEA      	MOVWF       FSR0H 
0x0214	0xF099CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0218	0xDF97      	RCALL       _Lcd_Chr_CP
0x021A	0x2B98      	INCF        Lcd_Out_i_L0, 1, 1
0x021C	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x021E	0x818D      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0220	0x0012      	RETURN      0
; end of _Lcd_Out
_LSBofBCD:
;EE366_Project.c,42 :: 		unsigned char LSBofBCD(unsigned char x) {
;EE366_Project.c,43 :: 		return ((x & 0x0F) + '0');
0x0222	0x0E0F      	MOVLW       15
0x0224	0x0100      	MOVLB       0
0x0226	0x1594      	ANDWF       FARG_LSBofBCD_x, 0, 1
0x0228	0x6E00      	MOVWF       R0 
0x022A	0x0E30      	MOVLW       48
0x022C	0x2600      	ADDWF       R0, 1 
;EE366_Project.c,44 :: 		}
L_end_LSBofBCD:
0x022E	0x0012      	RETURN      0
; end of _LSBofBCD
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0230	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0232	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0236	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0238	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x023A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x023C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x023E	0x0012      	RETURN      0
; end of ___CC2DW
_I2C1_Init:
;__Lib_I2C_b10.c,4 :: 		
;__Lib_I2C_b10.c,11 :: 		
0x0240	0x9093      	BCF         TRISB0_bit, BitPos(TRISB0_bit+0) 
;__Lib_I2C_b10.c,12 :: 		
0x0242	0x9293      	BCF         TRISB1_bit, BitPos(TRISB1_bit+0) 
;__Lib_I2C_b10.c,15 :: 		
0x0244	0x908A      	BCF         LATB0_bit, BitPos(LATB0_bit+0) 
;__Lib_I2C_b10.c,16 :: 		
0x0246	0x928A      	BCF         LATB1_bit, BitPos(LATB1_bit+0) 
;__Lib_I2C_b10.c,19 :: 		
0x0248	0x8093      	BSF         TRISB0_bit, BitPos(TRISB0_bit+0) 
;__Lib_I2C_b10.c,20 :: 		
0x024A	0x8293      	BSF         TRISB1_bit, BitPos(TRISB1_bit+0) 
;__Lib_I2C_b10.c,22 :: 		
0x024C	0x9EC7      	BCF         SSPSTAT, 7 
;__Lib_I2C_b10.c,23 :: 		
0x024E	0x9CC7      	BCF         SSPSTAT, 6 
;__Lib_I2C_b10.c,24 :: 		
0x0250	0x0E38      	MOVLW       56
0x0252	0x6EC6      	MOVWF       SSPCON1 
;__Lib_I2C_b10.c,27 :: 		
L_end_I2C1_Init:
0x0254	0x0012      	RETURN      0
; end of _I2C1_Init
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0256	0x9496      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x0258	0x9096      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x025A	0x9895      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x025C	0x9A95      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x025E	0x9C95      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x0260	0x9E95      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x0262	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x0264	0x9084      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x0266	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x0268	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x026A	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x026C	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x026E	0xDED6      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0270	0xDED5      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0272	0xDED4      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0274	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x0276	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x0278	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x027A	0xDEE0      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x027C	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x027E	0xDECE      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0280	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x0282	0xDEDC      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0284	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x0286	0xDECA      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0288	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x028A	0xDED8      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x028C	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x028E	0xDEC6      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0290	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x0292	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x0294	0xDED3      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0296	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x0298	0xDEC1      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x029A	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x029C	0xDECF      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x029E	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x02A0	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x02A2	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x02A4	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x02A6	0xDECA      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x02A8	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x02AA	0xDEB8      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x02AC	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x02AE	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x02B0	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x02B2	0xDEC4      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x02B4	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x02B6	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x02B8	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x02BA	0xDEC0      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x02BC	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x02BE	0xDEAE      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x02C0	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x02C2	0xDEBC      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x02C4	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x02C6	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x02C8	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x02CA	0xDEB8      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x02CC	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x02CE	0xDEA6      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x02D0	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x02D2	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x02D4	0xDEB3      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x02D6	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x02D8	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x02DA	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x02DC	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x02DE	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x02E0	0x8484      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x02E2	0xDEAC      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x02E4	0x9484      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x02E6	0xDE9A      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x02E8	0x0100      	MOVLB       0
0x02EA	0x818D      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x02EC	0x0012      	RETURN      0
; end of _Lcd_Init
_MSBofBCD:
;EE366_Project.c,38 :: 		unsigned char MSBofBCD(unsigned char x) {
;EE366_Project.c,39 :: 		return ((x >> 4) + '0');
0x02EE	0xF000C094  	MOVFF       FARG_MSBofBCD_x, R0
0x02F2	0x3200      	RRCF        R0, 1 
0x02F4	0x9E00      	BCF         R0, 7 
0x02F6	0x3200      	RRCF        R0, 1 
0x02F8	0x9E00      	BCF         R0, 7 
0x02FA	0x3200      	RRCF        R0, 1 
0x02FC	0x9E00      	BCF         R0, 7 
0x02FE	0x3200      	RRCF        R0, 1 
0x0300	0x9E00      	BCF         R0, 7 
0x0302	0x0E30      	MOVLW       48
0x0304	0x2600      	ADDWF       R0, 1 
;EE366_Project.c,40 :: 		}
L_end_MSBofBCD:
0x0306	0x0012      	RETURN      0
; end of _MSBofBCD
_Dec2Bcd:
;__Lib_Conversions.c,304 :: 		
;__Lib_Conversions.c,305 :: 		
0x0308	0x0100      	MOVLB       0
0x030A	0x6B95      	CLRF        Dec2Bcd_tmp_L0, 1
;__Lib_Conversions.c,307 :: 		
0x030C	0x5194      	MOVF        FARG_Dec2Bcd_decnum, 0, 1
0x030E	0x0809      	SUBLW       9
0x0310	0xE21B      	BC          L_Dec2Bcd64
;__Lib_Conversions.c,308 :: 		
0x0312	0x0E0A      	MOVLW       10
0x0314	0x6E04      	MOVWF       R4 
0x0316	0xF000C094  	MOVFF       FARG_Dec2Bcd_decnum, R0
0x031A	0xDF1D      	RCALL       _Div_8X8_U
0x031C	0xF095C000  	MOVFF       R0, Dec2Bcd_tmp_L0
;__Lib_Conversions.c,309 :: 		
0x0320	0xF095C000  	MOVFF       R0, Dec2Bcd_tmp_L0
0x0324	0x3795      	RLCF        Dec2Bcd_tmp_L0, 1, 1
0x0326	0x9195      	BCF         Dec2Bcd_tmp_L0, 0, 1
0x0328	0x3795      	RLCF        Dec2Bcd_tmp_L0, 1, 1
0x032A	0x9195      	BCF         Dec2Bcd_tmp_L0, 0, 1
0x032C	0x3795      	RLCF        Dec2Bcd_tmp_L0, 1, 1
0x032E	0x9195      	BCF         Dec2Bcd_tmp_L0, 0, 1
0x0330	0x3795      	RLCF        Dec2Bcd_tmp_L0, 1, 1
0x0332	0x9195      	BCF         Dec2Bcd_tmp_L0, 0, 1
;__Lib_Conversions.c,310 :: 		
0x0334	0x0E0A      	MOVLW       10
0x0336	0x6E04      	MOVWF       R4 
0x0338	0xF000C094  	MOVFF       FARG_Dec2Bcd_decnum, R0
0x033C	0xDF0C      	RCALL       _Div_8X8_U
0x033E	0xF000C008  	MOVFF       R8, R0
0x0342	0x5000      	MOVF        R0, 0 
0x0344	0x1395      	IORWF       Dec2Bcd_tmp_L0, 1, 1
;__Lib_Conversions.c,311 :: 		
0x0346	0xD002      	BRA         L_Dec2Bcd65
L_Dec2Bcd64:
;__Lib_Conversions.c,312 :: 		
0x0348	0xF095C094  	MOVFF       FARG_Dec2Bcd_decnum, Dec2Bcd_tmp_L0
L_Dec2Bcd65:
;__Lib_Conversions.c,313 :: 		
0x034C	0xF000C095  	MOVFF       Dec2Bcd_tmp_L0, R0
;__Lib_Conversions.c,314 :: 		
L_end_Dec2Bcd:
0x0350	0x0012      	RETURN      0
; end of _Dec2Bcd
_Bcd2Dec:
;__Lib_Conversions.c,319 :: 		
;__Lib_Conversions.c,320 :: 		
;__Lib_Conversions.c,322 :: 		
0x0352	0xF000C094  	MOVFF       FARG_Bcd2Dec_bcdnum, R0
0x0356	0x3200      	RRCF        R0, 1 
0x0358	0x9E00      	BCF         R0, 7 
0x035A	0x3200      	RRCF        R0, 1 
0x035C	0x9E00      	BCF         R0, 7 
0x035E	0x3200      	RRCF        R0, 1 
0x0360	0x9E00      	BCF         R0, 7 
0x0362	0x3200      	RRCF        R0, 1 
0x0364	0x9E00      	BCF         R0, 7 
0x0366	0x0E0A      	MOVLW       10
0x0368	0x0200      	MULWF       R0 
0x036A	0xF001CFF3  	MOVFF       PRODL, R1
;__Lib_Conversions.c,323 :: 		
0x036E	0x0E0F      	MOVLW       15
0x0370	0x0100      	MOVLB       0
0x0372	0x1594      	ANDWF       FARG_Bcd2Dec_bcdnum, 0, 1
0x0374	0x6E00      	MOVWF       R0 
0x0376	0x5001      	MOVF        R1, 0 
0x0378	0x2600      	ADDWF       R0, 1 
;__Lib_Conversions.c,324 :: 		
;__Lib_Conversions.c,325 :: 		
L_end_Bcd2Dec:
0x037A	0x0012      	RETURN      0
; end of _Bcd2Dec
_readFromRTC:
;EE366_Project.c,17 :: 		unsigned short readFromRTC(unsigned short address) {
;EE366_Project.c,19 :: 		I2C1_Start();  			//Issue I2C start signal
0x037C	0xDEC4      	RCALL       _I2C1_Start
;EE366_Project.c,20 :: 		I2C1_Wr(0xD0); 			//DS1307 address (0x68) + Write (zero) = 0xD0
0x037E	0x0ED0      	MOVLW       208
0x0380	0x0100      	MOVLB       0
0x0382	0x6F99      	MOVWF       FARG_I2C1_Wr_data_, 1
0x0384	0xDEAA      	RCALL       _I2C1_Wr
;EE366_Project.c,21 :: 		I2C1_Wr(address);		//Adress of DS1307 location
0x0386	0xF099C094  	MOVFF       FARG_readFromRTC_address, FARG_I2C1_Wr_data_
0x038A	0xDEA7      	RCALL       _I2C1_Wr
;EE366_Project.c,22 :: 		I2C1_Repeated_Start();	//Issue repeated start signal
0x038C	0xDEB7      	RCALL       _I2C1_Repeated_Start
;EE366_Project.c,23 :: 		I2C1_Wr(0xD1); 			//Address 0x68 + Read (one) = 0xD1
0x038E	0x0ED1      	MOVLW       209
0x0390	0x0100      	MOVLB       0
0x0392	0x6F99      	MOVWF       FARG_I2C1_Wr_data_, 1
0x0394	0xDEA2      	RCALL       _I2C1_Wr
;EE366_Project.c,24 :: 		readValues=I2C1_Rd(0); 	//Read 1 byte from DS1307, send not acknowledge
0x0396	0x0100      	MOVLB       0
0x0398	0x6B99      	CLRF        FARG_I2C1_Rd_ack, 1
0x039A	0xDEEE      	RCALL       _I2C1_Rd
0x039C	0xF095C000  	MOVFF       R0, readFromRTC_readValues_L0
;EE366_Project.c,25 :: 		I2C1_Stop(); 			//Issue stop signal
0x03A0	0xDEE9      	RCALL       _I2C1_Stop
;EE366_Project.c,26 :: 		return(readValues);
0x03A2	0xF000C095  	MOVFF       readFromRTC_readValues_L0, R0
;EE366_Project.c,27 :: 		}
L_end_readFromRTC:
0x03A6	0x0012      	RETURN      0
; end of _readFromRTC
_alarmPattern:
;EE366_Project.c,47 :: 		void alarmPattern(int choice){
;EE366_Project.c,48 :: 		if (choice == 1) {
0x03A8	0x0E00      	MOVLW       0
0x03AA	0x0100      	MOVLB       0
0x03AC	0x1995      	XORWF       FARG_alarmPattern_choice+1, 0, 1
0x03AE	0xE102      	BNZ         L__alarmPattern91
0x03B0	0x0E01      	MOVLW       1
0x03B2	0x1994      	XORWF       FARG_alarmPattern_choice, 0, 1
L__alarmPattern91:
0x03B4	0xE11B      	BNZ         L_alarmPattern0
;EE366_Project.c,49 :: 		PORTD.B0=1; PORTD.B1=0; PORTD.B2=1; PORTD.B3=0;
0x03B6	0x8083      	BSF         PORTD, 0 
0x03B8	0x9283      	BCF         PORTD, 1 
0x03BA	0x8483      	BSF         PORTD, 2 
0x03BC	0x9683      	BCF         PORTD, 3 
;EE366_Project.c,50 :: 		Delay_ms(70);
0x03BE	0x0EB6      	MOVLW       182
0x03C0	0x6E0C      	MOVWF       R12, 0
0x03C2	0x0ED0      	MOVLW       208
0x03C4	0x6E0D      	MOVWF       R13, 0
L_alarmPattern1:
0x03C6	0x2E0D      	DECFSZ      R13, 1, 0
0x03C8	0xD7FE      	BRA         L_alarmPattern1
0x03CA	0x2E0C      	DECFSZ      R12, 1, 0
0x03CC	0xD7FC      	BRA         L_alarmPattern1
0x03CE	0x0000      	NOP
;EE366_Project.c,51 :: 		PORTD.B0=0; PORTD.B1=1; PORTD.B2=0; PORTD.B3=1;
0x03D0	0x9083      	BCF         PORTD, 0 
0x03D2	0x8283      	BSF         PORTD, 1 
0x03D4	0x9483      	BCF         PORTD, 2 
0x03D6	0x8683      	BSF         PORTD, 3 
;EE366_Project.c,52 :: 		Delay_ms(70);
0x03D8	0x0EB6      	MOVLW       182
0x03DA	0x6E0C      	MOVWF       R12, 0
0x03DC	0x0ED0      	MOVLW       208
0x03DE	0x6E0D      	MOVWF       R13, 0
L_alarmPattern2:
0x03E0	0x2E0D      	DECFSZ      R13, 1, 0
0x03E2	0xD7FE      	BRA         L_alarmPattern2
0x03E4	0x2E0C      	DECFSZ      R12, 1, 0
0x03E6	0xD7FC      	BRA         L_alarmPattern2
0x03E8	0x0000      	NOP
;EE366_Project.c,53 :: 		}
0x03EA	0xD041      	BRA         L_alarmPattern3
L_alarmPattern0:
;EE366_Project.c,54 :: 		else if (choice == 2) {
0x03EC	0x0E00      	MOVLW       0
0x03EE	0x1995      	XORWF       FARG_alarmPattern_choice+1, 0, 1
0x03F0	0xE102      	BNZ         L__alarmPattern92
0x03F2	0x0E02      	MOVLW       2
0x03F4	0x1994      	XORWF       FARG_alarmPattern_choice, 0, 1
L__alarmPattern92:
0x03F6	0xE11B      	BNZ         L_alarmPattern4
;EE366_Project.c,55 :: 		PORTD.B0=0; PORTD.B1=1; PORTD.B2=1; PORTD.B3=0;
0x03F8	0x9083      	BCF         PORTD, 0 
0x03FA	0x8283      	BSF         PORTD, 1 
0x03FC	0x8483      	BSF         PORTD, 2 
0x03FE	0x9683      	BCF         PORTD, 3 
;EE366_Project.c,56 :: 		Delay_ms(70);
0x0400	0x0EB6      	MOVLW       182
0x0402	0x6E0C      	MOVWF       R12, 0
0x0404	0x0ED0      	MOVLW       208
0x0406	0x6E0D      	MOVWF       R13, 0
L_alarmPattern5:
0x0408	0x2E0D      	DECFSZ      R13, 1, 0
0x040A	0xD7FE      	BRA         L_alarmPattern5
0x040C	0x2E0C      	DECFSZ      R12, 1, 0
0x040E	0xD7FC      	BRA         L_alarmPattern5
0x0410	0x0000      	NOP
;EE366_Project.c,57 :: 		PORTD.B0=1; PORTD.B1=0; PORTD.B2=0; PORTD.B3=1;
0x0412	0x8083      	BSF         PORTD, 0 
0x0414	0x9283      	BCF         PORTD, 1 
0x0416	0x9483      	BCF         PORTD, 2 
0x0418	0x8683      	BSF         PORTD, 3 
;EE366_Project.c,58 :: 		Delay_ms(70);
0x041A	0x0EB6      	MOVLW       182
0x041C	0x6E0C      	MOVWF       R12, 0
0x041E	0x0ED0      	MOVLW       208
0x0420	0x6E0D      	MOVWF       R13, 0
L_alarmPattern6:
0x0422	0x2E0D      	DECFSZ      R13, 1, 0
0x0424	0xD7FE      	BRA         L_alarmPattern6
0x0426	0x2E0C      	DECFSZ      R12, 1, 0
0x0428	0xD7FC      	BRA         L_alarmPattern6
0x042A	0x0000      	NOP
;EE366_Project.c,59 :: 		}
0x042C	0xD020      	BRA         L_alarmPattern7
L_alarmPattern4:
;EE366_Project.c,60 :: 		else if (choice == 3) {
0x042E	0x0E00      	MOVLW       0
0x0430	0x1995      	XORWF       FARG_alarmPattern_choice+1, 0, 1
0x0432	0xE102      	BNZ         L__alarmPattern93
0x0434	0x0E03      	MOVLW       3
0x0436	0x1994      	XORWF       FARG_alarmPattern_choice, 0, 1
L__alarmPattern93:
0x0438	0xE11A      	BNZ         L_alarmPattern8
;EE366_Project.c,61 :: 		PORTD.B0=1; PORTD.B1=1; PORTD.B2=1; PORTD.B3=1;
0x043A	0x8083      	BSF         PORTD, 0 
0x043C	0x8283      	BSF         PORTD, 1 
0x043E	0x8483      	BSF         PORTD, 2 
0x0440	0x8683      	BSF         PORTD, 3 
;EE366_Project.c,62 :: 		Delay_ms(70);
0x0442	0x0EB6      	MOVLW       182
0x0444	0x6E0C      	MOVWF       R12, 0
0x0446	0x0ED0      	MOVLW       208
0x0448	0x6E0D      	MOVWF       R13, 0
L_alarmPattern9:
0x044A	0x2E0D      	DECFSZ      R13, 1, 0
0x044C	0xD7FE      	BRA         L_alarmPattern9
0x044E	0x2E0C      	DECFSZ      R12, 1, 0
0x0450	0xD7FC      	BRA         L_alarmPattern9
0x0452	0x0000      	NOP
;EE366_Project.c,63 :: 		PORTD.B0=0; PORTD.B1=0; PORTD.B2=0; PORTD.B3=0;
0x0454	0x9083      	BCF         PORTD, 0 
0x0456	0x9283      	BCF         PORTD, 1 
0x0458	0x9483      	BCF         PORTD, 2 
0x045A	0x9683      	BCF         PORTD, 3 
;EE366_Project.c,64 :: 		Delay_ms(70);
0x045C	0x0EB6      	MOVLW       182
0x045E	0x6E0C      	MOVWF       R12, 0
0x0460	0x0ED0      	MOVLW       208
0x0462	0x6E0D      	MOVWF       R13, 0
L_alarmPattern10:
0x0464	0x2E0D      	DECFSZ      R13, 1, 0
0x0466	0xD7FE      	BRA         L_alarmPattern10
0x0468	0x2E0C      	DECFSZ      R12, 1, 0
0x046A	0xD7FC      	BRA         L_alarmPattern10
0x046C	0x0000      	NOP
;EE366_Project.c,65 :: 		}
L_alarmPattern8:
L_alarmPattern7:
L_alarmPattern3:
;EE366_Project.c,66 :: 		}
L_end_alarmPattern:
0x046E	0x0012      	RETURN      0
; end of _alarmPattern
_writeOnRTC:
;EE366_Project.c,29 :: 		void writeOnRTC(unsigned short address, unsigned short writeValues) {
;EE366_Project.c,30 :: 		I2C1_Start(); 			//Issue I2C start signal
0x0470	0xDE4A      	RCALL       _I2C1_Start
;EE366_Project.c,31 :: 		I2C1_Wr(0xD0); 			//DS1307 address (0x68) + Write (zero) = 0xD0
0x0472	0x0ED0      	MOVLW       208
0x0474	0x0100      	MOVLB       0
0x0476	0x6F99      	MOVWF       FARG_I2C1_Wr_data_, 1
0x0478	0xDE30      	RCALL       _I2C1_Wr
;EE366_Project.c,32 :: 		I2C1_Wr(address); 		//Address of DS1307 location
0x047A	0xF099C094  	MOVFF       FARG_writeOnRTC_address, FARG_I2C1_Wr_data_
0x047E	0xDE2D      	RCALL       _I2C1_Wr
;EE366_Project.c,33 :: 		I2C1_Wr(writeValues);	//Send the data we want to write
0x0480	0xF099C095  	MOVFF       FARG_writeOnRTC_writeValues, FARG_I2C1_Wr_data_
0x0484	0xDE2A      	RCALL       _I2C1_Wr
;EE366_Project.c,34 :: 		I2C1_Stop(); 			//Issue stop signal
0x0486	0xDE76      	RCALL       _I2C1_Stop
;EE366_Project.c,35 :: 		}
L_end_writeOnRTC:
0x0488	0x0012      	RETURN      0
; end of _writeOnRTC
_main:
0x048A	0xF006EC81  	CALL        3330, 0
;EE366_Project.c,85 :: 		void main() {
;EE366_Project.c,87 :: 		ADCON1 = 0x0F; 				//IO -> digital
0x048E	0x0E0F      	MOVLW       15
0x0490	0x6EC1      	MOVWF       ADCON1 
;EE366_Project.c,88 :: 		TRISD.B0 = 0;				//PORTD (LED) -> output
0x0492	0x9095      	BCF         TRISD, 0 
;EE366_Project.c,89 :: 		TRISD.B1 = 0;
0x0494	0x9295      	BCF         TRISD, 1 
;EE366_Project.c,90 :: 		TRISD.B2 = 0;
0x0496	0x9495      	BCF         TRISD, 2 
;EE366_Project.c,91 :: 		TRISD.B3 = 0;
0x0498	0x9695      	BCF         TRISD, 3 
;EE366_Project.c,92 :: 		TRISA = 0xFF; 				//PORTA (buttons) -> input
0x049A	0x0EFF      	MOVLW       255
0x049C	0x6E92      	MOVWF       TRISA 
;EE366_Project.c,93 :: 		OSCCON = 0x73; 				//8MHz internal oscillator
0x049E	0x0E73      	MOVLW       115
0x04A0	0x6ED3      	MOVWF       OSCCON 
;EE366_Project.c,94 :: 		I2C1_Init(100000);			//DS1307 I2C running at 100KHz
0x04A2	0x0E14      	MOVLW       20
0x04A4	0x6EC8      	MOVWF       SSPADD 
0x04A6	0xDECC      	RCALL       _I2C1_Init
;EE366_Project.c,95 :: 		Lcd_Init();					//Initialize LCD
0x04A8	0xDED6      	RCALL       _Lcd_Init
;EE366_Project.c,96 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);   //LCD cursor off
0x04AA	0x0E0C      	MOVLW       12
0x04AC	0x6F9B      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x04AE	0xDDD6      	RCALL       _Lcd_Cmd
;EE366_Project.c,98 :: 		Lcd_out(1,1,"  Digital  Clock  ");
0x04B0	0x0E01      	MOVLW       1
0x04B2	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x04B4	0x0E01      	MOVLW       1
0x04B6	0x6F95      	MOVWF       FARG_Lcd_Out_column, 1
0x04B8	0x0E2C      	MOVLW       ?lstr1_EE366_Project
0x04BA	0x6F96      	MOVWF       FARG_Lcd_Out_text, 1
0x04BC	0x0E00      	MOVLW       hi_addr(?lstr1_EE366_Project)
0x04BE	0x6F97      	MOVWF       FARG_Lcd_Out_text+1, 1
0x04C0	0xDE71      	RCALL       _Lcd_Out
;EE366_Project.c,99 :: 		Lcd_out(2,1," by:  Ruba & Nada ");
0x04C2	0x0E02      	MOVLW       2
0x04C4	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x04C6	0x0E01      	MOVLW       1
0x04C8	0x6F95      	MOVWF       FARG_Lcd_Out_column, 1
0x04CA	0x0E19      	MOVLW       ?lstr2_EE366_Project
0x04CC	0x6F96      	MOVWF       FARG_Lcd_Out_text, 1
0x04CE	0x0E00      	MOVLW       hi_addr(?lstr2_EE366_Project)
0x04D0	0x6F97      	MOVWF       FARG_Lcd_Out_text+1, 1
0x04D2	0xDE68      	RCALL       _Lcd_Out
;EE366_Project.c,100 :: 		Delay_ms(500);
0x04D4	0x0E06      	MOVLW       6
0x04D6	0x6E0B      	MOVWF       R11, 0
0x04D8	0x0E13      	MOVLW       19
0x04DA	0x6E0C      	MOVWF       R12, 0
0x04DC	0x0EAD      	MOVLW       173
0x04DE	0x6E0D      	MOVWF       R13, 0
L_main11:
0x04E0	0x2E0D      	DECFSZ      R13, 1, 0
0x04E2	0xD7FE      	BRA         L_main11
0x04E4	0x2E0C      	DECFSZ      R12, 1, 0
0x04E6	0xD7FC      	BRA         L_main11
0x04E8	0x2E0B      	DECFSZ      R11, 1, 0
0x04EA	0xD7FA      	BRA         L_main11
0x04EC	0x0000      	NOP
0x04EE	0x0000      	NOP
;EE366_Project.c,101 :: 		Lcd_Cmd(_LCD_CLEAR);
0x04F0	0x0E01      	MOVLW       1
0x04F2	0x6F9B      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x04F4	0xDDB3      	RCALL       _Lcd_Cmd
;EE366_Project.c,103 :: 		while(1) {
L_main12:
;EE366_Project.c,105 :: 		set = 0;
0x04F6	0x6B88      	CLRF        _set, 1
;EE366_Project.c,106 :: 		if(PORTA.B1 == 0) { //SET btn is pressed
0x04F8	0xB280      	BTFSC       PORTA, 1 
0x04FA	0xD00F      	BRA         L_main14
;EE366_Project.c,107 :: 		Delay_ms(30);
0x04FC	0x0E4E      	MOVLW       78
0x04FE	0x6E0C      	MOVWF       R12, 0
0x0500	0x0EEB      	MOVLW       235
0x0502	0x6E0D      	MOVWF       R13, 0
L_main15:
0x0504	0x2E0D      	DECFSZ      R13, 1, 0
0x0506	0xD7FE      	BRA         L_main15
0x0508	0x2E0C      	DECFSZ      R12, 1, 0
0x050A	0xD7FC      	BRA         L_main15
;EE366_Project.c,108 :: 		if(PORTA.B1 == 0) {
0x050C	0xB280      	BTFSC       PORTA, 1 
0x050E	0xD005      	BRA         L_main16
;EE366_Project.c,109 :: 		setCounter++;
0x0510	0x2A3F      	INCF        _setCounter, 1 
;EE366_Project.c,110 :: 		if(setCounter >= 7)
0x0512	0x0E07      	MOVLW       7
0x0514	0x5C3F      	SUBWF       _setCounter, 0 
0x0516	0xB0D8      	BTFSC       STATUS, 0 
;EE366_Project.c,111 :: 		setCounter = 0;
0x0518	0x6A3F      	CLRF        _setCounter 
L_main17:
;EE366_Project.c,112 :: 		}
L_main16:
;EE366_Project.c,113 :: 		}
L_main14:
;EE366_Project.c,114 :: 		if(setCounter) { //Any value but zero
0x051A	0x523F      	MOVF        _setCounter, 1 
0x051C	0xB4D8      	BTFSC       STATUS, 2 
0x051E	0xD1C5      	BRA         L_main18
;EE366_Project.c,115 :: 		if(PORTA.B3 == 0) {
0x0520	0xB680      	BTFSC       PORTA, 3 
0x0522	0xD00C      	BRA         L_main19
;EE366_Project.c,116 :: 		Delay_ms(30);
0x0524	0x0E4E      	MOVLW       78
0x0526	0x6E0C      	MOVWF       R12, 0
0x0528	0x0EEB      	MOVLW       235
0x052A	0x6E0D      	MOVWF       R13, 0
L_main20:
0x052C	0x2E0D      	DECFSZ      R13, 1, 0
0x052E	0xD7FE      	BRA         L_main20
0x0530	0x2E0C      	DECFSZ      R12, 1, 0
0x0532	0xD7FC      	BRA         L_main20
;EE366_Project.c,117 :: 		if(PORTA.B3 == 0) //UP btn
0x0534	0xB680      	BTFSC       PORTA, 3 
0x0536	0xD002      	BRA         L_main21
;EE366_Project.c,118 :: 		set = 1;
0x0538	0x0E01      	MOVLW       1
0x053A	0x6F88      	MOVWF       _set, 1
L_main21:
;EE366_Project.c,119 :: 		}
L_main19:
;EE366_Project.c,120 :: 		if(PORTA.B4 == 0) {
0x053C	0xB880      	BTFSC       PORTA, 4 
0x053E	0xD00C      	BRA         L_main22
;EE366_Project.c,121 :: 		Delay_ms(30);
0x0540	0x0E4E      	MOVLW       78
0x0542	0x6E0C      	MOVWF       R12, 0
0x0544	0x0EEB      	MOVLW       235
0x0546	0x6E0D      	MOVWF       R13, 0
L_main23:
0x0548	0x2E0D      	DECFSZ      R13, 1, 0
0x054A	0xD7FE      	BRA         L_main23
0x054C	0x2E0C      	DECFSZ      R12, 1, 0
0x054E	0xD7FC      	BRA         L_main23
;EE366_Project.c,122 :: 		if(PORTA.B4 == 0) //DOWN btn
0x0550	0xB880      	BTFSC       PORTA, 4 
0x0552	0xD002      	BRA         L_main24
;EE366_Project.c,123 :: 		set = -1;
0x0554	0x0EFF      	MOVLW       255
0x0556	0x6F88      	MOVWF       _set, 1
L_main24:
;EE366_Project.c,124 :: 		}
L_main22:
;EE366_Project.c,126 :: 		if(setCounter && set) { //Any value but zero
0x0558	0x523F      	MOVF        _setCounter, 1 
0x055A	0xB4D8      	BTFSC       STATUS, 2 
0x055C	0xD1A6      	BRA         L_main27
0x055E	0x5388      	MOVF        _set, 1, 1
0x0560	0xB4D8      	BTFSC       STATUS, 2 
0x0562	0xD1A3      	BRA         L_main27
L__main85:
;EE366_Project.c,127 :: 		switch(setCounter) {
0x0564	0xD18B      	BRA         L_main28
;EE366_Project.c,128 :: 		case 1: //Hours
L_main30:
0x0566	0x0100      	MOVLB       0
;EE366_Project.c,129 :: 		hour = readFromRTC(2);			//Read hour from DS1307
0x0568	0x0E02      	MOVLW       2
0x056A	0x6F94      	MOVWF       FARG_readFromRTC_address, 1
0x056C	0xDF07      	RCALL       _readFromRTC
0x056E	0xF08BC000  	MOVFF       R0, _hour
0x0572	0x0E00      	MOVLW       0
0x0574	0x0100      	MOVLB       0
0x0576	0x6F8C      	MOVWF       _hour+1, 1
;EE366_Project.c,130 :: 		hour = Bcd2Dec(hour);			//Convert reading to decimal
0x0578	0xF094C08B  	MOVFF       _hour, FARG_Bcd2Dec_bcdnum
0x057C	0xDEEA      	RCALL       _Bcd2Dec
0x057E	0xF08BC000  	MOVFF       R0, _hour
0x0582	0x0E00      	MOVLW       0
0x0584	0x6F8C      	MOVWF       _hour+1, 1
;EE366_Project.c,131 :: 		hour = hour + set;				//Increment or decrement
0x0586	0x5188      	MOVF        _set, 0, 1
0x0588	0x258B      	ADDWF       _hour, 0, 1
0x058A	0x6E01      	MOVWF       R1 
0x058C	0x0E00      	MOVLW       0
0x058E	0xBF88      	BTFSC       _set, 7, 1
0x0590	0x0EFF      	MOVLW       255
0x0592	0x218C      	ADDWFC      _hour+1, 0, 1
0x0594	0x6E02      	MOVWF       R2 
0x0596	0xF08BC001  	MOVFF       R1, _hour
0x059A	0xF08CC002  	MOVFF       R2, _hour+1
;EE366_Project.c,132 :: 		if(hour >= 24)					//If at 23 and user increments
0x059E	0x0E80      	MOVLW       128
0x05A0	0x1802      	XORWF       R2, 0 
0x05A2	0x6E00      	MOVWF       R0 
0x05A4	0x0E80      	MOVLW       128
0x05A6	0x5C00      	SUBWF       R0, 0 
0x05A8	0xE102      	BNZ         L__main95
0x05AA	0x0E18      	MOVLW       24
0x05AC	0x5C01      	SUBWF       R1, 0 
L__main95:
0x05AE	0xE303      	BNC         L_main31
;EE366_Project.c,133 :: 		hour = 0;					//Reset to 0 (midnight)
0x05B0	0x6B8B      	CLRF        _hour, 1
0x05B2	0x6B8C      	CLRF        _hour+1, 1
0x05B4	0xD00D      	BRA         L_main32
L_main31:
;EE366_Project.c,134 :: 		else if(hour < 0)				//If at 0 and user decrements
0x05B6	0x0E80      	MOVLW       128
0x05B8	0x198C      	XORWF       _hour+1, 0, 1
0x05BA	0x6E00      	MOVWF       R0 
0x05BC	0x0E80      	MOVLW       128
0x05BE	0x5C00      	SUBWF       R0, 0 
0x05C0	0xE102      	BNZ         L__main96
0x05C2	0x0E00      	MOVLW       0
0x05C4	0x5D8B      	SUBWF       _hour, 0, 1
L__main96:
0x05C6	0xE204      	BC          L_main33
;EE366_Project.c,135 :: 		hour = 23;					//Go back to 23
0x05C8	0x0E17      	MOVLW       23
0x05CA	0x6F8B      	MOVWF       _hour, 1
0x05CC	0x0E00      	MOVLW       0
0x05CE	0x6F8C      	MOVWF       _hour+1, 1
L_main33:
L_main32:
;EE366_Project.c,136 :: 		hour = Dec2Bcd(hour);			//Convert back to BCD
0x05D0	0xF094C08B  	MOVFF       _hour, FARG_Dec2Bcd_decnum
0x05D4	0xDE99      	RCALL       _Dec2Bcd
0x05D6	0xF08BC000  	MOVFF       R0, _hour
0x05DA	0x0E00      	MOVLW       0
0x05DC	0x6F8C      	MOVWF       _hour+1, 1
;EE366_Project.c,137 :: 		writeOnRTC(2, hour);			//Write hour on DS1307
0x05DE	0x0E02      	MOVLW       2
0x05E0	0x6F94      	MOVWF       FARG_writeOnRTC_address, 1
0x05E2	0xF095C08B  	MOVFF       _hour, FARG_writeOnRTC_writeValues
0x05E6	0xDF44      	RCALL       _writeOnRTC
;EE366_Project.c,138 :: 		break;
0x05E8	0xD160      	BRA         L_main29
;EE366_Project.c,140 :: 		case 2: //Minutes
L_main34:
;EE366_Project.c,141 :: 		minute = readFromRTC(1);		//Read minute from DS1307
0x05EA	0x0E01      	MOVLW       1
0x05EC	0x0100      	MOVLB       0
0x05EE	0x6F94      	MOVWF       FARG_readFromRTC_address, 1
0x05F0	0xDEC5      	RCALL       _readFromRTC
0x05F2	0xF089C000  	MOVFF       R0, _minute
0x05F6	0x0E00      	MOVLW       0
0x05F8	0x0100      	MOVLB       0
0x05FA	0x6F8A      	MOVWF       _minute+1, 1
;EE366_Project.c,142 :: 		minute = Bcd2Dec(minute);		//Convert reading to decimal
0x05FC	0xF094C089  	MOVFF       _minute, FARG_Bcd2Dec_bcdnum
0x0600	0xDEA8      	RCALL       _Bcd2Dec
0x0602	0xF089C000  	MOVFF       R0, _minute
0x0606	0x0E00      	MOVLW       0
0x0608	0x6F8A      	MOVWF       _minute+1, 1
;EE366_Project.c,143 :: 		minute = minute + set;			//Increment or decrement
0x060A	0x5188      	MOVF        _set, 0, 1
0x060C	0x2589      	ADDWF       _minute, 0, 1
0x060E	0x6E01      	MOVWF       R1 
0x0610	0x0E00      	MOVLW       0
0x0612	0xBF88      	BTFSC       _set, 7, 1
0x0614	0x0EFF      	MOVLW       255
0x0616	0x218A      	ADDWFC      _minute+1, 0, 1
0x0618	0x6E02      	MOVWF       R2 
0x061A	0xF089C001  	MOVFF       R1, _minute
0x061E	0xF08AC002  	MOVFF       R2, _minute+1
;EE366_Project.c,144 :: 		if(minute >= 60)				//If at 59 and user increments
0x0622	0x0E80      	MOVLW       128
0x0624	0x1802      	XORWF       R2, 0 
0x0626	0x6E00      	MOVWF       R0 
0x0628	0x0E80      	MOVLW       128
0x062A	0x5C00      	SUBWF       R0, 0 
0x062C	0xE102      	BNZ         L__main97
0x062E	0x0E3C      	MOVLW       60
0x0630	0x5C01      	SUBWF       R1, 0 
L__main97:
0x0632	0xE302      	BNC         L_main35
;EE366_Project.c,145 :: 		minute = 0;					//Reset to 0
0x0634	0x6B89      	CLRF        _minute, 1
0x0636	0x6B8A      	CLRF        _minute+1, 1
L_main35:
;EE366_Project.c,146 :: 		if(minute < 0)					//If at 0 and user decrements
0x0638	0x0E80      	MOVLW       128
0x063A	0x198A      	XORWF       _minute+1, 0, 1
0x063C	0x6E00      	MOVWF       R0 
0x063E	0x0E80      	MOVLW       128
0x0640	0x5C00      	SUBWF       R0, 0 
0x0642	0xE102      	BNZ         L__main98
0x0644	0x0E00      	MOVLW       0
0x0646	0x5D89      	SUBWF       _minute, 0, 1
L__main98:
0x0648	0xE204      	BC          L_main36
;EE366_Project.c,147 :: 		minute = 59;				//Go back to 59
0x064A	0x0E3B      	MOVLW       59
0x064C	0x6F89      	MOVWF       _minute, 1
0x064E	0x0E00      	MOVLW       0
0x0650	0x6F8A      	MOVWF       _minute+1, 1
L_main36:
;EE366_Project.c,148 :: 		minute = Dec2Bcd(minute);		//Convert back to BCD
0x0652	0xF094C089  	MOVFF       _minute, FARG_Dec2Bcd_decnum
0x0656	0xDE58      	RCALL       _Dec2Bcd
0x0658	0xF089C000  	MOVFF       R0, _minute
0x065C	0x0E00      	MOVLW       0
0x065E	0x6F8A      	MOVWF       _minute+1, 1
;EE366_Project.c,149 :: 		writeOnRTC(1, minute);			//Write hour on DS1307
0x0660	0x0E01      	MOVLW       1
0x0662	0x6F94      	MOVWF       FARG_writeOnRTC_address, 1
0x0664	0xF095C089  	MOVFF       _minute, FARG_writeOnRTC_writeValues
0x0668	0xDF03      	RCALL       _writeOnRTC
;EE366_Project.c,150 :: 		break;
0x066A	0xD11F      	BRA         L_main29
;EE366_Project.c,152 :: 		case 3: //Seconds
L_main37:
;EE366_Project.c,153 :: 		second = readFromRTC(0);		//Read second from DS1307
0x066C	0x0100      	MOVLB       0
0x066E	0x6B94      	CLRF        FARG_readFromRTC_address, 1
0x0670	0xDE85      	RCALL       _readFromRTC
0x0672	0xF086C000  	MOVFF       R0, _second
0x0676	0x0E00      	MOVLW       0
0x0678	0x0100      	MOVLB       0
0x067A	0x6F87      	MOVWF       _second+1, 1
;EE366_Project.c,154 :: 		second = Bcd2Dec(second);		//Convert reading to decimal
0x067C	0xF094C086  	MOVFF       _second, FARG_Bcd2Dec_bcdnum
0x0680	0xDE68      	RCALL       _Bcd2Dec
0x0682	0xF086C000  	MOVFF       R0, _second
0x0686	0x0E00      	MOVLW       0
0x0688	0x6F87      	MOVWF       _second+1, 1
;EE366_Project.c,155 :: 		second = second + set;			//Increment or decrement
0x068A	0x5188      	MOVF        _set, 0, 1
0x068C	0x2586      	ADDWF       _second, 0, 1
0x068E	0x6E01      	MOVWF       R1 
0x0690	0x0E00      	MOVLW       0
0x0692	0xBF88      	BTFSC       _set, 7, 1
0x0694	0x0EFF      	MOVLW       255
0x0696	0x2187      	ADDWFC      _second+1, 0, 1
0x0698	0x6E02      	MOVWF       R2 
0x069A	0xF086C001  	MOVFF       R1, _second
0x069E	0xF087C002  	MOVFF       R2, _second+1
;EE366_Project.c,156 :: 		if(second >= 60)				//If at 59 and user increments
0x06A2	0x0E80      	MOVLW       128
0x06A4	0x1802      	XORWF       R2, 0 
0x06A6	0x6E00      	MOVWF       R0 
0x06A8	0x0E80      	MOVLW       128
0x06AA	0x5C00      	SUBWF       R0, 0 
0x06AC	0xE102      	BNZ         L__main99
0x06AE	0x0E3C      	MOVLW       60
0x06B0	0x5C01      	SUBWF       R1, 0 
L__main99:
0x06B2	0xE302      	BNC         L_main38
;EE366_Project.c,157 :: 		second = 0;					//Reset to 0
0x06B4	0x6B86      	CLRF        _second, 1
0x06B6	0x6B87      	CLRF        _second+1, 1
L_main38:
;EE366_Project.c,158 :: 		if(second < 0)					//If at 0 and user decrements
0x06B8	0x0E80      	MOVLW       128
0x06BA	0x1987      	XORWF       _second+1, 0, 1
0x06BC	0x6E00      	MOVWF       R0 
0x06BE	0x0E80      	MOVLW       128
0x06C0	0x5C00      	SUBWF       R0, 0 
0x06C2	0xE102      	BNZ         L__main100
0x06C4	0x0E00      	MOVLW       0
0x06C6	0x5D86      	SUBWF       _second, 0, 1
L__main100:
0x06C8	0xE204      	BC          L_main39
;EE366_Project.c,159 :: 		second = 59;				//Go back to 59
0x06CA	0x0E3B      	MOVLW       59
0x06CC	0x6F86      	MOVWF       _second, 1
0x06CE	0x0E00      	MOVLW       0
0x06D0	0x6F87      	MOVWF       _second+1, 1
L_main39:
;EE366_Project.c,160 :: 		second = Dec2Bcd(second);		//Convert back to BCD
0x06D2	0xF094C086  	MOVFF       _second, FARG_Dec2Bcd_decnum
0x06D6	0xDE18      	RCALL       _Dec2Bcd
0x06D8	0xF086C000  	MOVFF       R0, _second
0x06DC	0x0E00      	MOVLW       0
0x06DE	0x6F87      	MOVWF       _second+1, 1
;EE366_Project.c,161 :: 		writeOnRTC(0, second);			//Write second on DS1307
0x06E0	0x6B94      	CLRF        FARG_writeOnRTC_address, 1
0x06E2	0xF095C086  	MOVFF       _second, FARG_writeOnRTC_writeValues
0x06E6	0xDEC4      	RCALL       _writeOnRTC
;EE366_Project.c,162 :: 		break;
0x06E8	0xD0E0      	BRA         L_main29
;EE366_Project.c,164 :: 		case 4: //Days
L_main40:
;EE366_Project.c,165 :: 		day = readFromRTC(4);			//Read day from DS1307
0x06EA	0x0E04      	MOVLW       4
0x06EC	0x0100      	MOVLB       0
0x06EE	0x6F94      	MOVWF       FARG_readFromRTC_address, 1
0x06F0	0xDE45      	RCALL       _readFromRTC
0x06F2	0xF083C000  	MOVFF       R0, _day
0x06F6	0x0E00      	MOVLW       0
0x06F8	0x0100      	MOVLB       0
0x06FA	0x6F84      	MOVWF       _day+1, 1
;EE366_Project.c,166 :: 		day = Bcd2Dec(day);				//Convert reading to decimal
0x06FC	0xF094C083  	MOVFF       _day, FARG_Bcd2Dec_bcdnum
0x0700	0xDE28      	RCALL       _Bcd2Dec
0x0702	0xF083C000  	MOVFF       R0, _day
0x0706	0x0E00      	MOVLW       0
0x0708	0x6F84      	MOVWF       _day+1, 1
;EE366_Project.c,167 :: 		day = day + set;				//Increment or decrement
0x070A	0x5188      	MOVF        _set, 0, 1
0x070C	0x2583      	ADDWF       _day, 0, 1
0x070E	0x6E01      	MOVWF       R1 
0x0710	0x0E00      	MOVLW       0
0x0712	0xBF88      	BTFSC       _set, 7, 1
0x0714	0x0EFF      	MOVLW       255
0x0716	0x2184      	ADDWFC      _day+1, 0, 1
0x0718	0x6E02      	MOVWF       R2 
0x071A	0xF083C001  	MOVFF       R1, _day
0x071E	0xF084C002  	MOVFF       R2, _day+1
;EE366_Project.c,168 :: 		if(day >= 32)					//If at 31 and user increments
0x0722	0x0E80      	MOVLW       128
0x0724	0x1802      	XORWF       R2, 0 
0x0726	0x6E00      	MOVWF       R0 
0x0728	0x0E80      	MOVLW       128
0x072A	0x5C00      	SUBWF       R0, 0 
0x072C	0xE102      	BNZ         L__main101
0x072E	0x0E20      	MOVLW       32
0x0730	0x5C01      	SUBWF       R1, 0 
L__main101:
0x0732	0xE304      	BNC         L_main41
;EE366_Project.c,169 :: 		day = 1;					//Reset to 1
0x0734	0x0E01      	MOVLW       1
0x0736	0x6F83      	MOVWF       _day, 1
0x0738	0x0E00      	MOVLW       0
0x073A	0x6F84      	MOVWF       _day+1, 1
L_main41:
;EE366_Project.c,170 :: 		if(day <= 0)					//If at 1 and user decrements
0x073C	0x0E80      	MOVLW       128
0x073E	0x6E00      	MOVWF       R0 
0x0740	0x0E80      	MOVLW       128
0x0742	0x1984      	XORWF       _day+1, 0, 1
0x0744	0x5C00      	SUBWF       R0, 0 
0x0746	0xE102      	BNZ         L__main102
0x0748	0x5183      	MOVF        _day, 0, 1
0x074A	0x0800      	SUBLW       0
L__main102:
0x074C	0xE304      	BNC         L_main42
;EE366_Project.c,171 :: 		day = 31;					//Go back to 31
0x074E	0x0E1F      	MOVLW       31
0x0750	0x6F83      	MOVWF       _day, 1
0x0752	0x0E00      	MOVLW       0
0x0754	0x6F84      	MOVWF       _day+1, 1
L_main42:
;EE366_Project.c,172 :: 		day = Dec2Bcd(day);				//Convert back to BCD
0x0756	0xF094C083  	MOVFF       _day, FARG_Dec2Bcd_decnum
0x075A	0xDDD6      	RCALL       _Dec2Bcd
0x075C	0xF083C000  	MOVFF       R0, _day
0x0760	0x0E00      	MOVLW       0
0x0762	0x6F84      	MOVWF       _day+1, 1
;EE366_Project.c,173 :: 		writeOnRTC(4, day);				//Write day on DS1307
0x0764	0x0E04      	MOVLW       4
0x0766	0x6F94      	MOVWF       FARG_writeOnRTC_address, 1
0x0768	0xF095C083  	MOVFF       _day, FARG_writeOnRTC_writeValues
0x076C	0xDE81      	RCALL       _writeOnRTC
;EE366_Project.c,174 :: 		break;
0x076E	0xD09D      	BRA         L_main29
;EE366_Project.c,176 :: 		case 5: //Months
L_main43:
;EE366_Project.c,177 :: 		month = readFromRTC(5);			//Read month from DS1307
0x0770	0x0E05      	MOVLW       5
0x0772	0x0100      	MOVLB       0
0x0774	0x6F94      	MOVWF       FARG_readFromRTC_address, 1
0x0776	0xDE02      	RCALL       _readFromRTC
0x0778	0xF081C000  	MOVFF       R0, _month
0x077C	0x0E00      	MOVLW       0
0x077E	0x0100      	MOVLB       0
0x0780	0x6F82      	MOVWF       _month+1, 1
;EE366_Project.c,178 :: 		month = Bcd2Dec(month);			//Convert reading to decimal
0x0782	0xF094C081  	MOVFF       _month, FARG_Bcd2Dec_bcdnum
0x0786	0xDDE5      	RCALL       _Bcd2Dec
0x0788	0xF081C000  	MOVFF       R0, _month
0x078C	0x0E00      	MOVLW       0
0x078E	0x6F82      	MOVWF       _month+1, 1
;EE366_Project.c,179 :: 		month = month + set;			//Increment or decrement
0x0790	0x5188      	MOVF        _set, 0, 1
0x0792	0x2581      	ADDWF       _month, 0, 1
0x0794	0x6E01      	MOVWF       R1 
0x0796	0x0E00      	MOVLW       0
0x0798	0xBF88      	BTFSC       _set, 7, 1
0x079A	0x0EFF      	MOVLW       255
0x079C	0x2182      	ADDWFC      _month+1, 0, 1
0x079E	0x6E02      	MOVWF       R2 
0x07A0	0xF081C001  	MOVFF       R1, _month
0x07A4	0xF082C002  	MOVFF       R2, _month+1
;EE366_Project.c,180 :: 		if(month > 12)					//If at 12 and user increments
0x07A8	0x0E80      	MOVLW       128
0x07AA	0x6E00      	MOVWF       R0 
0x07AC	0x0E80      	MOVLW       128
0x07AE	0x1802      	XORWF       R2, 0 
0x07B0	0x5C00      	SUBWF       R0, 0 
0x07B2	0xE102      	BNZ         L__main103
0x07B4	0x5001      	MOVF        R1, 0 
0x07B6	0x080C      	SUBLW       12
L__main103:
0x07B8	0xE204      	BC          L_main44
;EE366_Project.c,181 :: 		month = 1;					//Reset to 1
0x07BA	0x0E01      	MOVLW       1
0x07BC	0x6F81      	MOVWF       _month, 1
0x07BE	0x0E00      	MOVLW       0
0x07C0	0x6F82      	MOVWF       _month+1, 1
L_main44:
;EE366_Project.c,182 :: 		if(month <= 0)					//If at 1 and user decrements
0x07C2	0x0E80      	MOVLW       128
0x07C4	0x6E00      	MOVWF       R0 
0x07C6	0x0E80      	MOVLW       128
0x07C8	0x1982      	XORWF       _month+1, 0, 1
0x07CA	0x5C00      	SUBWF       R0, 0 
0x07CC	0xE102      	BNZ         L__main104
0x07CE	0x5181      	MOVF        _month, 0, 1
0x07D0	0x0800      	SUBLW       0
L__main104:
0x07D2	0xE304      	BNC         L_main45
;EE366_Project.c,183 :: 		month = 12;					//Go back to 12
0x07D4	0x0E0C      	MOVLW       12
0x07D6	0x6F81      	MOVWF       _month, 1
0x07D8	0x0E00      	MOVLW       0
0x07DA	0x6F82      	MOVWF       _month+1, 1
L_main45:
;EE366_Project.c,184 :: 		month = Dec2Bcd(month);			//Convert back to BCD
0x07DC	0xF094C081  	MOVFF       _month, FARG_Dec2Bcd_decnum
0x07E0	0xDD93      	RCALL       _Dec2Bcd
0x07E2	0xF081C000  	MOVFF       R0, _month
0x07E6	0x0E00      	MOVLW       0
0x07E8	0x6F82      	MOVWF       _month+1, 1
;EE366_Project.c,185 :: 		writeOnRTC(5,month);			//Write month on DS1307
0x07EA	0x0E05      	MOVLW       5
0x07EC	0x6F94      	MOVWF       FARG_writeOnRTC_address, 1
0x07EE	0xF095C081  	MOVFF       _month, FARG_writeOnRTC_writeValues
0x07F2	0xDE3E      	RCALL       _writeOnRTC
;EE366_Project.c,186 :: 		break;
0x07F4	0xD05A      	BRA         L_main29
;EE366_Project.c,188 :: 		case 6: //Years
L_main46:
;EE366_Project.c,189 :: 		year = readFromRTC(6);			//Read hour from DS1307
0x07F6	0x0E06      	MOVLW       6
0x07F8	0x0100      	MOVLB       0
0x07FA	0x6F94      	MOVWF       FARG_readFromRTC_address, 1
0x07FC	0xDDBF      	RCALL       _readFromRTC
0x07FE	0xF07FC000  	MOVFF       R0, _year
0x0802	0x0E00      	MOVLW       0
0x0804	0x0100      	MOVLB       0
0x0806	0x6F80      	MOVWF       _year+1, 1
;EE366_Project.c,190 :: 		year = Bcd2Dec(year);			//Convert reading to decimal
0x0808	0xF094C07F  	MOVFF       _year, FARG_Bcd2Dec_bcdnum
0x080C	0xDDA2      	RCALL       _Bcd2Dec
0x080E	0xF07FC000  	MOVFF       R0, _year
0x0812	0x0E00      	MOVLW       0
0x0814	0x6F80      	MOVWF       _year+1, 1
;EE366_Project.c,191 :: 		year = year + set;				//Increment or decrement
0x0816	0x5188      	MOVF        _set, 0, 1
0x0818	0x257F      	ADDWF       _year, 0, 1
0x081A	0x6E01      	MOVWF       R1 
0x081C	0x0E00      	MOVLW       0
0x081E	0xBF88      	BTFSC       _set, 7, 1
0x0820	0x0EFF      	MOVLW       255
0x0822	0x2180      	ADDWFC      _year+1, 0, 1
0x0824	0x6E02      	MOVWF       R2 
0x0826	0xF07FC001  	MOVFF       R1, _year
0x082A	0xF080C002  	MOVFF       R2, _year+1
;EE366_Project.c,192 :: 		if(year < 15)
0x082E	0x0E80      	MOVLW       128
0x0830	0x1802      	XORWF       R2, 0 
0x0832	0x6E00      	MOVWF       R0 
0x0834	0x0E80      	MOVLW       128
0x0836	0x5C00      	SUBWF       R0, 0 
0x0838	0xE102      	BNZ         L__main105
0x083A	0x0E0F      	MOVLW       15
0x083C	0x5C01      	SUBWF       R1, 0 
L__main105:
0x083E	0xE204      	BC          L_main47
;EE366_Project.c,193 :: 		year = 30;
0x0840	0x0E1E      	MOVLW       30
0x0842	0x6F7F      	MOVWF       _year, 1
0x0844	0x0E00      	MOVLW       0
0x0846	0x6F80      	MOVWF       _year+1, 1
L_main47:
;EE366_Project.c,194 :: 		if(year >= 30)
0x0848	0x0E80      	MOVLW       128
0x084A	0x1980      	XORWF       _year+1, 0, 1
0x084C	0x6E00      	MOVWF       R0 
0x084E	0x0E80      	MOVLW       128
0x0850	0x5C00      	SUBWF       R0, 0 
0x0852	0xE102      	BNZ         L__main106
0x0854	0x0E1E      	MOVLW       30
0x0856	0x5D7F      	SUBWF       _year, 0, 1
L__main106:
0x0858	0xE304      	BNC         L_main48
;EE366_Project.c,195 :: 		year = 15;
0x085A	0x0E0F      	MOVLW       15
0x085C	0x6F7F      	MOVWF       _year, 1
0x085E	0x0E00      	MOVLW       0
0x0860	0x6F80      	MOVWF       _year+1, 1
L_main48:
;EE366_Project.c,196 :: 		year = Dec2Bcd(year);			//Convert back to BCD
0x0862	0xF094C07F  	MOVFF       _year, FARG_Dec2Bcd_decnum
0x0866	0xDD50      	RCALL       _Dec2Bcd
0x0868	0xF07FC000  	MOVFF       R0, _year
0x086C	0x0E00      	MOVLW       0
0x086E	0x6F80      	MOVWF       _year+1, 1
;EE366_Project.c,197 :: 		writeOnRTC(6, year);			//Write hour on DS1307
0x0870	0x0E06      	MOVLW       6
0x0872	0x6F94      	MOVWF       FARG_writeOnRTC_address, 1
0x0874	0xF095C07F  	MOVFF       _year, FARG_writeOnRTC_writeValues
0x0878	0xDDFB      	RCALL       _writeOnRTC
;EE366_Project.c,198 :: 		break;
0x087A	0xD017      	BRA         L_main29
;EE366_Project.c,199 :: 		} /* end switch */
L_main28:
0x087C	0x503F      	MOVF        _setCounter, 0 
0x087E	0x0A01      	XORLW       1
0x0880	0xB4D8      	BTFSC       STATUS, 2 
0x0882	0xD671      	BRA         L_main30
0x0884	0x503F      	MOVF        _setCounter, 0 
0x0886	0x0A02      	XORLW       2
0x0888	0xB4D8      	BTFSC       STATUS, 2 
0x088A	0xD6AF      	BRA         L_main34
0x088C	0x503F      	MOVF        _setCounter, 0 
0x088E	0x0A03      	XORLW       3
0x0890	0xB4D8      	BTFSC       STATUS, 2 
0x0892	0xD6EC      	BRA         L_main37
0x0894	0x503F      	MOVF        _setCounter, 0 
0x0896	0x0A04      	XORLW       4
0x0898	0xB4D8      	BTFSC       STATUS, 2 
0x089A	0xD727      	BRA         L_main40
0x089C	0x503F      	MOVF        _setCounter, 0 
0x089E	0x0A05      	XORLW       5
0x08A0	0xB4D8      	BTFSC       STATUS, 2 
0x08A2	0xD766      	BRA         L_main43
0x08A4	0x503F      	MOVF        _setCounter, 0 
0x08A6	0x0A06      	XORLW       6
0x08A8	0xE0A6      	BZ          L_main46
L_main29:
;EE366_Project.c,200 :: 		} /* end if(setCounter && set) */
L_main27:
;EE366_Project.c,201 :: 		} /* end if(setCounter) */
L_main18:
;EE366_Project.c,204 :: 		setAlarm = 0;
0x08AA	0x0100      	MOVLB       0
0x08AC	0x6B85      	CLRF        _setAlarm, 1
;EE366_Project.c,205 :: 		if(PORTA.B2 == 0) {	//ALARM btn
0x08AE	0xB480      	BTFSC       PORTA, 2 
0x08B0	0xD00D      	BRA         L_main49
;EE366_Project.c,206 :: 		display = 1;
0x08B2	0x0E01      	MOVLW       1
0x08B4	0x6E17      	MOVWF       _display 
0x08B6	0x0E00      	MOVLW       0
0x08B8	0x6E18      	MOVWF       _display+1 
;EE366_Project.c,207 :: 		clearOneTime = 0;
0x08BA	0x6A15      	CLRF        _clearOneTime 
0x08BC	0x6A16      	CLRF        _clearOneTime+1 
;EE366_Project.c,208 :: 		if(PORTA.B2 == 0) {
0x08BE	0xB480      	BTFSC       PORTA, 2 
0x08C0	0xD005      	BRA         L_main50
;EE366_Project.c,209 :: 		alarmCounter++;
0x08C2	0x2B74      	INCF        _alarmCounter, 1, 1
;EE366_Project.c,210 :: 		if(alarmCounter > 4)
0x08C4	0x5174      	MOVF        _alarmCounter, 0, 1
0x08C6	0x0804      	SUBLW       4
0x08C8	0xA0D8      	BTFSS       STATUS, 0 
;EE366_Project.c,211 :: 		alarmCounter = 0;
0x08CA	0x6B74      	CLRF        _alarmCounter, 1
L_main51:
;EE366_Project.c,212 :: 		}
L_main50:
;EE366_Project.c,213 :: 		}
L_main49:
;EE366_Project.c,215 :: 		if(alarmCounter) { //Any value but zero
0x08CC	0x5374      	MOVF        _alarmCounter, 1, 1
0x08CE	0xE01C      	BZ          L_main52
;EE366_Project.c,216 :: 		if(PORTA.B3 == 0) { //UP btn
0x08D0	0xB680      	BTFSC       PORTA, 3 
0x08D2	0xD00C      	BRA         L_main53
;EE366_Project.c,217 :: 		Delay_ms(30);
0x08D4	0x0E4E      	MOVLW       78
0x08D6	0x6E0C      	MOVWF       R12, 0
0x08D8	0x0EEB      	MOVLW       235
0x08DA	0x6E0D      	MOVWF       R13, 0
L_main54:
0x08DC	0x2E0D      	DECFSZ      R13, 1, 0
0x08DE	0xD7FE      	BRA         L_main54
0x08E0	0x2E0C      	DECFSZ      R12, 1, 0
0x08E2	0xD7FC      	BRA         L_main54
;EE366_Project.c,218 :: 		if(PORTA.B3 == 0) {
0x08E4	0xB680      	BTFSC       PORTA, 3 
0x08E6	0xD002      	BRA         L_main55
;EE366_Project.c,219 :: 		setAlarm = 1;
0x08E8	0x0E01      	MOVLW       1
0x08EA	0x6F85      	MOVWF       _setAlarm, 1
;EE366_Project.c,220 :: 		}
L_main55:
;EE366_Project.c,221 :: 		}
L_main53:
;EE366_Project.c,222 :: 		if(PORTA.B4 == 0) {
0x08EC	0xB880      	BTFSC       PORTA, 4 
0x08EE	0xD00C      	BRA         L_main56
;EE366_Project.c,223 :: 		Delay_ms(30);
0x08F0	0x0E4E      	MOVLW       78
0x08F2	0x6E0C      	MOVWF       R12, 0
0x08F4	0x0EEB      	MOVLW       235
0x08F6	0x6E0D      	MOVWF       R13, 0
L_main57:
0x08F8	0x2E0D      	DECFSZ      R13, 1, 0
0x08FA	0xD7FE      	BRA         L_main57
0x08FC	0x2E0C      	DECFSZ      R12, 1, 0
0x08FE	0xD7FC      	BRA         L_main57
;EE366_Project.c,224 :: 		if(PORTA.B4 == 0) { //DOWN btn
0x0900	0xB880      	BTFSC       PORTA, 4 
0x0902	0xD002      	BRA         L_main58
;EE366_Project.c,225 :: 		setAlarm = -1;
0x0904	0x0EFF      	MOVLW       255
0x0906	0x6F85      	MOVWF       _setAlarm, 1
;EE366_Project.c,226 :: 		}
L_main58:
;EE366_Project.c,227 :: 		}
L_main56:
;EE366_Project.c,228 :: 		}
L_main52:
;EE366_Project.c,230 :: 		if(alarmCounter) { //Any value but zero
0x0908	0x5374      	MOVF        _alarmCounter, 1, 1
0x090A	0xB4D8      	BTFSC       STATUS, 2 
0x090C	0xD0A1      	BRA         L_main59
;EE366_Project.c,231 :: 		switch(alarmCounter) {
0x090E	0xD093      	BRA         L_main60
;EE366_Project.c,232 :: 		case 1: //Hours
L_main62:
;EE366_Project.c,233 :: 		hr_alarm = Bcd2Dec(hr_alarm);
0x0910	0xF094C090  	MOVFF       _hr_alarm, FARG_Bcd2Dec_bcdnum
0x0914	0xDD1E      	RCALL       _Bcd2Dec
0x0916	0xF090C000  	MOVFF       R0, _hr_alarm
0x091A	0x0E00      	MOVLW       0
0x091C	0x6F91      	MOVWF       _hr_alarm+1, 1
;EE366_Project.c,234 :: 		hr_alarm = hr_alarm + setAlarm;
0x091E	0x5185      	MOVF        _setAlarm, 0, 1
0x0920	0x2590      	ADDWF       _hr_alarm, 0, 1
0x0922	0x6E01      	MOVWF       R1 
0x0924	0x0E00      	MOVLW       0
0x0926	0xBF85      	BTFSC       _setAlarm, 7, 1
0x0928	0x0EFF      	MOVLW       255
0x092A	0x2191      	ADDWFC      _hr_alarm+1, 0, 1
0x092C	0x6E02      	MOVWF       R2 
0x092E	0xF090C001  	MOVFF       R1, _hr_alarm
0x0932	0xF091C002  	MOVFF       R2, _hr_alarm+1
;EE366_Project.c,235 :: 		if(hr_alarm >= 24)
0x0936	0x0E80      	MOVLW       128
0x0938	0x1802      	XORWF       R2, 0 
0x093A	0x6E00      	MOVWF       R0 
0x093C	0x0E80      	MOVLW       128
0x093E	0x5C00      	SUBWF       R0, 0 
0x0940	0xE102      	BNZ         L__main107
0x0942	0x0E18      	MOVLW       24
0x0944	0x5C01      	SUBWF       R1, 0 
L__main107:
0x0946	0xE303      	BNC         L_main63
;EE366_Project.c,236 :: 		hr_alarm = 0;
0x0948	0x6B90      	CLRF        _hr_alarm, 1
0x094A	0x6B91      	CLRF        _hr_alarm+1, 1
0x094C	0xD00D      	BRA         L_main64
L_main63:
;EE366_Project.c,237 :: 		else if(hr_alarm < 0)
0x094E	0x0E80      	MOVLW       128
0x0950	0x1991      	XORWF       _hr_alarm+1, 0, 1
0x0952	0x6E00      	MOVWF       R0 
0x0954	0x0E80      	MOVLW       128
0x0956	0x5C00      	SUBWF       R0, 0 
0x0958	0xE102      	BNZ         L__main108
0x095A	0x0E00      	MOVLW       0
0x095C	0x5D90      	SUBWF       _hr_alarm, 0, 1
L__main108:
0x095E	0xE204      	BC          L_main65
;EE366_Project.c,238 :: 		hr_alarm = 23;
0x0960	0x0E17      	MOVLW       23
0x0962	0x6F90      	MOVWF       _hr_alarm, 1
0x0964	0x0E00      	MOVLW       0
0x0966	0x6F91      	MOVWF       _hr_alarm+1, 1
L_main65:
L_main64:
;EE366_Project.c,239 :: 		hr_alarm = Dec2Bcd(hr_alarm);
0x0968	0xF094C090  	MOVFF       _hr_alarm, FARG_Dec2Bcd_decnum
0x096C	0xDCCD      	RCALL       _Dec2Bcd
0x096E	0xF090C000  	MOVFF       R0, _hr_alarm
0x0972	0x0E00      	MOVLW       0
0x0974	0x6F91      	MOVWF       _hr_alarm+1, 1
;EE366_Project.c,240 :: 		break;
0x0976	0xD06C      	BRA         L_main61
;EE366_Project.c,242 :: 		case 2:	//Minutes
L_main66:
;EE366_Project.c,243 :: 		min_alarm = Bcd2Dec(min_alarm);
0x0978	0xF094C08E  	MOVFF       _min_alarm, FARG_Bcd2Dec_bcdnum
0x097C	0xDCEA      	RCALL       _Bcd2Dec
0x097E	0xF08EC000  	MOVFF       R0, _min_alarm
0x0982	0x0E00      	MOVLW       0
0x0984	0x6F8F      	MOVWF       _min_alarm+1, 1
;EE366_Project.c,244 :: 		min_alarm = min_alarm + setAlarm;
0x0986	0x5185      	MOVF        _setAlarm, 0, 1
0x0988	0x258E      	ADDWF       _min_alarm, 0, 1
0x098A	0x6E01      	MOVWF       R1 
0x098C	0x0E00      	MOVLW       0
0x098E	0xBF85      	BTFSC       _setAlarm, 7, 1
0x0990	0x0EFF      	MOVLW       255
0x0992	0x218F      	ADDWFC      _min_alarm+1, 0, 1
0x0994	0x6E02      	MOVWF       R2 
0x0996	0xF08EC001  	MOVFF       R1, _min_alarm
0x099A	0xF08FC002  	MOVFF       R2, _min_alarm+1
;EE366_Project.c,245 :: 		if(min_alarm >= 60)
0x099E	0x0E80      	MOVLW       128
0x09A0	0x1802      	XORWF       R2, 0 
0x09A2	0x6E00      	MOVWF       R0 
0x09A4	0x0E80      	MOVLW       128
0x09A6	0x5C00      	SUBWF       R0, 0 
0x09A8	0xE102      	BNZ         L__main109
0x09AA	0x0E3C      	MOVLW       60
0x09AC	0x5C01      	SUBWF       R1, 0 
L__main109:
0x09AE	0xE302      	BNC         L_main67
;EE366_Project.c,246 :: 		min_alarm = 0;
0x09B0	0x6B8E      	CLRF        _min_alarm, 1
0x09B2	0x6B8F      	CLRF        _min_alarm+1, 1
L_main67:
;EE366_Project.c,247 :: 		if(min_alarm < 0)
0x09B4	0x0E80      	MOVLW       128
0x09B6	0x198F      	XORWF       _min_alarm+1, 0, 1
0x09B8	0x6E00      	MOVWF       R0 
0x09BA	0x0E80      	MOVLW       128
0x09BC	0x5C00      	SUBWF       R0, 0 
0x09BE	0xE102      	BNZ         L__main110
0x09C0	0x0E00      	MOVLW       0
0x09C2	0x5D8E      	SUBWF       _min_alarm, 0, 1
L__main110:
0x09C4	0xE204      	BC          L_main68
;EE366_Project.c,248 :: 		min_alarm = 59;
0x09C6	0x0E3B      	MOVLW       59
0x09C8	0x6F8E      	MOVWF       _min_alarm, 1
0x09CA	0x0E00      	MOVLW       0
0x09CC	0x6F8F      	MOVWF       _min_alarm+1, 1
L_main68:
;EE366_Project.c,249 :: 		min_alarm = Dec2Bcd(min_alarm);
0x09CE	0xF094C08E  	MOVFF       _min_alarm, FARG_Dec2Bcd_decnum
0x09D2	0xDC9A      	RCALL       _Dec2Bcd
0x09D4	0xF08EC000  	MOVFF       R0, _min_alarm
0x09D8	0x0E00      	MOVLW       0
0x09DA	0x6F8F      	MOVWF       _min_alarm+1, 1
;EE366_Project.c,250 :: 		break;
0x09DC	0xD039      	BRA         L_main61
;EE366_Project.c,252 :: 		case 3:	//LED pattern
L_main69:
;EE366_Project.c,253 :: 		patternOfLed = patternOfLed + setAlarm;
0x09DE	0x5185      	MOVF        _setAlarm, 0, 1
0x09E0	0x257E      	ADDWF       _patternOfLed, 0, 1
0x09E2	0x6E01      	MOVWF       R1 
0x09E4	0xF07EC001  	MOVFF       R1, _patternOfLed
;EE366_Project.c,254 :: 		if (patternOfLed > 3)
0x09E8	0x0E80      	MOVLW       128
0x09EA	0x0A03      	XORLW       3
0x09EC	0x6E00      	MOVWF       R0 
0x09EE	0x0E80      	MOVLW       128
0x09F0	0x1801      	XORWF       R1, 0 
0x09F2	0x5C00      	SUBWF       R0, 0 
0x09F4	0xE202      	BC          L_main70
;EE366_Project.c,255 :: 		patternOfLed = 1;
0x09F6	0x0E01      	MOVLW       1
0x09F8	0x6F7E      	MOVWF       _patternOfLed, 1
L_main70:
;EE366_Project.c,256 :: 		if (patternOfLed < 1)
0x09FA	0x0E80      	MOVLW       128
0x09FC	0x197E      	XORWF       _patternOfLed, 0, 1
0x09FE	0x6E00      	MOVWF       R0 
0x0A00	0x0E80      	MOVLW       128
0x0A02	0x0A01      	XORLW       1
0x0A04	0x5C00      	SUBWF       R0, 0 
0x0A06	0xE202      	BC          L_main71
;EE366_Project.c,257 :: 		patternOfLed = 3;
0x0A08	0x0E03      	MOVLW       3
0x0A0A	0x6F7E      	MOVWF       _patternOfLed, 1
L_main71:
;EE366_Project.c,258 :: 		AlarmPattern(patternOfLed);
0x0A0C	0xF094C07E  	MOVFF       _patternOfLed, FARG_alarmPattern_choice
0x0A10	0x0E00      	MOVLW       0
0x0A12	0xBF7E      	BTFSC       _patternOfLed, 7, 1
0x0A14	0x0EFF      	MOVLW       255
0x0A16	0x6F95      	MOVWF       FARG_alarmPattern_choice+1, 1
0x0A18	0xDCC7      	RCALL       _alarmPattern
;EE366_Project.c,259 :: 		patt_alarm = patternOfLed;
0x0A1A	0xF092C07E  	MOVFF       _patternOfLed, _patt_alarm
0x0A1E	0x0E00      	MOVLW       0
0x0A20	0xBF7E      	BTFSC       _patternOfLed, 7, 1
0x0A22	0x0EFF      	MOVLW       255
0x0A24	0x6F93      	MOVWF       _patt_alarm+1, 1
;EE366_Project.c,260 :: 		break;
0x0A26	0xD014      	BRA         L_main61
;EE366_Project.c,262 :: 		case 4:	//LED & LCD Display
L_main72:
;EE366_Project.c,263 :: 		display = 0;
0x0A28	0x6A17      	CLRF        _display 
0x0A2A	0x6A18      	CLRF        _display+1 
;EE366_Project.c,264 :: 		PORTD.B0=0; PORTD.B1=0; PORTD.B2=0; PORTD.B3=0;
0x0A2C	0x9083      	BCF         PORTD, 0 
0x0A2E	0x9283      	BCF         PORTD, 1 
0x0A30	0x9483      	BCF         PORTD, 2 
0x0A32	0x9683      	BCF         PORTD, 3 
;EE366_Project.c,265 :: 		break;
0x0A34	0xD00D      	BRA         L_main61
;EE366_Project.c,266 :: 		} /* end alarm switch */
L_main60:
0x0A36	0x5174      	MOVF        _alarmCounter, 0, 1
0x0A38	0x0A01      	XORLW       1
0x0A3A	0xB4D8      	BTFSC       STATUS, 2 
0x0A3C	0xD769      	BRA         L_main62
0x0A3E	0x5174      	MOVF        _alarmCounter, 0, 1
0x0A40	0x0A02      	XORLW       2
0x0A42	0xE09A      	BZ          L_main66
0x0A44	0x5174      	MOVF        _alarmCounter, 0, 1
0x0A46	0x0A03      	XORLW       3
0x0A48	0xE0CA      	BZ          L_main69
0x0A4A	0x5174      	MOVF        _alarmCounter, 0, 1
0x0A4C	0x0A04      	XORLW       4
0x0A4E	0xE0EC      	BZ          L_main72
L_main61:
;EE366_Project.c,267 :: 		} /* end if(alarmCounter) */
L_main59:
;EE366_Project.c,270 :: 		switch (display) {
0x0A50	0xD0DF      	BRA         L_main73
;EE366_Project.c,271 :: 		case 0: //Real-time
L_main75:
;EE366_Project.c,272 :: 		time[0] = MSBofBCD(hour);	//Arrange values to print
0x0A52	0xF094C08B  	MOVFF       _hour, FARG_MSBofBCD_x
0x0A56	0xDC4B      	RCALL       _MSBofBCD
0x0A58	0xF075C000  	MOVFF       R0, _time
;EE366_Project.c,273 :: 		time[1] = LSBofBCD(hour);	//them on the LCD
0x0A5C	0xF094C08B  	MOVFF       _hour, FARG_LSBofBCD_x
0x0A60	0xF001EC11  	CALL        _LSBofBCD, 0
0x0A64	0xF076C000  	MOVFF       R0, _time+1
;EE366_Project.c,274 :: 		time[3] = MSBofBCD(minute);
0x0A68	0xF094C089  	MOVFF       _minute, FARG_MSBofBCD_x
0x0A6C	0xDC40      	RCALL       _MSBofBCD
0x0A6E	0xF078C000  	MOVFF       R0, _time+3
;EE366_Project.c,275 :: 		time[4] = LSBofBCD(minute);
0x0A72	0xF094C089  	MOVFF       _minute, FARG_LSBofBCD_x
0x0A76	0xF001EC11  	CALL        _LSBofBCD, 0
0x0A7A	0xF079C000  	MOVFF       R0, _time+4
;EE366_Project.c,276 :: 		time[6] = MSBofBCD(second);
0x0A7E	0xF094C086  	MOVFF       _second, FARG_MSBofBCD_x
0x0A82	0xDC35      	RCALL       _MSBofBCD
0x0A84	0xF07BC000  	MOVFF       R0, _time+6
;EE366_Project.c,277 :: 		time[7] = LSBofBCD(second);
0x0A88	0xF094C086  	MOVFF       _second, FARG_LSBofBCD_x
0x0A8C	0xF001EC11  	CALL        _LSBofBCD, 0
0x0A90	0xF07CC000  	MOVFF       R0, _time+7
;EE366_Project.c,278 :: 		date[0] = MSBofBCD(day);
0x0A94	0xF094C083  	MOVFF       _day, FARG_MSBofBCD_x
0x0A98	0xDC2A      	RCALL       _MSBofBCD
0x0A9A	0xF06BC000  	MOVFF       R0, _date
;EE366_Project.c,279 :: 		date[1] = LSBofBCD(day);
0x0A9E	0xF094C083  	MOVFF       _day, FARG_LSBofBCD_x
0x0AA2	0xF001EC11  	CALL        _LSBofBCD, 0
0x0AA6	0xF06CC000  	MOVFF       R0, _date+1
;EE366_Project.c,280 :: 		date[3] = MSBofBCD(month);
0x0AAA	0xF094C081  	MOVFF       _month, FARG_MSBofBCD_x
0x0AAE	0xDC1F      	RCALL       _MSBofBCD
0x0AB0	0xF06EC000  	MOVFF       R0, _date+3
;EE366_Project.c,281 :: 		date[4] = LSBofBCD(month);
0x0AB4	0xF094C081  	MOVFF       _month, FARG_LSBofBCD_x
0x0AB8	0xF001EC11  	CALL        _LSBofBCD, 0
0x0ABC	0xF06FC000  	MOVFF       R0, _date+4
;EE366_Project.c,282 :: 		date[6] = MSBofBCD(year);
0x0AC0	0xF094C07F  	MOVFF       _year, FARG_MSBofBCD_x
0x0AC4	0xDC14      	RCALL       _MSBofBCD
0x0AC6	0xF071C000  	MOVFF       R0, _date+6
;EE366_Project.c,283 :: 		date[7] = LSBofBCD(year);
0x0ACA	0xF094C07F  	MOVFF       _year, FARG_LSBofBCD_x
0x0ACE	0xF001EC11  	CALL        _LSBofBCD, 0
0x0AD2	0xF072C000  	MOVFF       R0, _date+7
;EE366_Project.c,286 :: 		if((hour == hr_alarm) && (minute == min_alarm)) {
0x0AD6	0x518C      	MOVF        _hour+1, 0, 1
0x0AD8	0x1991      	XORWF       _hr_alarm+1, 0, 1
0x0ADA	0xE102      	BNZ         L__main111
0x0ADC	0x5190      	MOVF        _hr_alarm, 0, 1
0x0ADE	0x198B      	XORWF       _hour, 0, 1
L__main111:
0x0AE0	0xE11A      	BNZ         L_main78
0x0AE2	0x518A      	MOVF        _minute+1, 0, 1
0x0AE4	0x198F      	XORWF       _min_alarm+1, 0, 1
0x0AE6	0xE102      	BNZ         L__main112
0x0AE8	0x518E      	MOVF        _min_alarm, 0, 1
0x0AEA	0x1989      	XORWF       _minute, 0, 1
L__main112:
0x0AEC	0xE114      	BNZ         L_main78
L__main84:
;EE366_Project.c,287 :: 		alarmPattern(patt_alarm);
0x0AEE	0xF094C092  	MOVFF       _patt_alarm, FARG_alarmPattern_choice
0x0AF2	0xF095C093  	MOVFF       _patt_alarm+1, FARG_alarmPattern_choice+1
0x0AF6	0xDC58      	RCALL       _alarmPattern
;EE366_Project.c,288 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0AF8	0x0E01      	MOVLW       1
0x0AFA	0x6F9B      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0AFC	0xF000EC2E  	CALL        _Lcd_Cmd, 0
;EE366_Project.c,289 :: 		Lcd_out(1,1,"     ALARM!     ");
0x0B00	0x0E01      	MOVLW       1
0x0B02	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x0B04	0x0E01      	MOVLW       1
0x0B06	0x6F95      	MOVWF       FARG_Lcd_Out_column, 1
0x0B08	0x0E4C      	MOVLW       ?lstr3_EE366_Project
0x0B0A	0x6F96      	MOVWF       FARG_Lcd_Out_text, 1
0x0B0C	0x0E00      	MOVLW       hi_addr(?lstr3_EE366_Project)
0x0B0E	0x6F97      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B10	0xF000ECD2  	CALL        _Lcd_Out, 0
;EE366_Project.c,290 :: 		}
0x0B14	0xD035      	BRA         L_main79
L_main78:
;EE366_Project.c,292 :: 		Lcd_out(1, 1, "Time:");
0x0B16	0x0E01      	MOVLW       1
0x0B18	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x0B1A	0x0E01      	MOVLW       1
0x0B1C	0x6F95      	MOVWF       FARG_Lcd_Out_column, 1
0x0B1E	0x0E46      	MOVLW       ?lstr4_EE366_Project
0x0B20	0x6F96      	MOVWF       FARG_Lcd_Out_text, 1
0x0B22	0x0E00      	MOVLW       hi_addr(?lstr4_EE366_Project)
0x0B24	0x6F97      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B26	0xF000ECD2  	CALL        _Lcd_Out, 0
;EE366_Project.c,293 :: 		Lcd_out(2, 1, "Date:");
0x0B2A	0x0E02      	MOVLW       2
0x0B2C	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x0B2E	0x0E01      	MOVLW       1
0x0B30	0x6F95      	MOVWF       FARG_Lcd_Out_column, 1
0x0B32	0x0E40      	MOVLW       ?lstr5_EE366_Project
0x0B34	0x6F96      	MOVWF       FARG_Lcd_Out_text, 1
0x0B36	0x0E00      	MOVLW       hi_addr(?lstr5_EE366_Project)
0x0B38	0x6F97      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B3A	0xF000ECD2  	CALL        _Lcd_Out, 0
;EE366_Project.c,294 :: 		Lcd_out(1, 6, time);
0x0B3E	0x0E01      	MOVLW       1
0x0B40	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x0B42	0x0E06      	MOVLW       6
0x0B44	0x6F95      	MOVWF       FARG_Lcd_Out_column, 1
0x0B46	0x0E75      	MOVLW       _time
0x0B48	0x6F96      	MOVWF       FARG_Lcd_Out_text, 1
0x0B4A	0x0E00      	MOVLW       hi_addr(_time)
0x0B4C	0x6F97      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B4E	0xF000ECD2  	CALL        _Lcd_Out, 0
;EE366_Project.c,295 :: 		Lcd_out(2, 6, date);
0x0B52	0x0E02      	MOVLW       2
0x0B54	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x0B56	0x0E06      	MOVLW       6
0x0B58	0x6F95      	MOVWF       FARG_Lcd_Out_column, 1
0x0B5A	0x0E6B      	MOVLW       _date
0x0B5C	0x6F96      	MOVWF       FARG_Lcd_Out_text, 1
0x0B5E	0x0E00      	MOVLW       hi_addr(_date)
0x0B60	0x6F97      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0B62	0xF000ECD2  	CALL        _Lcd_Out, 0
;EE366_Project.c,296 :: 		Delay_ms(100);
0x0B66	0x0E02      	MOVLW       2
0x0B68	0x6E0B      	MOVWF       R11, 0
0x0B6A	0x0E04      	MOVLW       4
0x0B6C	0x6E0C      	MOVWF       R12, 0
0x0B6E	0x0EBA      	MOVLW       186
0x0B70	0x6E0D      	MOVWF       R13, 0
L_main80:
0x0B72	0x2E0D      	DECFSZ      R13, 1, 0
0x0B74	0xD7FE      	BRA         L_main80
0x0B76	0x2E0C      	DECFSZ      R12, 1, 0
0x0B78	0xD7FC      	BRA         L_main80
0x0B7A	0x2E0B      	DECFSZ      R11, 1, 0
0x0B7C	0xD7FA      	BRA         L_main80
0x0B7E	0x0000      	NOP
;EE366_Project.c,297 :: 		}
L_main79:
;EE366_Project.c,298 :: 		break;
0x0B80	0xD054      	BRA         L_main74
;EE366_Project.c,300 :: 		case 1: //Alarm
L_main81:
;EE366_Project.c,301 :: 		if(clearOneTime == 0) {
0x0B82	0x0E00      	MOVLW       0
0x0B84	0x1816      	XORWF       _clearOneTime+1, 0 
0x0B86	0xE102      	BNZ         L__main113
0x0B88	0x0E00      	MOVLW       0
0x0B8A	0x1815      	XORWF       _clearOneTime, 0 
L__main113:
0x0B8C	0xE108      	BNZ         L_main82
;EE366_Project.c,302 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0B8E	0x0E01      	MOVLW       1
0x0B90	0x6F9B      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0B92	0xF000EC2E  	CALL        _Lcd_Cmd, 0
;EE366_Project.c,303 :: 		clearOneTime = 1;
0x0B96	0x0E01      	MOVLW       1
0x0B98	0x6E15      	MOVWF       _clearOneTime 
0x0B9A	0x0E00      	MOVLW       0
0x0B9C	0x6E16      	MOVWF       _clearOneTime+1 
;EE366_Project.c,304 :: 		}
L_main82:
;EE366_Project.c,305 :: 		Lcd_out(1,1,"Alarm: ");
0x0B9E	0x0E01      	MOVLW       1
0x0BA0	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x0BA2	0x0E01      	MOVLW       1
0x0BA4	0x6F95      	MOVWF       FARG_Lcd_Out_column, 1
0x0BA6	0x0E63      	MOVLW       ?lstr6_EE366_Project
0x0BA8	0x6F96      	MOVWF       FARG_Lcd_Out_text, 1
0x0BAA	0x0E00      	MOVLW       hi_addr(?lstr6_EE366_Project)
0x0BAC	0x6F97      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0BAE	0xF000ECD2  	CALL        _Lcd_Out, 0
;EE366_Project.c,306 :: 		alarm[0] = MSBofBCD(hr_alarm);	//Arrange values to print
0x0BB2	0xF094C090  	MOVFF       _hr_alarm, FARG_MSBofBCD_x
0x0BB6	0xF001EC77  	CALL        _MSBofBCD, 0
0x0BBA	0xF05DC000  	MOVFF       R0, _alarm
;EE366_Project.c,307 :: 		alarm[1] = LSBofBCD(hr_alarm);	//them on the LCD
0x0BBE	0xF094C090  	MOVFF       _hr_alarm, FARG_LSBofBCD_x
0x0BC2	0xF001EC11  	CALL        _LSBofBCD, 0
0x0BC6	0xF05EC000  	MOVFF       R0, _alarm+1
;EE366_Project.c,308 :: 		alarm[3] = MSBofBCD(min_alarm);
0x0BCA	0xF094C08E  	MOVFF       _min_alarm, FARG_MSBofBCD_x
0x0BCE	0xF001EC77  	CALL        _MSBofBCD, 0
0x0BD2	0xF060C000  	MOVFF       R0, _alarm+3
;EE366_Project.c,309 :: 		alarm[4] = LSBofBCD(min_alarm);
0x0BD6	0xF094C08E  	MOVFF       _min_alarm, FARG_LSBofBCD_x
0x0BDA	0xF001EC11  	CALL        _LSBofBCD, 0
0x0BDE	0xF061C000  	MOVFF       R0, _alarm+4
;EE366_Project.c,310 :: 		Lcd_out(1, 8, alarm);
0x0BE2	0x0E01      	MOVLW       1
0x0BE4	0x6F94      	MOVWF       FARG_Lcd_Out_row, 1
0x0BE6	0x0E08      	MOVLW       8
0x0BE8	0x6F95      	MOVWF       FARG_Lcd_Out_column, 1
0x0BEA	0x0E5D      	MOVLW       _alarm
0x0BEC	0x6F96      	MOVWF       FARG_Lcd_Out_text, 1
0x0BEE	0x0E00      	MOVLW       hi_addr(_alarm)
0x0BF0	0x6F97      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0BF2	0xF000ECD2  	CALL        _Lcd_Out, 0
;EE366_Project.c,311 :: 		Delay_ms(200);
0x0BF6	0x0E03      	MOVLW       3
0x0BF8	0x6E0B      	MOVWF       R11, 0
0x0BFA	0x0E08      	MOVLW       8
0x0BFC	0x6E0C      	MOVWF       R12, 0
0x0BFE	0x0E77      	MOVLW       119
0x0C00	0x6E0D      	MOVWF       R13, 0
L_main83:
0x0C02	0x2E0D      	DECFSZ      R13, 1, 0
0x0C04	0xD7FE      	BRA         L_main83
0x0C06	0x2E0C      	DECFSZ      R12, 1, 0
0x0C08	0xD7FC      	BRA         L_main83
0x0C0A	0x2E0B      	DECFSZ      R11, 1, 0
0x0C0C	0xD7FA      	BRA         L_main83
;EE366_Project.c,312 :: 		break;
0x0C0E	0xD00D      	BRA         L_main74
;EE366_Project.c,313 :: 		} /* end display switch */
L_main73:
0x0C10	0x0E00      	MOVLW       0
0x0C12	0x1818      	XORWF       _display+1, 0 
0x0C14	0xE102      	BNZ         L__main114
0x0C16	0x0E00      	MOVLW       0
0x0C18	0x1817      	XORWF       _display, 0 
L__main114:
0x0C1A	0xB4D8      	BTFSC       STATUS, 2 
0x0C1C	0xD71A      	BRA         L_main75
0x0C1E	0x0E00      	MOVLW       0
0x0C20	0x1818      	XORWF       _display+1, 0 
0x0C22	0xE102      	BNZ         L__main115
0x0C24	0x0E01      	MOVLW       1
0x0C26	0x1817      	XORWF       _display, 0 
L__main115:
0x0C28	0xE0AC      	BZ          L_main81
L_main74:
;EE366_Project.c,316 :: 		second = readFromRTC(0);
0x0C2A	0x6B94      	CLRF        FARG_readFromRTC_address, 1
0x0C2C	0xF001ECBE  	CALL        _readFromRTC, 0
0x0C30	0xF086C000  	MOVFF       R0, _second
0x0C34	0x0E00      	MOVLW       0
0x0C36	0x0100      	MOVLB       0
0x0C38	0x6F87      	MOVWF       _second+1, 1
;EE366_Project.c,317 :: 		minute = readFromRTC(1);
0x0C3A	0x0E01      	MOVLW       1
0x0C3C	0x6F94      	MOVWF       FARG_readFromRTC_address, 1
0x0C3E	0xF001ECBE  	CALL        _readFromRTC, 0
0x0C42	0xF089C000  	MOVFF       R0, _minute
0x0C46	0x0E00      	MOVLW       0
0x0C48	0x0100      	MOVLB       0
0x0C4A	0x6F8A      	MOVWF       _minute+1, 1
;EE366_Project.c,318 :: 		hour = readFromRTC(2);
0x0C4C	0x0E02      	MOVLW       2
0x0C4E	0x6F94      	MOVWF       FARG_readFromRTC_address, 1
0x0C50	0xF001ECBE  	CALL        _readFromRTC, 0
0x0C54	0xF08BC000  	MOVFF       R0, _hour
0x0C58	0x0E00      	MOVLW       0
0x0C5A	0x0100      	MOVLB       0
0x0C5C	0x6F8C      	MOVWF       _hour+1, 1
;EE366_Project.c,319 :: 		day = readFromRTC(4);
0x0C5E	0x0E04      	MOVLW       4
0x0C60	0x6F94      	MOVWF       FARG_readFromRTC_address, 1
0x0C62	0xF001ECBE  	CALL        _readFromRTC, 0
0x0C66	0xF083C000  	MOVFF       R0, _day
0x0C6A	0x0E00      	MOVLW       0
0x0C6C	0x0100      	MOVLB       0
0x0C6E	0x6F84      	MOVWF       _day+1, 1
;EE366_Project.c,320 :: 		month = readFromRTC(5);
0x0C70	0x0E05      	MOVLW       5
0x0C72	0x6F94      	MOVWF       FARG_readFromRTC_address, 1
0x0C74	0xF001ECBE  	CALL        _readFromRTC, 0
0x0C78	0xF081C000  	MOVFF       R0, _month
0x0C7C	0x0E00      	MOVLW       0
0x0C7E	0x0100      	MOVLB       0
0x0C80	0x6F82      	MOVWF       _month+1, 1
;EE366_Project.c,321 :: 		year = readFromRTC(6);
0x0C82	0x0E06      	MOVLW       6
0x0C84	0x6F94      	MOVWF       FARG_readFromRTC_address, 1
0x0C86	0xF001ECBE  	CALL        _readFromRTC, 0
0x0C8A	0xF07FC000  	MOVFF       R0, _year
0x0C8E	0x0E00      	MOVLW       0
0x0C90	0x0100      	MOVLB       0
0x0C92	0x6F80      	MOVWF       _year+1, 1
;EE366_Project.c,323 :: 		} /* end while */
0x0C94	0xD430      	BRA         L_main12
;EE366_Project.c,324 :: 		} /* end main */
L_end_main:
0x0C96	0xD7FF      	BRA         $+0
; end of _main
0x0D02	0xF015EE10  	LFSR        1, 21
0x0D06	0x0E6A      	MOVLW       106
0x0D08	0x6E00      	MOVWF       R0 
0x0D0A	0x0E01      	MOVLW       1
0x0D0C	0x6E01      	MOVWF       R1 
0x0D0E	0x0E98      	MOVLW       152
0x0D10	0x6EF6      	MOVWF       4086 
0x0D12	0x0E0C      	MOVLW       12
0x0D14	0x6EF7      	MOVWF       TBLPTRH 
0x0D16	0x0E00      	MOVLW       0
0x0D18	0x6EF8      	MOVWF       TBLPTRU 
0x0D1A	0xF001EC18  	CALL        560, 0
0x0D1E	0x0012      	RETURN      0
;EE366_Project.c,0 :: ?ICS_clearOneTime
0x0C98	0x0000 ;?ICS_clearOneTime+0
; end of ?ICS_clearOneTime
;EE366_Project.c,0 :: ?ICS_display
0x0C9A	0x0000 ;?ICS_display+0
; end of ?ICS_display
;EE366_Project.c,0 :: ?ICS?lstr2_EE366_Project
0x0C9C	0x6220 ;?ICS?lstr2_EE366_Project+0
0x0C9E	0x3A79 ;?ICS?lstr2_EE366_Project+2
0x0CA0	0x2020 ;?ICS?lstr2_EE366_Project+4
0x0CA2	0x7552 ;?ICS?lstr2_EE366_Project+6
0x0CA4	0x6162 ;?ICS?lstr2_EE366_Project+8
0x0CA6	0x2620 ;?ICS?lstr2_EE366_Project+10
0x0CA8	0x4E20 ;?ICS?lstr2_EE366_Project+12
0x0CAA	0x6461 ;?ICS?lstr2_EE366_Project+14
0x0CAC	0x2061 ;?ICS?lstr2_EE366_Project+16
0x0CAE	0x00 ;?ICS?lstr2_EE366_Project+18
; end of ?ICS?lstr2_EE366_Project
;EE366_Project.c,0 :: ?ICS?lstr1_EE366_Project
0x0CAF	0x2020 ;?ICS?lstr1_EE366_Project+0
0x0CB1	0x6944 ;?ICS?lstr1_EE366_Project+2
0x0CB3	0x6967 ;?ICS?lstr1_EE366_Project+4
0x0CB5	0x6174 ;?ICS?lstr1_EE366_Project+6
0x0CB7	0x206C ;?ICS?lstr1_EE366_Project+8
0x0CB9	0x4320 ;?ICS?lstr1_EE366_Project+10
0x0CBB	0x6F6C ;?ICS?lstr1_EE366_Project+12
0x0CBD	0x6B63 ;?ICS?lstr1_EE366_Project+14
0x0CBF	0x2020 ;?ICS?lstr1_EE366_Project+16
0x0CC1	0x00 ;?ICS?lstr1_EE366_Project+18
; end of ?ICS?lstr1_EE366_Project
;EE366_Project.c,0 :: ?ICS_setCounter
0x0CC2	0x00 ;?ICS_setCounter+0
; end of ?ICS_setCounter
;EE366_Project.c,0 :: ?ICS?lstr5_EE366_Project
0x0CC3	0x6144 ;?ICS?lstr5_EE366_Project+0
0x0CC5	0x6574 ;?ICS?lstr5_EE366_Project+2
0x0CC7	0x003A ;?ICS?lstr5_EE366_Project+4
; end of ?ICS?lstr5_EE366_Project
;EE366_Project.c,0 :: ?ICS?lstr4_EE366_Project
0x0CC9	0x6954 ;?ICS?lstr4_EE366_Project+0
0x0CCB	0x656D ;?ICS?lstr4_EE366_Project+2
0x0CCD	0x003A ;?ICS?lstr4_EE366_Project+4
; end of ?ICS?lstr4_EE366_Project
;EE366_Project.c,0 :: ?ICS?lstr3_EE366_Project
0x0CCF	0x2020 ;?ICS?lstr3_EE366_Project+0
0x0CD1	0x2020 ;?ICS?lstr3_EE366_Project+2
0x0CD3	0x4120 ;?ICS?lstr3_EE366_Project+4
0x0CD5	0x414C ;?ICS?lstr3_EE366_Project+6
0x0CD7	0x4D52 ;?ICS?lstr3_EE366_Project+8
0x0CD9	0x2021 ;?ICS?lstr3_EE366_Project+10
0x0CDB	0x2020 ;?ICS?lstr3_EE366_Project+12
0x0CDD	0x2020 ;?ICS?lstr3_EE366_Project+14
0x0CDF	0x00 ;?ICS?lstr3_EE366_Project+16
; end of ?ICS?lstr3_EE366_Project
;EE366_Project.c,0 :: ?ICS_alarm
0x0CE0	0x3030 ;?ICS_alarm+0
0x0CE2	0x303A ;?ICS_alarm+2
0x0CE4	0x0030 ;?ICS_alarm+4
; end of ?ICS_alarm
;EE366_Project.c,0 :: ?ICS?lstr6_EE366_Project
0x0CE6	0x6C41 ;?ICS?lstr6_EE366_Project+0
0x0CE8	0x7261 ;?ICS?lstr6_EE366_Project+2
0x0CEA	0x3A6D ;?ICS?lstr6_EE366_Project+4
0x0CEC	0x0020 ;?ICS?lstr6_EE366_Project+6
; end of ?ICS?lstr6_EE366_Project
;EE366_Project.c,0 :: ?ICS_date
0x0CEE	0x3030 ;?ICS_date+0
0x0CF0	0x302D ;?ICS_date+2
0x0CF2	0x2D30 ;?ICS_date+4
0x0CF4	0x3030 ;?ICS_date+6
0x0CF6	0x00 ;?ICS_date+8
; end of ?ICS_date
;EE366_Project.c,0 :: ?ICS_alarmCounter
0x0CF7	0x00 ;?ICS_alarmCounter+0
; end of ?ICS_alarmCounter
;EE366_Project.c,0 :: ?ICS_time
0x0CF8	0x3030 ;?ICS_time+0
0x0CFA	0x303A ;?ICS_time+2
0x0CFC	0x3A30 ;?ICS_time+4
0x0CFE	0x3030 ;?ICS_time+6
0x0D00	0x00 ;?ICS_time+8
; end of ?ICS_time
;EE366_Project.c,0 :: ?ICS_patternOfLed
0x0D01	0x00 ;?ICS_patternOfLed+0
; end of ?ICS_patternOfLed
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [22]    _Delay_5500us
0x0032      [10]    _Delay_50us
0x003C       [6]    _Delay_1us
0x0042      [26]    _I2C1_Is_Idle
0x005C     [126]    _Lcd_Cmd
0x00DA      [34]    _I2C1_Wr
0x00FC      [10]    _I2C1_Repeated_Start
0x0106      [66]    _I2C1_Start
0x0148      [14]    _Lcd_Chr_CP
0x0156      [30]    _Div_8X8_U
0x0174       [4]    _I2C1_Stop
0x0178      [44]    _I2C1_Rd
0x01A4     [126]    _Lcd_Out
0x0222      [14]    _LSBofBCD
0x0230      [16]    ___CC2DW
0x0240      [22]    _I2C1_Init
0x0256     [152]    _Lcd_Init
0x02EE      [26]    _MSBofBCD
0x0308      [74]    _Dec2Bcd
0x0352      [42]    _Bcd2Dec
0x037C      [44]    _readFromRTC
0x03A8     [200]    _alarmPattern
0x0470      [26]    _writeOnRTC
0x048A    [2062]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    R0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    R1
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    FLASH_Write_32_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_USB_genHID_?FLOC____Lib_USB_genHID_USB_Handle_BusyT1
0x0001       [1]    ispunct_rslt_L0
0x0002       [1]    R2
0x0002       [1]    FLASH_Write_32_SaveINTCON_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_byteToRead_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memchr_s_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [2]    memmove_tt_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [2]    __Lib_USB_genHID_USB_CtrlTrf_Tx_Service_byteToSend_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    R3
0x0003       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_i_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0004       [2]    __Lib_USB_genHID_USB_Transfer_Packet_handle_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [1]    R4
0x0004       [1]    __Lib_USB_genHID_GetMaxIndexInDevDsc_index_L0
0x0004       [2]    __Lib_USB_genHID_USB_Std_Feature_Req_Handler_p_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    __Lib_USB_genHID_USB_Get_Status_Handler_p_L2
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0005       [2]    __Lib_USB_genHID_USB_Configure_Endpoint_handle_L0
0x0005       [1]    R5
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0006       [2]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_totalLen_L0
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [3]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_ptr_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _clearOneTime
0x0017       [2]    _display
0x0019      [19]    ?lstr2_EE366_Project
0x002C      [19]    ?lstr1_EE366_Project
0x003F       [1]    _setCounter
0x0040       [6]    ?lstr5_EE366_Project
0x0046       [6]    ?lstr4_EE366_Project
0x004C      [17]    ?lstr3_EE366_Project
0x005D       [6]    _alarm
0x0063       [8]    ?lstr6_EE366_Project
0x006B       [9]    _date
0x0074       [1]    _alarmCounter
0x0075       [9]    _time
0x007E       [1]    _patternOfLed
0x007F       [2]    _year
0x0081       [2]    _month
0x0083       [2]    _day
0x0085       [1]    _setAlarm
0x0086       [2]    _second
0x0088       [1]    _set
0x0089       [2]    _minute
0x008B       [2]    _hour
0x008D       [0]    __Lib_Lcd_cmd_status
0x008E       [2]    _min_alarm
0x0090       [2]    _hr_alarm
0x0092       [2]    _patt_alarm
0x0094       [1]    FARG_Lcd_Out_row
0x0094       [1]    FARG_Bcd2Dec_bcdnum
0x0094       [1]    FARG_Dec2Bcd_decnum
0x0094       [1]    FARG_readFromRTC_address
0x0094       [1]    FARG_writeOnRTC_address
0x0094       [1]    FARG_LSBofBCD_x
0x0094       [1]    FARG_MSBofBCD_x
0x0094       [4]    FARG_I2C1_Init_clock
0x0094       [2]    FARG_alarmPattern_choice
0x0095       [1]    Dec2Bcd_tmp_L0
0x0095       [1]    FARG_writeOnRTC_writeValues
0x0095       [1]    readFromRTC_readValues_L0
0x0095       [1]    FARG_Lcd_Out_column
0x0096       [2]    FARG_Lcd_Out_text
0x0098       [1]    Lcd_Out_i_L0
0x0099       [2]    I2C1_Start_j_L0
0x0099       [1]    FARG_Lcd_Chr_CP_out_char
0x0099       [1]    FARG_I2C1_Wr_data_
0x0099       [1]    FARG_I2C1_Rd_ack
0x009B       [1]    FARG_Lcd_Cmd_out_char
0x0F80       [1]    PORTA
0x0F83       [0]    RD4_bit
0x0F83       [1]    PORTD
0x0F83       [0]    LCD_D5
0x0F83       [0]    LCD_D6
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    LCD_D4
0x0F83       [0]    LCD_D7
0x0F84       [0]    LCD_EN
0x0F84       [0]    LCD_RS
0x0F84       [0]    RE2_bit
0x0F84       [0]    RE0_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB0_bit
0x0F92       [1]    TRISA
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F95       [1]    TRISD
0x0F95       [0]    LCD_D7_Direction
0x0F95       [0]    LCD_D6_Direction
0x0F95       [0]    LCD_D5_Direction
0x0F95       [0]    LCD_D4_Direction
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD7_bit
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    LCD_RS_Direction
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    LCD_EN_Direction
0x0F9E       [1]    PIR1
0x0FC1       [1]    ADCON1
0x0FC5       [1]    SSPCON2
0x0FC6       [1]    SSPCON1
0x0FC7       [1]    SSPSTAT
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FD3       [1]    OSCCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0C98       [2]    ?ICS_clearOneTime
0x0C9A       [2]    ?ICS_display
0x0C9C      [19]    ?ICS?lstr2_EE366_Project
0x0CAF      [19]    ?ICS?lstr1_EE366_Project
0x0CC2       [1]    ?ICS_setCounter
0x0CC3       [6]    ?ICS?lstr5_EE366_Project
0x0CC9       [6]    ?ICS?lstr4_EE366_Project
0x0CCF      [17]    ?ICS?lstr3_EE366_Project
0x0CE0       [6]    ?ICS_alarm
0x0CE6       [8]    ?ICS?lstr6_EE366_Project
0x0CEE       [9]    ?ICS_date
0x0CF7       [1]    ?ICS_alarmCounter
0x0CF8       [9]    ?ICS_time
0x0D01       [1]    ?ICS_patternOfLed
