

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Dec 11 18:45:49 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4550 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataBANK0
    87  001800                     __pidataBANK0:
    88                           	callstack 0
    89                           
    90                           ;initializer for main@F3531
    91  001800  53                 	db	83
    92  001801  4D                 	db	77
    93  001802  54                 	db	84
    94  001803  57                 	db	87
    95  001804  74                 	db	116
    96  001805  46                 	db	70
    97  001806  73                 	db	115
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _SSPADD	set	4040
   100  0000                     _SSPCON2	set	4037
   101  0000                     _SSPCON1	set	4038
   102  0000                     _SSPSTAT	set	4039
   103  0000                     _SSPBUF	set	4041
   104  0000                     _SSPSTATbits	set	4039
   105  0000                     _LATD	set	3980
   106  0000                     _TRISD	set	3989
   107  0000                     _OSCCON	set	4051
   108  0000                     _ACKEN	set	32300
   109  0000                     _ACKDT	set	32301
   110  0000                     _PEN	set	32298
   111  0000                     _RSEN	set	32297
   112  0000                     _ACKSTAT	set	32302
   113  0000                     _SSPIF	set	31987
   114  0000                     _SSPIE	set	31979
   115  0000                     _TRISB1	set	31897
   116  0000                     _TRISB0	set	31896
   117  0000                     _RCEN	set	32299
   118  0000                     _LATD2	set	31842
   119  0000                     _LATD0	set	31840
   120                           
   121                           	psect	smallconst
   122  000800                     __psmallconst:
   123                           	callstack 0
   124  000800  00                 	db	0
   125  000801                     STR_9:
   126  000801  43                 	db	67	;'C'
   127  000802  61                 	db	97	;'a'
   128  000803  6C                 	db	108	;'l'
   129  000804  20                 	db	32
   130  000805  25                 	db	37
   131  000806  78                 	db	120	;'x'
   132  000807  2D                 	db	45
   133  000808  00                 	db	0
   134  000809                     STR_5:
   135  000809  54                 	db	84	;'T'
   136  00080A  69                 	db	105	;'i'
   137  00080B  6D                 	db	109	;'m'
   138  00080C  3A                 	db	58	;':'
   139  00080D  25                 	db	37
   140  00080E  78                 	db	120	;'x'
   141  00080F  3A                 	db	58	;':'
   142  000810  00                 	db	0
   143  000811                     STR_3:
   144  000811  25                 	db	37
   145  000812  78                 	db	120	;'x'
   146  000813  20                 	db	32
   147  000814  00                 	db	0
   148  000815                     STR_15:
   149  000815  57                 	db	87	;'W'
   150  000816  65                 	db	101	;'e'
   151  000817  64                 	db	100	;'d'
   152  000818  00                 	db	0
   153  000819                     STR_14:
   154  000819  54                 	db	84	;'T'
   155  00081A  75                 	db	117	;'u'
   156  00081B  65                 	db	101	;'e'
   157  00081C  00                 	db	0
   158  00081D                     STR_17:
   159  00081D  46                 	db	70	;'F'
   160  00081E  72                 	db	114	;'r'
   161  00081F  69                 	db	105	;'i'
   162  000820  00                 	db	0
   163  000821                     STR_13:
   164  000821  4D                 	db	77	;'M'
   165  000822  6F                 	db	111	;'o'
   166  000823  6E                 	db	110	;'n'
   167  000824  00                 	db	0
   168  000825                     STR_12:
   169  000825  53                 	db	83	;'S'
   170  000826  75                 	db	117	;'u'
   171  000827  6E                 	db	110	;'n'
   172  000828  00                 	db	0
   173  000829                     STR_18:
   174  000829  53                 	db	83	;'S'
   175  00082A  61                 	db	97	;'a'
   176  00082B  74                 	db	116	;'t'
   177  00082C  00                 	db	0
   178  00082D                     STR_16:
   179  00082D  54                 	db	84	;'T'
   180  00082E  68                 	db	104	;'h'
   181  00082F  75                 	db	117	;'u'
   182  000830  00                 	db	0
   183  000831                     STR_2:
   184  000831  41                 	db	65	;'A'
   185  000832  4D                 	db	77	;'M'
   186  000833  00                 	db	0
   187  000834                     STR_1:
   188  000834  50                 	db	80	;'P'
   189  000835  4D                 	db	77	;'M'
   190  000836  00                 	db	0
   191  000837  00                 	db	0	; dummy byte at the end
   192  0000                     
   193                           ; #config settings
   194                           
   195                           	psect	cinit
   196  0015BC                     __pcinit:
   197                           	callstack 0
   198  0015BC                     start_initialization:
   199                           	callstack 0
   200  0015BC                     __initialization:
   201                           	callstack 0
   202                           
   203                           ; Initialize objects allocated to BANK0 (7 bytes)
   204                           ; load TBLPTR registers with __pidataBANK0
   205  0015BC  0E00               	movlw	low __pidataBANK0
   206  0015BE  6EF6               	movwf	tblptrl,c
   207  0015C0  0E18               	movlw	high __pidataBANK0
   208  0015C2  6EF7               	movwf	tblptrh,c
   209  0015C4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   210  0015C6  6EF8               	movwf	tblptru,c
   211  0015C8  EE00  F0EC         	lfsr	0,__pdataBANK0
   212  0015CC  EE10 F007          	lfsr	1,7
   213  0015D0                     copy_data0:
   214  0015D0  0009               	tblrd		*+
   215  0015D2  CFF5 FFEE          	movff	tablat,postinc0
   216  0015D6  50E5               	movf	postdec1,w,c
   217  0015D8  50E1               	movf	fsr1l,w,c
   218  0015DA  E1FA               	bnz	copy_data0
   219                           
   220                           ; Clear objects allocated to BANK0 (52 bytes)
   221  0015DC  EE00  F0B8         	lfsr	0,__pbssBANK0
   222  0015E0  0E34               	movlw	52
   223  0015E2                     clear_0:
   224  0015E2  6AEE               	clrf	postinc0,c
   225  0015E4  06E8               	decf	wreg,f,c
   226  0015E6  E1FD               	bnz	clear_0
   227                           
   228                           ; Clear objects allocated to COMRAM (2 bytes)
   229  0015E8  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   230  0015EA  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   231  0015EC                     end_of_initialization:
   232                           	callstack 0
   233  0015EC                     __end_of__initialization:
   234                           	callstack 0
   235  0015EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   236  0015EE  6EF8               	movwf	tblptru,c
   237  0015F0  0100               	movlb	0
   238  0015F2  EF1C  F004         	goto	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMRAM
   241  00005E                     __pbssCOMRAM:
   242                           	callstack 0
   243  00005E                     _flags:
   244                           	callstack 0
   245  00005E                     	ds	2
   246                           
   247                           	psect	bssBANK0
   248  0000B8                     __pbssBANK0:
   249                           	callstack 0
   250  0000B8                     _nout:
   251                           	callstack 0
   252  0000B8                     	ds	2
   253  0000BA                     _width:
   254                           	callstack 0
   255  0000BA                     	ds	2
   256  0000BC                     _prec:
   257                           	callstack 0
   258  0000BC                     	ds	2
   259  0000BE                     _Year:
   260                           	callstack 0
   261  0000BE                     	ds	2
   262  0000C0                     _Month:
   263                           	callstack 0
   264  0000C0                     	ds	2
   265  0000C2                     _Date:
   266                           	callstack 0
   267  0000C2                     	ds	2
   268  0000C4                     _Day:
   269                           	callstack 0
   270  0000C4                     	ds	2
   271  0000C6                     _hour:
   272                           	callstack 0
   273  0000C6                     	ds	2
   274  0000C8                     _min:
   275                           	callstack 0
   276  0000C8                     	ds	2
   277  0000CA                     _sec:
   278                           	callstack 0
   279  0000CA                     	ds	2
   280  0000CC                     _dbuf:
   281                           	callstack 0
   282  0000CC                     	ds	32
   283                           
   284                           	psect	dataBANK0
   285  0000EC                     __pdataBANK0:
   286                           	callstack 0
   287  0000EC                     main@F3531:
   288                           	callstack 0
   289  0000EC                     	ds	7
   290                           
   291                           	psect	cstackBANK0
   292  000060                     __pcstackBANK0:
   293                           	callstack 0
   294  000060                     ?_sprintf:
   295                           	callstack 0
   296  000060                     sprintf@s:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x0
   300  000060                     	ds	2
   301  000062                     sprintf@fmt:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x2
   305  000062                     	ds	6
   306  000068                     sprintf@ap:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x8
   310  000068                     	ds	2
   311  00006A                     sprintf@f:
   312                           	callstack 0
   313                           
   314                           ; 6 bytes @ 0xA
   315  00006A                     	ds	6
   316  000070                     ??_main:
   317                           
   318                           ; 1 bytes @ 0x10
   319  000070                     	ds	3
   320  000073                     main@days:
   321                           	callstack 0
   322                           
   323                           ; 7 bytes @ 0x13
   324  000073                     	ds	7
   325  00007A                     main@date:
   326                           	callstack 0
   327                           
   328                           ; 10 bytes @ 0x1A
   329  00007A                     	ds	10
   330  000084                     main@month:
   331                           	callstack 0
   332                           
   333                           ; 10 bytes @ 0x24
   334  000084                     	ds	10
   335  00008E                     main@year:
   336                           	callstack 0
   337                           
   338                           ; 10 bytes @ 0x2E
   339  00008E                     	ds	10
   340  000098                     main@secs:
   341                           	callstack 0
   342                           
   343                           ; 10 bytes @ 0x38
   344  000098                     	ds	10
   345  0000A2                     main@mins:
   346                           	callstack 0
   347                           
   348                           ; 10 bytes @ 0x42
   349  0000A2                     	ds	10
   350  0000AC                     main@hours:
   351                           	callstack 0
   352                           
   353                           ; 10 bytes @ 0x4C
   354  0000AC                     	ds	10
   355  0000B6                     main@Clock_type:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x56
   359  0000B6                     	ds	1
   360  0000B7                     main@AM_PM:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x57
   364  0000B7                     	ds	1
   365                           
   366                           	psect	cstackCOMRAM
   367  000001                     __pcstackCOMRAM:
   368                           	callstack 0
   369  000001                     ?_strlen:
   370                           	callstack 0
   371  000001                     ?_isupper:
   372                           	callstack 0
   373  000001                     ?_isalpha:
   374                           	callstack 0
   375  000001                     ?_islower:
   376                           	callstack 0
   377  000001                     I2C_Read@flag:
   378                           	callstack 0
   379  000001                     I2C_Write@data:
   380                           	callstack 0
   381  000001                     MSdelay1@val:
   382                           	callstack 0
   383  000001                     MSdelay@val:
   384                           	callstack 0
   385  000001                     isalpha@c:
   386                           	callstack 0
   387  000001                     isupper@c:
   388                           	callstack 0
   389  000001                     fputc@c:
   390                           	callstack 0
   391  000001                     strlen@s:
   392                           	callstack 0
   393  000001                     islower@c:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x0
   397  000001                     	ds	1
   398  000002                     I2C_Read@buffer:
   399                           	callstack 0
   400  000002                     I2C_Start@slave_write_address:
   401                           	callstack 0
   402  000002                     I2C_Repeated_Start@slave_read_address:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x1
   406  000002                     	ds	1
   407  000003                     ??_isupper:
   408  000003                     ??_isalpha:
   409  000003                     ??_islower:
   410  000003                     ??_RTC_Read_Clock:
   411  000003                     ??_RTC_Read_Calendar:
   412  000003                     MSdelay1@i:
   413                           	callstack 0
   414  000003                     MSdelay@i:
   415                           	callstack 0
   416  000003                     fputc@fp:
   417                           	callstack 0
   418  000003                     strlen@a:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x2
   422  000003                     	ds	1
   423  000004                     RTC_Read_Clock@read_clock_address:
   424                           	callstack 0
   425  000004                     RTC_Read_Calendar@read_calendar_address:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x3
   429  000004                     	ds	1
   430  000005                     ??_fputc:
   431  000005                     MSdelay1@j:
   432                           	callstack 0
   433  000005                     MSdelay@j:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x4
   437  000005                     	ds	2
   438  000007                     ??_LCD_Command:
   439  000007                     ??_LCD_Char:
   440  000007                     ?_toupper:
   441                           	callstack 0
   442  000007                     toupper@c:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x6
   446  000007                     	ds	1
   447  000008                     LCD_Command@cmd:
   448                           	callstack 0
   449  000008                     LCD_Char@dat:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x7
   453  000008                     	ds	1
   454  000009                     ??_toupper:
   455  000009                     LCD_String@msg:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x8
   459  000009                     	ds	1
   460  00000A                     fputs@s:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x9
   464  00000A                     	ds	1
   465  00000B                     LCD_String_xy@pos:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0xA
   469  00000B                     	ds	1
   470  00000C                     LCD_String_xy@msg:
   471                           	callstack 0
   472  00000C                     fputs@fp:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xB
   476  00000C                     	ds	1
   477  00000D                     _toupper$994:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xC
   481  00000D                     	ds	1
   482  00000E                     LCD_String_xy@row:
   483                           	callstack 0
   484  00000E                     fputs@c:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xD
   488  00000E                     	ds	1
   489  00000F                     LCD_String_xy@location:
   490                           	callstack 0
   491  00000F                     fputs@i:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0xE
   495  00000F                     	ds	2
   496  000011                     ?_pad:
   497                           	callstack 0
   498  000011                     pad@fp:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x10
   502  000011                     	ds	2
   503  000013                     pad@buf:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x12
   507  000013                     	ds	2
   508  000015                     pad@p:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x14
   512  000015                     	ds	2
   513  000017                     ??_pad:
   514                           
   515                           ; 1 bytes @ 0x16
   516  000017                     	ds	1
   517  000018                     pad@i:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x17
   521  000018                     	ds	2
   522  00001A                     pad@w:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x19
   526  00001A                     	ds	2
   527  00001C                     ?_xtoa:
   528                           	callstack 0
   529  00001C                     xtoa@fp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1B
   533  00001C                     	ds	2
   534  00001E                     xtoa@d:
   535                           	callstack 0
   536                           
   537                           ; 8 bytes @ 0x1D
   538  00001E                     	ds	8
   539  000026                     xtoa@x:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x25
   543  000026                     	ds	1
   544  000027                     ??_xtoa:
   545                           
   546                           ; 1 bytes @ 0x26
   547  000027                     	ds	8
   548  00002F                     _xtoa$911:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x2E
   552  00002F                     	ds	2
   553  000031                     _xtoa$912:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x30
   557  000031                     	ds	2
   558  000033                     xtoa@p:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x32
   562  000033                     	ds	2
   563  000035                     xtoa@w:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x34
   567  000035                     	ds	2
   568  000037                     xtoa@n:
   569                           	callstack 0
   570                           
   571                           ; 8 bytes @ 0x36
   572  000037                     	ds	8
   573  00003F                     xtoa@i:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x3E
   577  00003F                     	ds	2
   578  000041                     xtoa@c:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x40
   582  000041                     	ds	2
   583  000043                     ?_vfpfcnvrt:
   584                           	callstack 0
   585  000043                     vfpfcnvrt@fp:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x42
   589  000043                     	ds	2
   590  000045                     vfpfcnvrt@fmt:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x44
   594  000045                     	ds	2
   595  000047                     vfpfcnvrt@ap:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x46
   599  000047                     	ds	2
   600  000049                     ??_vfpfcnvrt:
   601                           
   602                           ; 1 bytes @ 0x48
   603  000049                     	ds	4
   604  00004D                     vfpfcnvrt@llu:
   605                           	callstack 0
   606                           
   607                           ; 8 bytes @ 0x4C
   608  00004D                     	ds	8
   609  000055                     vfpfcnvrt@c:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x54
   613  000055                     	ds	1
   614  000056                     ?_vfprintf:
   615                           	callstack 0
   616  000056                     vfprintf@fp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x55
   620  000056                     	ds	2
   621  000058                     vfprintf@fmt:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x57
   625  000058                     	ds	2
   626  00005A                     vfprintf@ap:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x59
   630  00005A                     	ds	2
   631  00005C                     vfprintf@cfmt:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x5B
   635  00005C                     	ds	2
   636  00005E                     
   637                           ; 1 bytes @ 0x5D
   638 ;;
   639 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   640 ;;
   641 ;; *************** function _main *****************
   642 ;; Defined at:
   643 ;;		line 49 in file "RTC.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  hours          10   76[BANK0 ] unsigned char [10]
   648 ;;  mins           10   66[BANK0 ] unsigned char [10]
   649 ;;  secs           10   56[BANK0 ] unsigned char [10]
   650 ;;  year           10   46[BANK0 ] unsigned char [10]
   651 ;;  month          10   36[BANK0 ] unsigned char [10]
   652 ;;  date           10   26[BANK0 ] unsigned char [10]
   653 ;;  days            7   19[BANK0 ] unsigned char [7]
   654 ;;  AM_PM           1   87[BANK0 ] unsigned char 
   655 ;;  Clock_type      1   86[BANK0 ] unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   665 ;;      Params:         0       0       0       0       0       0       0       0       0
   666 ;;      Locals:         0      69       0       0       0       0       0       0       0
   667 ;;      Temps:          0       3       0       0       0       0       0       0       0
   668 ;;      Totals:         0      72       0       0       0       0       0       0       0
   669 ;;Total ram usage:       72 bytes
   670 ;; Hardware stack levels required when called:    8
   671 ;; This function calls:
   672 ;;		_I2C_Init
   673 ;;		_I2C_Stop
   674 ;;		_LCD_Clear
   675 ;;		_LCD_Init
   676 ;;		_LCD_String
   677 ;;		_LCD_String_xy
   678 ;;		_MSdelay
   679 ;;		_MSdelay1
   680 ;;		_RTC_Read_Calendar
   681 ;;		_RTC_Read_Clock
   682 ;;		_sprintf
   683 ;; This function is called by:
   684 ;;		Startup code after reset
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text0
   689  000838                     __ptext0:
   690                           	callstack 0
   691  000838                     _main:
   692                           	callstack 23
   693  000838                     
   694                           ;RTC.c: 52:     char secs[10],mins[10],hours[10];;RTC.c: 53:     char date[10],month[10]
      +                          ,year[10];;RTC.c: 54:     char Clock_type = 0x06;
   695  000838  0E06               	movlw	6
   696  00083A  0100               	movlb	0	; () banked
   697  00083C  6FB6               	movwf	main@Clock_type& (0+255),b
   698                           
   699                           ;RTC.c: 55:     char AM_PM = 0x05;
   700  00083E  0E05               	movlw	5
   701  000840  6FB7               	movwf	main@AM_PM& (0+255),b
   702  000842                     
   703                           ; BSR set to: 0
   704                           ;RTC.c: 56:     char days[7] = {'S','M','T','W','t','F','s'};
   705  000842  EE20  F0EC         	lfsr	2,main@F3531
   706  000846  EE10  F073         	lfsr	1,main@days
   707  00084A  0E06               	movlw	6
   708  00084C                     u1291:
   709  00084C  CFDB FFE3          	movff	plusw2,plusw1
   710  000850  06E8               	decf	wreg,f,c
   711  000852  E2FC               	bc	u1291
   712  000854                     
   713                           ; BSR set to: 0
   714                           ;RTC.c: 57:     OSCCON=0x72;
   715  000854  0E72               	movlw	114
   716  000856  6ED3               	movwf	211,c	;volatile
   717  000858                     
   718                           ; BSR set to: 0
   719                           ;RTC.c: 59:     I2C_Init();
   720  000858  ECC2  F00B         	call	_I2C_Init	;wreg free
   721  00085C                     
   722                           ;RTC.c: 60:     LCD_Init();
   723  00085C  EC6B  F00B         	call	_LCD_Init	;wreg free
   724  000860                     
   725                           ;RTC.c: 61:     LCD_Clear();
   726  000860  ECED  F00B         	call	_LCD_Clear	;wreg free
   727  000864                     
   728                           ;RTC.c: 62:     MSdelay(10);
   729  000864  0E00               	movlw	0
   730  000866  6E02               	movwf	(MSdelay@val+1)^0,c
   731  000868  0E0A               	movlw	10
   732  00086A  6E01               	movwf	MSdelay@val^0,c
   733  00086C  EC36  F00A         	call	_MSdelay	;wreg free
   734  000870                     l1998:
   735                           
   736                           ;RTC.c: 64:     {;RTC.c: 65:         MSdelay1(1000);
   737  000870  0E03               	movlw	3
   738  000872  6E02               	movwf	(MSdelay1@val+1)^0,c
   739  000874  0EE8               	movlw	232
   740  000876  6E01               	movwf	MSdelay1@val^0,c
   741  000878  EC11  F00A         	call	_MSdelay1	;wreg free
   742  00087C                     
   743                           ;RTC.c: 66:         RTC_Read_Clock(0);
   744  00087C  0E00               	movlw	0
   745  00087E  EC5B  F00A         	call	_RTC_Read_Clock
   746  000882                     
   747                           ;RTC.c: 67:         I2C_Stop();
   748  000882  ECCF  F00B         	call	_I2C_Stop	;wreg free
   749  000886                     
   750                           ;RTC.c: 68:         if(hour & (1<<Clock_type)){
   751  000886  C0B6  F070         	movff	main@Clock_type,??_main
   752  00088A  0E01               	movlw	1
   753  00088C  0100               	movlb	0	; () banked
   754  00088E  6F71               	movwf	(??_main+1)& (0+255),b
   755  000890  0E00               	movlw	0
   756  000892  6F72               	movwf	(??_main+2)& (0+255),b
   757  000894  2B70               	incf	??_main& (0+255),f,b
   758  000896  EF50  F004         	goto	u1304
   759  00089A                     u1305:
   760  00089A  90D8               	bcf	status,0,c
   761  00089C  3771               	rlcf	(??_main+1)& (0+255),f,b
   762  00089E  3772               	rlcf	(??_main+2)& (0+255),f,b
   763  0008A0                     u1304:
   764  0008A0  2F70               	decfsz	??_main& (0+255),f,b
   765  0008A2  EF4D  F004         	goto	u1305
   766  0008A6  0100               	movlb	0	; () banked
   767  0008A8  51C6               	movf	_hour& (0+255),w,b
   768  0008AA  1771               	andwf	(??_main+1)& (0+255),f,b
   769  0008AC  51C7               	movf	(_hour+1)& (0+255),w,b
   770  0008AE  1772               	andwf	(??_main+2)& (0+255),f,b
   771  0008B0  5171               	movf	(??_main+1)& (0+255),w,b
   772  0008B2  1172               	iorwf	(??_main+2)& (0+255),w,b
   773  0008B4  B4D8               	btfsc	status,2,c
   774  0008B6  EF5F  F004         	goto	u1311
   775  0008BA  EF61  F004         	goto	u1310
   776  0008BE                     u1311:
   777  0008BE  EFDA  F004         	goto	l2026
   778  0008C2                     u1310:
   779  0008C2                     
   780                           ; BSR set to: 0
   781                           ;RTC.c: 70:             if(hour & (1<<AM_PM)){
   782  0008C2  C0B7  F070         	movff	main@AM_PM,??_main
   783  0008C6  0E01               	movlw	1
   784  0008C8  6F71               	movwf	(??_main+1)& (0+255),b
   785  0008CA  0E00               	movlw	0
   786  0008CC  6F72               	movwf	(??_main+2)& (0+255),b
   787  0008CE  2B70               	incf	??_main& (0+255),f,b
   788  0008D0  EF6D  F004         	goto	u1324
   789  0008D4                     u1325:
   790  0008D4  90D8               	bcf	status,0,c
   791  0008D6  3771               	rlcf	(??_main+1)& (0+255),f,b
   792  0008D8  3772               	rlcf	(??_main+2)& (0+255),f,b
   793  0008DA                     u1324:
   794  0008DA  2F70               	decfsz	??_main& (0+255),f,b
   795  0008DC  EF6A  F004         	goto	u1325
   796  0008E0  0100               	movlb	0	; () banked
   797  0008E2  51C6               	movf	_hour& (0+255),w,b
   798  0008E4  1771               	andwf	(??_main+1)& (0+255),f,b
   799  0008E6  51C7               	movf	(_hour+1)& (0+255),w,b
   800  0008E8  1772               	andwf	(??_main+2)& (0+255),f,b
   801  0008EA  5171               	movf	(??_main+1)& (0+255),w,b
   802  0008EC  1172               	iorwf	(??_main+2)& (0+255),w,b
   803  0008EE  B4D8               	btfsc	status,2,c
   804  0008F0  EF7C  F004         	goto	u1331
   805  0008F4  EF7E  F004         	goto	u1330
   806  0008F8                     u1331:
   807  0008F8  EF89  F004         	goto	l2010
   808  0008FC                     u1330:
   809  0008FC                     
   810                           ; BSR set to: 0
   811                           ;RTC.c: 71:                 LCD_String_xy(1,14,"PM");
   812  0008FC  0E0E               	movlw	14
   813  0008FE  6E0B               	movwf	LCD_String_xy@pos^0,c
   814  000900  0E34               	movlw	low STR_1
   815  000902  6E0C               	movwf	LCD_String_xy@msg^0,c
   816  000904  0E08               	movlw	high STR_1
   817  000906  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   818  000908  0E01               	movlw	1
   819  00090A  ECA0  F00A         	call	_LCD_String_xy
   820                           
   821                           ;RTC.c: 72:             }
   822  00090E  EF92  F004         	goto	l2012
   823  000912                     l2010:
   824                           
   825                           ; BSR set to: 0
   826                           ;RTC.c: 74:                 LCD_String_xy(1,14,"AM");
   827  000912  0E0E               	movlw	14
   828  000914  6E0B               	movwf	LCD_String_xy@pos^0,c
   829  000916  0E31               	movlw	low STR_2
   830  000918  6E0C               	movwf	LCD_String_xy@msg^0,c
   831  00091A  0E08               	movlw	high STR_2
   832  00091C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   833  00091E  0E01               	movlw	1
   834  000920  ECA0  F00A         	call	_LCD_String_xy
   835  000924                     l2012:
   836                           
   837                           ;RTC.c: 77:             hour = hour & (0x1f);
   838  000924  0E1F               	movlw	31
   839  000926  0100               	movlb	0	; () banked
   840  000928  15C6               	andwf	_hour& (0+255),w,b
   841  00092A  6FC6               	movwf	_hour& (0+255),b
   842  00092C  6BC7               	clrf	(_hour+1)& (0+255),b
   843  00092E                     
   844                           ; BSR set to: 0
   845                           ;RTC.c: 78:             sprintf(secs,"%x ",sec);
   846  00092E  0E98               	movlw	low main@secs
   847  000930  6F60               	movwf	sprintf@s& (0+255),b
   848  000932  0E00               	movlw	high main@secs
   849  000934  6F61               	movwf	(sprintf@s+1)& (0+255),b
   850  000936  0E11               	movlw	low STR_3
   851  000938  6F62               	movwf	sprintf@fmt& (0+255),b
   852  00093A  0E08               	movlw	high STR_3
   853  00093C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   854  00093E  C0CA  F064         	movff	_sec,?_sprintf+4
   855  000942  C0CB  F065         	movff	_sec+1,?_sprintf+5
   856  000946  EC9C  F009         	call	_sprintf	;wreg free
   857  00094A                     
   858                           ;RTC.c: 79:             sprintf(mins,"%x:",min);
   859  00094A  0EA2               	movlw	low main@mins
   860  00094C  0100               	movlb	0	; () banked
   861  00094E  6F60               	movwf	sprintf@s& (0+255),b
   862  000950  0E00               	movlw	high main@mins
   863  000952  6F61               	movwf	(sprintf@s+1)& (0+255),b
   864  000954  0E0D               	movlw	low (STR_5+4)
   865  000956  6F62               	movwf	sprintf@fmt& (0+255),b
   866  000958  0E08               	movlw	high (STR_5+4)
   867  00095A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   868  00095C  C0C8  F064         	movff	_min,?_sprintf+4
   869  000960  C0C9  F065         	movff	_min+1,?_sprintf+5
   870  000964  EC9C  F009         	call	_sprintf	;wreg free
   871  000968                     
   872                           ;RTC.c: 80:             sprintf(hours,"Tim:%x:",hour);
   873  000968  0EAC               	movlw	low main@hours
   874  00096A  0100               	movlb	0	; () banked
   875  00096C  6F60               	movwf	sprintf@s& (0+255),b
   876  00096E  0E00               	movlw	high main@hours
   877  000970  6F61               	movwf	(sprintf@s+1)& (0+255),b
   878  000972  0E09               	movlw	low STR_5
   879  000974  6F62               	movwf	sprintf@fmt& (0+255),b
   880  000976  0E08               	movlw	high STR_5
   881  000978  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   882  00097A  C0C6  F064         	movff	_hour,?_sprintf+4
   883  00097E  C0C7  F065         	movff	_hour+1,?_sprintf+5
   884  000982  EC9C  F009         	call	_sprintf	;wreg free
   885  000986                     
   886                           ;RTC.c: 81:             LCD_String_xy(0,0,hours);
   887  000986  0E00               	movlw	0
   888  000988  6E0B               	movwf	LCD_String_xy@pos^0,c
   889  00098A  0EAC               	movlw	low main@hours
   890  00098C  6E0C               	movwf	LCD_String_xy@msg^0,c
   891  00098E  0E00               	movlw	high main@hours
   892  000990  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   893  000992  0E00               	movlw	0
   894  000994  ECA0  F00A         	call	_LCD_String_xy
   895  000998                     l2022:
   896                           
   897                           ;RTC.c: 82:             LCD_String(mins);
   898  000998  0EA2               	movlw	low main@mins
   899  00099A  6E09               	movwf	LCD_String@msg^0,c
   900  00099C  0E00               	movlw	high main@mins
   901  00099E  6E0A               	movwf	(LCD_String@msg+1)^0,c
   902  0009A0  EC40  F009         	call	_LCD_String	;wreg free
   903  0009A4                     
   904                           ;RTC.c: 83:             LCD_String(secs);
   905  0009A4  0E98               	movlw	low main@secs
   906  0009A6  6E09               	movwf	LCD_String@msg^0,c
   907  0009A8  0E00               	movlw	high main@secs
   908  0009AA  6E0A               	movwf	(LCD_String@msg+1)^0,c
   909  0009AC  EC40  F009         	call	_LCD_String	;wreg free
   910                           
   911                           ;RTC.c: 84:         }
   912  0009B0  EF15  F005         	goto	l2040
   913  0009B4                     l2026:
   914                           
   915                           ; BSR set to: 0
   916                           ;RTC.c: 87:             hour = hour & (0x3f);
   917  0009B4  0E3F               	movlw	63
   918  0009B6  15C6               	andwf	_hour& (0+255),w,b
   919  0009B8  6FC6               	movwf	_hour& (0+255),b
   920  0009BA  6BC7               	clrf	(_hour+1)& (0+255),b
   921  0009BC                     
   922                           ; BSR set to: 0
   923                           ;RTC.c: 88:             sprintf(secs,"%x ",sec);
   924  0009BC  0E98               	movlw	low main@secs
   925  0009BE  6F60               	movwf	sprintf@s& (0+255),b
   926  0009C0  0E00               	movlw	high main@secs
   927  0009C2  6F61               	movwf	(sprintf@s+1)& (0+255),b
   928  0009C4  0E11               	movlw	low STR_3
   929  0009C6  6F62               	movwf	sprintf@fmt& (0+255),b
   930  0009C8  0E08               	movlw	high STR_3
   931  0009CA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   932  0009CC  C0CA  F064         	movff	_sec,?_sprintf+4
   933  0009D0  C0CB  F065         	movff	_sec+1,?_sprintf+5
   934  0009D4  EC9C  F009         	call	_sprintf	;wreg free
   935  0009D8                     
   936                           ;RTC.c: 89:             sprintf(mins,"%x:",min);
   937  0009D8  0EA2               	movlw	low main@mins
   938  0009DA  0100               	movlb	0	; () banked
   939  0009DC  6F60               	movwf	sprintf@s& (0+255),b
   940  0009DE  0E00               	movlw	high main@mins
   941  0009E0  6F61               	movwf	(sprintf@s+1)& (0+255),b
   942  0009E2  0E0D               	movlw	low (STR_5+4)
   943  0009E4  6F62               	movwf	sprintf@fmt& (0+255),b
   944  0009E6  0E08               	movlw	high (STR_5+4)
   945  0009E8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   946  0009EA  C0C8  F064         	movff	_min,?_sprintf+4
   947  0009EE  C0C9  F065         	movff	_min+1,?_sprintf+5
   948  0009F2  EC9C  F009         	call	_sprintf	;wreg free
   949  0009F6                     
   950                           ;RTC.c: 90:             sprintf(hours,"Tim:%x:",hour);
   951  0009F6  0EAC               	movlw	low main@hours
   952  0009F8  0100               	movlb	0	; () banked
   953  0009FA  6F60               	movwf	sprintf@s& (0+255),b
   954  0009FC  0E00               	movlw	high main@hours
   955  0009FE  6F61               	movwf	(sprintf@s+1)& (0+255),b
   956  000A00  0E09               	movlw	low STR_5
   957  000A02  6F62               	movwf	sprintf@fmt& (0+255),b
   958  000A04  0E08               	movlw	high STR_5
   959  000A06  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   960  000A08  C0C6  F064         	movff	_hour,?_sprintf+4
   961  000A0C  C0C7  F065         	movff	_hour+1,?_sprintf+5
   962  000A10  EC9C  F009         	call	_sprintf	;wreg free
   963  000A14                     
   964                           ;RTC.c: 91:             LCD_String_xy(0,0,hours);
   965  000A14  0E00               	movlw	0
   966  000A16  6E0B               	movwf	LCD_String_xy@pos^0,c
   967  000A18  0EAC               	movlw	low main@hours
   968  000A1A  6E0C               	movwf	LCD_String_xy@msg^0,c
   969  000A1C  0E00               	movlw	high main@hours
   970  000A1E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   971  000A20  0E00               	movlw	0
   972  000A22  ECA0  F00A         	call	_LCD_String_xy
   973  000A26  EFCC  F004         	goto	l2022
   974  000A2A                     l2040:
   975                           
   976                           ;RTC.c: 96:         RTC_Read_Calendar(3);
   977  000A2A  0E03               	movlw	3
   978  000A2C  EC6F  F009         	call	_RTC_Read_Calendar
   979  000A30                     
   980                           ;RTC.c: 97:         I2C_Stop();
   981  000A30  ECCF  F00B         	call	_I2C_Stop	;wreg free
   982  000A34                     
   983                           ;RTC.c: 98:         sprintf(date,"Cal %x-",Date);
   984  000A34  0E7A               	movlw	low main@date
   985  000A36  0100               	movlb	0	; () banked
   986  000A38  6F60               	movwf	sprintf@s& (0+255),b
   987  000A3A  0E00               	movlw	high main@date
   988  000A3C  6F61               	movwf	(sprintf@s+1)& (0+255),b
   989  000A3E  0E01               	movlw	low STR_9
   990  000A40  6F62               	movwf	sprintf@fmt& (0+255),b
   991  000A42  0E08               	movlw	high STR_9
   992  000A44  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   993  000A46  C0C2  F064         	movff	_Date,?_sprintf+4
   994  000A4A  C0C3  F065         	movff	_Date+1,?_sprintf+5
   995  000A4E  EC9C  F009         	call	_sprintf	;wreg free
   996  000A52                     
   997                           ;RTC.c: 99:         sprintf(month,"%x-",Month);
   998  000A52  0E84               	movlw	low main@month
   999  000A54  0100               	movlb	0	; () banked
  1000  000A56  6F60               	movwf	sprintf@s& (0+255),b
  1001  000A58  0E00               	movlw	high main@month
  1002  000A5A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1003  000A5C  0E05               	movlw	low (STR_9+4)
  1004  000A5E  6F62               	movwf	sprintf@fmt& (0+255),b
  1005  000A60  0E08               	movlw	high (STR_9+4)
  1006  000A62  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1007  000A64  C0C0  F064         	movff	_Month,?_sprintf+4
  1008  000A68  C0C1  F065         	movff	_Month+1,?_sprintf+5
  1009  000A6C  EC9C  F009         	call	_sprintf	;wreg free
  1010  000A70                     
  1011                           ;RTC.c: 100:         sprintf(year,"%x ",Year);
  1012  000A70  0E8E               	movlw	low main@year
  1013  000A72  0100               	movlb	0	; () banked
  1014  000A74  6F60               	movwf	sprintf@s& (0+255),b
  1015  000A76  0E00               	movlw	high main@year
  1016  000A78  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1017  000A7A  0E11               	movlw	low STR_3
  1018  000A7C  6F62               	movwf	sprintf@fmt& (0+255),b
  1019  000A7E  0E08               	movlw	high STR_3
  1020  000A80  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1021  000A82  C0BE  F064         	movff	_Year,?_sprintf+4
  1022  000A86  C0BF  F065         	movff	_Year+1,?_sprintf+5
  1023  000A8A  EC9C  F009         	call	_sprintf	;wreg free
  1024  000A8E                     
  1025                           ;RTC.c: 101:         LCD_String_xy(2,0,date);
  1026  000A8E  0E00               	movlw	0
  1027  000A90  6E0B               	movwf	LCD_String_xy@pos^0,c
  1028  000A92  0E7A               	movlw	low main@date
  1029  000A94  6E0C               	movwf	LCD_String_xy@msg^0,c
  1030  000A96  0E00               	movlw	high main@date
  1031  000A98  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1032  000A9A  0E02               	movlw	2
  1033  000A9C  ECA0  F00A         	call	_LCD_String_xy
  1034  000AA0                     
  1035                           ;RTC.c: 102:         LCD_String(month);
  1036  000AA0  0E84               	movlw	low main@month
  1037  000AA2  6E09               	movwf	LCD_String@msg^0,c
  1038  000AA4  0E00               	movlw	high main@month
  1039  000AA6  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1040  000AA8  EC40  F009         	call	_LCD_String	;wreg free
  1041  000AAC                     
  1042                           ;RTC.c: 103:         LCD_String(year);
  1043  000AAC  0E8E               	movlw	low main@year
  1044  000AAE  6E09               	movwf	LCD_String@msg^0,c
  1045  000AB0  0E00               	movlw	high main@year
  1046  000AB2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1047  000AB4  EC40  F009         	call	_LCD_String	;wreg free
  1048                           
  1049                           ;RTC.c: 106:         switch(days[Day])
  1050  000AB8  EF96  F005         	goto	l2072
  1051  000ABC                     l2056:
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;RTC.c: 109:                         LCD_String("Sun");
  1055  000ABC  0E25               	movlw	low STR_12
  1056  000ABE  6E09               	movwf	LCD_String@msg^0,c
  1057  000AC0  0E08               	movlw	high STR_12
  1058  000AC2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1059  000AC4  EC40  F009         	call	_LCD_String	;wreg free
  1060                           
  1061                           ;RTC.c: 110:                         break;
  1062  000AC8  EF38  F004         	goto	l1998
  1063  000ACC                     l2058:
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;RTC.c: 112:                         LCD_String("Mon");
  1067  000ACC  0E21               	movlw	low STR_13
  1068  000ACE  6E09               	movwf	LCD_String@msg^0,c
  1069  000AD0  0E08               	movlw	high STR_13
  1070  000AD2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1071  000AD4  EC40  F009         	call	_LCD_String	;wreg free
  1072                           
  1073                           ;RTC.c: 113:                         break;
  1074  000AD8  EF38  F004         	goto	l1998
  1075  000ADC                     l2060:
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;RTC.c: 115:                         LCD_String("Tue");
  1079  000ADC  0E19               	movlw	low STR_14
  1080  000ADE  6E09               	movwf	LCD_String@msg^0,c
  1081  000AE0  0E08               	movlw	high STR_14
  1082  000AE2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1083  000AE4  EC40  F009         	call	_LCD_String	;wreg free
  1084                           
  1085                           ;RTC.c: 116:                         break;
  1086  000AE8  EF38  F004         	goto	l1998
  1087  000AEC                     l2062:
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;RTC.c: 118:                         LCD_String("Wed");
  1091  000AEC  0E15               	movlw	low STR_15
  1092  000AEE  6E09               	movwf	LCD_String@msg^0,c
  1093  000AF0  0E08               	movlw	high STR_15
  1094  000AF2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1095  000AF4  EC40  F009         	call	_LCD_String	;wreg free
  1096                           
  1097                           ;RTC.c: 119:                         break;
  1098  000AF8  EF38  F004         	goto	l1998
  1099  000AFC                     l2064:
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;RTC.c: 121:                         LCD_String("Thu");
  1103  000AFC  0E2D               	movlw	low STR_16
  1104  000AFE  6E09               	movwf	LCD_String@msg^0,c
  1105  000B00  0E08               	movlw	high STR_16
  1106  000B02  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1107  000B04  EC40  F009         	call	_LCD_String	;wreg free
  1108                           
  1109                           ;RTC.c: 122:                         break;
  1110  000B08  EF38  F004         	goto	l1998
  1111  000B0C                     l2066:
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;RTC.c: 124:                         LCD_String("Fri");
  1115  000B0C  0E1D               	movlw	low STR_17
  1116  000B0E  6E09               	movwf	LCD_String@msg^0,c
  1117  000B10  0E08               	movlw	high STR_17
  1118  000B12  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1119  000B14  EC40  F009         	call	_LCD_String	;wreg free
  1120                           
  1121                           ;RTC.c: 125:                         break;
  1122  000B18  EF38  F004         	goto	l1998
  1123  000B1C                     l2068:
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;RTC.c: 127:                         LCD_String("Sat");
  1127  000B1C  0E29               	movlw	low STR_18
  1128  000B1E  6E09               	movwf	LCD_String@msg^0,c
  1129  000B20  0E08               	movlw	high STR_18
  1130  000B22  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1131  000B24  EC40  F009         	call	_LCD_String	;wreg free
  1132                           
  1133                           ;RTC.c: 128:                         break;
  1134  000B28  EF38  F004         	goto	l1998
  1135  000B2C                     l2072:
  1136  000B2C  0E73               	movlw	low main@days
  1137  000B2E  0100               	movlb	0	; () banked
  1138  000B30  25C4               	addwf	_Day& (0+255),w,b
  1139  000B32  6ED9               	movwf	fsr2l,c
  1140  000B34  0E00               	movlw	high main@days
  1141  000B36  21C5               	addwfc	(_Day+1)& (0+255),w,b
  1142  000B38  6EDA               	movwf	fsr2h,c
  1143  000B3A  50DF               	movf	indf2,w,c
  1144  000B3C  6F70               	movwf	??_main& (0+255),b
  1145  000B3E  6B71               	clrf	(??_main+1)& (0+255),b
  1146                           
  1147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1148                           ; Switch size 1, requested type "simple"
  1149                           ; Number of cases is 1, Range of values is 0 to 0
  1150                           ; switch strategies available:
  1151                           ; Name         Instructions Cycles
  1152                           ; simple_byte            4     3 (average)
  1153                           ;	Chosen strategy is simple_byte
  1154  000B40  5171               	movf	(??_main+1)& (0+255),w,b
  1155  000B42  0A00               	xorlw	0	; case 0
  1156  000B44  B4D8               	btfsc	status,2,c
  1157  000B46  EFA7  F005         	goto	l2106
  1158  000B4A  EF38  F004         	goto	l1998
  1159  000B4E                     l2106:
  1160                           
  1161                           ; BSR set to: 0
  1162                           ; Switch size 1, requested type "simple"
  1163                           ; Number of cases is 7, Range of values is 70 to 116
  1164                           ; switch strategies available:
  1165                           ; Name         Instructions Cycles
  1166                           ; simple_byte           22    12 (average)
  1167                           ;	Chosen strategy is simple_byte
  1168  000B4E  5170               	movf	??_main& (0+255),w,b
  1169  000B50  0A46               	xorlw	70	; case 70
  1170  000B52  B4D8               	btfsc	status,2,c
  1171  000B54  EF86  F005         	goto	l2066
  1172  000B58  0A0B               	xorlw	11	; case 77
  1173  000B5A  B4D8               	btfsc	status,2,c
  1174  000B5C  EF66  F005         	goto	l2058
  1175  000B60  0A1E               	xorlw	30	; case 83
  1176  000B62  B4D8               	btfsc	status,2,c
  1177  000B64  EF5E  F005         	goto	l2056
  1178  000B68  0A07               	xorlw	7	; case 84
  1179  000B6A  B4D8               	btfsc	status,2,c
  1180  000B6C  EF6E  F005         	goto	l2060
  1181  000B70  0A03               	xorlw	3	; case 87
  1182  000B72  B4D8               	btfsc	status,2,c
  1183  000B74  EF76  F005         	goto	l2062
  1184  000B78  0A24               	xorlw	36	; case 115
  1185  000B7A  B4D8               	btfsc	status,2,c
  1186  000B7C  EF8E  F005         	goto	l2068
  1187  000B80  0A07               	xorlw	7	; case 116
  1188  000B82  B4D8               	btfsc	status,2,c
  1189  000B84  EF7E  F005         	goto	l2064
  1190  000B88  EF38  F004         	goto	l1998
  1191  000B8C  EF00  F000         	goto	start
  1192  000B90                     __end_of_main:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function _sprintf *****************
  1196 ;; Defined at:
  1197 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1200 ;;		 -> main@year(10), main@month(10), main@date(10), main@hours(10), 
  1201 ;;		 -> main@mins(10), main@secs(10), 
  1202 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1203 ;;		 -> STR_11(4), STR_10(4), STR_9(8), STR_8(8), 
  1204 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(4), 
  1205 ;;		 -> STR_3(4), 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1208 ;;  ap              2    8[BANK0 ] PTR void [1]
  1209 ;;		 -> ?_sprintf(2), 
  1210 ;;  ret             2    0        int 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  2    0[BANK0 ] int 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1220 ;;      Params:         0       6       0       0       0       0       0       0       0
  1221 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1223 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1224 ;;Total ram usage:       16 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    7
  1227 ;; This function calls:
  1228 ;;		_vfprintf
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text1
  1235  001338                     __ptext1:
  1236                           	callstack 0
  1237  001338                     _sprintf:
  1238                           	callstack 23
  1239  001338  0E64               	movlw	low (?_sprintf+4)
  1240  00133A  0100               	movlb	0	; () banked
  1241  00133C  6F68               	movwf	sprintf@ap& (0+255),b
  1242  00133E  0E00               	movlw	high (?_sprintf+4)
  1243  001340  6F69               	movwf	(sprintf@ap+1)& (0+255),b
  1244  001342  C060  F06A         	movff	sprintf@s,sprintf@f
  1245  001346  C061  F06B         	movff	sprintf@s+1,sprintf@f+1
  1246  00134A                     
  1247                           ; BSR set to: 0
  1248  00134A  0E00               	movlw	0
  1249  00134C  6F6D               	movwf	(sprintf@f+3)& (0+255),b
  1250  00134E  0E00               	movlw	0
  1251  001350  6F6C               	movwf	(sprintf@f+2)& (0+255),b
  1252  001352                     
  1253                           ; BSR set to: 0
  1254  001352  0E00               	movlw	0
  1255  001354  6F6F               	movwf	(sprintf@f+5)& (0+255),b
  1256  001356  0E00               	movlw	0
  1257  001358  6F6E               	movwf	(sprintf@f+4)& (0+255),b
  1258  00135A                     
  1259                           ; BSR set to: 0
  1260  00135A  0E6A               	movlw	low sprintf@f
  1261  00135C  6E56               	movwf	vfprintf@fp^0,c
  1262  00135E  0E00               	movlw	high sprintf@f
  1263  001360  6E57               	movwf	(vfprintf@fp+1)^0,c
  1264  001362  C062  F058         	movff	sprintf@fmt,vfprintf@fmt
  1265  001366  C063  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1266  00136A  0E68               	movlw	low sprintf@ap
  1267  00136C  6E5A               	movwf	vfprintf@ap^0,c
  1268  00136E  0E00               	movlw	high sprintf@ap
  1269  001370  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1270  001372  ECE0  F008         	call	_vfprintf	;wreg free
  1271  001376  0100               	movlb	0	; () banked
  1272  001378  516C               	movf	(sprintf@f+2)& (0+255),w,b
  1273  00137A  2560               	addwf	sprintf@s& (0+255),w,b
  1274  00137C  6ED9               	movwf	fsr2l,c
  1275  00137E  516D               	movf	(sprintf@f+3)& (0+255),w,b
  1276  001380  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1277  001382  6EDA               	movwf	fsr2h,c
  1278  001384  0E00               	movlw	0
  1279  001386  6EDF               	movwf	indf2,c
  1280  001388                     
  1281                           ; BSR set to: 0
  1282  001388  0012               	return		;funcret
  1283  00138A                     __end_of_sprintf:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _vfprintf *****************
  1287 ;; Defined at:
  1288 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1291 ;;		 -> sprintf@f(6), 
  1292 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1293 ;;		 -> STR_11(4), STR_10(4), STR_9(8), STR_8(8), 
  1294 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(4), 
  1295 ;;		 -> STR_3(4), 
  1296 ;;  ap              2   89[COMRAM] PTR PTR void 
  1297 ;;		 -> sprintf@ap(2), 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1300 ;;		 -> STR_11(4), STR_10(4), STR_9(8), STR_8(8), 
  1301 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(4), 
  1302 ;;		 -> STR_3(4), 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2   85[COMRAM] int 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1312 ;;      Params:         6       0       0       0       0       0       0       0       0
  1313 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1315 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1316 ;;Total ram usage:        8 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    6
  1319 ;; This function calls:
  1320 ;;		_vfpfcnvrt
  1321 ;; This function is called by:
  1322 ;;		_sprintf
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text2
  1327  0011C0                     __ptext2:
  1328                           	callstack 0
  1329  0011C0                     _vfprintf:
  1330                           	callstack 23
  1331  0011C0                     
  1332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1333  0011C0  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1334  0011C4  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1335  0011C8                     
  1336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1337  0011C8  0E00               	movlw	0
  1338  0011CA  0100               	movlb	0	; () banked
  1339  0011CC  6FB9               	movwf	(_nout+1)& (0+255),b
  1340  0011CE  0E00               	movlw	0
  1341  0011D0  6FB8               	movwf	_nout& (0+255),b
  1342                           
  1343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1344  0011D2  EFFE  F008         	goto	l1896
  1345  0011D6                     l1894:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1349  0011D6  C056  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1350  0011DA  C057  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1351  0011DE  0E5C               	movlw	low vfprintf@cfmt
  1352  0011E0  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1353  0011E2  0E00               	movlw	high vfprintf@cfmt
  1354  0011E4  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1355  0011E6  C05A  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1356  0011EA  C05B  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1357  0011EE  EC32  F007         	call	_vfpfcnvrt	;wreg free
  1358  0011F2  5043               	movf	?_vfpfcnvrt^0,w,c
  1359  0011F4  0100               	movlb	0	; () banked
  1360  0011F6  27B8               	addwf	_nout& (0+255),f,b
  1361  0011F8  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1362  0011FA  23B9               	addwfc	(_nout+1)& (0+255),f,b
  1363  0011FC                     l1896:
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1367  0011FC  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1368  001200  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1369  001204                     	if	0	;tblptru may be non-zero
  1370  001204                     	endif
  1371  001204                     	if	0	;tblptru may be non-zero
  1372  001204                     	endif
  1373  001204  0008               	tblrd		*
  1374  001206  50F5               	movf	tablat,w,c
  1375  001208  0900               	iorlw	0
  1376  00120A  A4D8               	btfss	status,2,c
  1377  00120C  EF0A  F009         	goto	u1251
  1378  001210  EF0C  F009         	goto	u1250
  1379  001214                     u1251:
  1380  001214  EFEB  F008         	goto	l1894
  1381  001218                     u1250:
  1382  001218                     
  1383                           ; BSR set to: 0
  1384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1385  001218  C0B8  F056         	movff	_nout,?_vfprintf
  1386  00121C  C0B9  F057         	movff	_nout+1,?_vfprintf+1
  1387  001220                     
  1388                           ; BSR set to: 0
  1389  001220  0012               	return		;funcret
  1390  001222                     __end_of_vfprintf:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function _vfpfcnvrt *****************
  1394 ;; Defined at:
  1395 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1398 ;;		 -> sprintf@f(6), 
  1399 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1400 ;;		 -> vfprintf@cfmt(2), 
  1401 ;;  ap              2   70[COMRAM] PTR PTR void 
  1402 ;;		 -> sprintf@ap(2), 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  llu             8   76[COMRAM] unsigned long long 
  1405 ;;  ll              8    0        long long 
  1406 ;;  f               4    0        long long 
  1407 ;;  vp              3    0        PTR void 
  1408 ;;  ct              3    0        unsigned char [3]
  1409 ;;  cp              3    0        PTR unsigned char 
  1410 ;;  i               2    0        int 
  1411 ;;  done            2    0        int 
  1412 ;;  c               1   84[COMRAM] unsigned char 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  2   66[COMRAM] int 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1422 ;;      Params:         6       0       0       0       0       0       0       0       0
  1423 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1424 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1425 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1426 ;;Total ram usage:       19 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    5
  1429 ;; This function calls:
  1430 ;;		_fputc
  1431 ;;		_xtoa
  1432 ;; This function is called by:
  1433 ;;		_vfprintf
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text3
  1438  000E64                     __ptext3:
  1439                           	callstack 0
  1440  000E64                     _vfpfcnvrt:
  1441                           	callstack 23
  1442  000E64                     
  1443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1444  000E64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1445  000E68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1446  000E6C  CFDE FFF6          	movff	postinc2,tblptrl
  1447  000E70  CFDD FFF7          	movff	postdec2,tblptrh
  1448  000E74                     	if	0	;tblptru may be non-zero
  1449  000E74                     	endif
  1450  000E74                     	if	0	;tblptru may be non-zero
  1451  000E74                     	endif
  1452  000E74  0008               	tblrd		*
  1453  000E76  50F5               	movf	tablat,w,c
  1454  000E78  0A25               	xorlw	37
  1455  000E7A  A4D8               	btfss	status,2,c
  1456  000E7C  EF42  F007         	goto	u1111
  1457  000E80  EF44  F007         	goto	u1110
  1458  000E84                     u1111:
  1459  000E84  EFFE  F007         	goto	l1820
  1460  000E88                     u1110:
  1461  000E88                     
  1462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1463  000E88  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1464  000E8C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1465  000E90  2ADE               	incf	postinc2,f,c
  1466  000E92  0E00               	movlw	0
  1467  000E94  22DD               	addwfc	postdec2,f,c
  1468  000E96                     
  1469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1470  000E96  0E00               	movlw	0
  1471  000E98  0100               	movlb	0	; () banked
  1472  000E9A  6FBB               	movwf	(_width+1)& (0+255),b
  1473  000E9C  0E00               	movlw	0
  1474  000E9E  6FBA               	movwf	_width& (0+255),b
  1475  000EA0  C0BA  F05E         	movff	_width,_flags
  1476  000EA4  C0BB  F05F         	movff	_width+1,_flags+1
  1477  000EA8                     
  1478                           ; BSR set to: 0
  1479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1480  000EA8  69BC               	setf	_prec& (0+255),b
  1481  000EAA  69BD               	setf	(_prec+1)& (0+255),b
  1482  000EAC                     
  1483                           ; BSR set to: 0
  1484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1485  000EAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1486  000EB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1487  000EB4  CFDE FFF6          	movff	postinc2,tblptrl
  1488  000EB8  CFDD FFF7          	movff	postdec2,tblptrh
  1489  000EBC                     	if	0	;tblptru may be non-zero
  1490  000EBC                     	endif
  1491  000EBC                     	if	0	;tblptru may be non-zero
  1492  000EBC                     	endif
  1493  000EBC  0008               	tblrd		*
  1494  000EBE  50F5               	movf	tablat,w,c
  1495  000EC0  0A78               	xorlw	120
  1496  000EC2  B4D8               	btfsc	status,2,c
  1497  000EC4  EF66  F007         	goto	u1121
  1498  000EC8  EF68  F007         	goto	u1120
  1499  000ECC                     u1121:
  1500  000ECC  EF7A  F007         	goto	l1794
  1501  000ED0                     u1120:
  1502  000ED0                     
  1503                           ; BSR set to: 0
  1504  000ED0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1505  000ED4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1506  000ED8  CFDE FFF6          	movff	postinc2,tblptrl
  1507  000EDC  CFDD FFF7          	movff	postdec2,tblptrh
  1508  000EE0                     	if	0	;tblptru may be non-zero
  1509  000EE0                     	endif
  1510  000EE0                     	if	0	;tblptru may be non-zero
  1511  000EE0                     	endif
  1512  000EE0  0008               	tblrd		*
  1513  000EE2  50F5               	movf	tablat,w,c
  1514  000EE4  0A58               	xorlw	88
  1515  000EE6  A4D8               	btfss	status,2,c
  1516  000EE8  EF78  F007         	goto	u1131
  1517  000EEC  EF7A  F007         	goto	u1130
  1518  000EF0                     u1131:
  1519  000EF0  EFC8  F007         	goto	l1804
  1520  000EF4                     u1130:
  1521  000EF4                     l1794:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1525  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1526  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1527  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  1528  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  1529  000F04                     	if	0	;tblptru may be non-zero
  1530  000F04                     	endif
  1531  000F04                     	if	0	;tblptru may be non-zero
  1532  000F04                     	endif
  1533  000F04  0008               	tblrd		*
  1534  000F06  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1535  000F0A                     
  1536                           ; BSR set to: 0
  1537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1538  000F0A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1539  000F0E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1540  000F12  2ADE               	incf	postinc2,f,c
  1541  000F14  0E00               	movlw	0
  1542  000F16  22DD               	addwfc	postdec2,f,c
  1543  000F18                     
  1544                           ; BSR set to: 0
  1545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1546  000F18  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1547  000F1C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1548  000F20  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1549  000F24  0E02               	movlw	2
  1550  000F26  26DE               	addwf	postinc2,f,c
  1551  000F28  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1552  000F2C  0E00               	movlw	0
  1553  000F2E  22DD               	addwfc	postdec2,f,c
  1554  000F30  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1555  000F34  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1556  000F38  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  1557  000F3C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  1558  000F40  C04B  F04D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1559  000F44  C04C  F04E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1560  000F48  6A4F               	clrf	(vfpfcnvrt@llu+2)^0,c
  1561  000F4A  6A50               	clrf	(vfpfcnvrt@llu+3)^0,c
  1562  000F4C  6A51               	clrf	(vfpfcnvrt@llu+4)^0,c
  1563  000F4E  6A52               	clrf	(vfpfcnvrt@llu+5)^0,c
  1564  000F50  6A53               	clrf	(vfpfcnvrt@llu+6)^0,c
  1565  000F52  6A54               	clrf	(vfpfcnvrt@llu+7)^0,c
  1566  000F54                     
  1567                           ; BSR set to: 0
  1568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1569  000F54  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1570  000F58  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1571  000F5C  C04D  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1572  000F60  C04E  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1573  000F64  C04F  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1574  000F68  C050  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1575  000F6C  C051  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1576  000F70  C052  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1577  000F74  C053  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1578  000F78  C054  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1579  000F7C  C055  F026         	movff	vfpfcnvrt@c,xtoa@x
  1580  000F80  ECC8  F005         	call	_xtoa	;wreg free
  1581  000F84  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  1582  000F88  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1583  000F8C  EF19  F008         	goto	l989
  1584  000F90                     l1804:
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1588  000F90  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1589  000F94  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1590  000F98  CFDE FFF6          	movff	postinc2,tblptrl
  1591  000F9C  CFDD FFF7          	movff	postdec2,tblptrh
  1592  000FA0                     	if	0	;tblptru may be non-zero
  1593  000FA0                     	endif
  1594  000FA0                     	if	0	;tblptru may be non-zero
  1595  000FA0                     	endif
  1596  000FA0  0008               	tblrd		*
  1597  000FA2  50F5               	movf	tablat,w,c
  1598  000FA4  0A25               	xorlw	37
  1599  000FA6  A4D8               	btfss	status,2,c
  1600  000FA8  EFD8  F007         	goto	u1141
  1601  000FAC  EFDA  F007         	goto	u1140
  1602  000FB0                     u1141:
  1603  000FB0  EFF1  F007         	goto	l1814
  1604  000FB4                     u1140:
  1605  000FB4                     
  1606                           ; BSR set to: 0
  1607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1608  000FB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1609  000FB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1610  000FBC  2ADE               	incf	postinc2,f,c
  1611  000FBE  0E00               	movlw	0
  1612  000FC0  22DD               	addwfc	postdec2,f,c
  1613  000FC2                     
  1614                           ; BSR set to: 0
  1615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1616  000FC2  0E00               	movlw	0
  1617  000FC4  6E02               	movwf	(fputc@c+1)^0,c
  1618  000FC6  0E25               	movlw	37
  1619  000FC8  6E01               	movwf	fputc@c^0,c
  1620  000FCA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1621  000FCE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1622  000FD2  EC1A  F008         	call	_fputc	;wreg free
  1623  000FD6                     l1810:
  1624                           
  1625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1626  000FD6  0E00               	movlw	0
  1627  000FD8  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1628  000FDA  0E01               	movlw	1
  1629  000FDC  6E43               	movwf	?_vfpfcnvrt^0,c
  1630  000FDE  EF19  F008         	goto	l989
  1631  000FE2                     l1814:
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1635  000FE2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1636  000FE6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1637  000FEA  2ADE               	incf	postinc2,f,c
  1638  000FEC  0E00               	movlw	0
  1639  000FEE  22DD               	addwfc	postdec2,f,c
  1640  000FF0                     
  1641                           ; BSR set to: 0
  1642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1643  000FF0  0E00               	movlw	0
  1644  000FF2  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1645  000FF4  0E00               	movlw	0
  1646  000FF6  6E43               	movwf	?_vfpfcnvrt^0,c
  1647  000FF8  EF19  F008         	goto	l989
  1648  000FFC                     l1820:
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1651  000FFC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1652  001000  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1653  001004  CFDE FFF6          	movff	postinc2,tblptrl
  1654  001008  CFDD FFF7          	movff	postdec2,tblptrh
  1655  00100C                     	if	0	;tblptru may be non-zero
  1656  00100C                     	endif
  1657  00100C                     	if	0	;tblptru may be non-zero
  1658  00100C                     	endif
  1659  00100C  0008               	tblrd		*
  1660  00100E  50F5               	movf	tablat,w,c
  1661  001010  6E01               	movwf	fputc@c^0,c
  1662  001012  6A02               	clrf	(fputc@c+1)^0,c
  1663  001014  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1664  001018  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1665  00101C  EC1A  F008         	call	_fputc	;wreg free
  1666  001020                     
  1667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1668  001020  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1669  001024  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1670  001028  2ADE               	incf	postinc2,f,c
  1671  00102A  0E00               	movlw	0
  1672  00102C  22DD               	addwfc	postdec2,f,c
  1673  00102E  EFEB  F007         	goto	l1810
  1674  001032                     l989:
  1675  001032  0012               	return		;funcret
  1676  001034                     __end_of_vfpfcnvrt:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _xtoa *****************
  1680 ;; Defined at:
  1681 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1684 ;;		 -> sprintf@f(6), 
  1685 ;;  d               8   29[COMRAM] unsigned long long 
  1686 ;;  x               1   37[COMRAM] unsigned char 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  n               8   54[COMRAM] unsigned long long 
  1689 ;;  c               2   64[COMRAM] int 
  1690 ;;  i               2   62[COMRAM] int 
  1691 ;;  w               2   52[COMRAM] int 
  1692 ;;  p               2   50[COMRAM] int 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2   27[COMRAM] int 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1702 ;;      Params:        11       0       0       0       0       0       0       0       0
  1703 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1704 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1705 ;;      Totals:        39       0       0       0       0       0       0       0       0
  1706 ;;Total ram usage:       39 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    4
  1709 ;; This function calls:
  1710 ;;		_isalpha
  1711 ;;		_isupper
  1712 ;;		_pad
  1713 ;;		_toupper
  1714 ;; This function is called by:
  1715 ;;		_vfpfcnvrt
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text4
  1720  000B90                     __ptext4:
  1721                           	callstack 0
  1722  000B90                     _xtoa:
  1723                           	callstack 23
  1724  000B90                     
  1725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1726  000B90  0100               	movlb	0	; () banked
  1727  000B92  BFBD               	btfsc	(_prec+1)& (0+255),7,b
  1728  000B94  EFCE  F005         	goto	u911
  1729  000B98  EFD0  F005         	goto	u910
  1730  000B9C                     u911:
  1731  000B9C  EFD1  F005         	goto	l1680
  1732  000BA0                     u910:
  1733  000BA0                     
  1734                           ; BSR set to: 0
  1735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1736  000BA0  925E               	bcf	_flags^0,1,c
  1737  000BA2                     l1680:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1741  000BA2  BFBD               	btfsc	(_prec+1)& (0+255),7,b
  1742  000BA4  EFDE  F005         	goto	u920
  1743  000BA8  51BD               	movf	(_prec+1)& (0+255),w,b
  1744  000BAA  E106               	bnz	u921
  1745  000BAC  05BC               	decf	_prec& (0+255),w,b
  1746  000BAE  B0D8               	btfsc	status,0,c
  1747  000BB0  EFDC  F005         	goto	u921
  1748  000BB4  EFDE  F005         	goto	u920
  1749  000BB8                     u921:
  1750  000BB8  EFE4  F005         	goto	l957
  1751  000BBC                     u920:
  1752  000BBC                     
  1753                           ; BSR set to: 0
  1754  000BBC  0E00               	movlw	0
  1755  000BBE  6E34               	movwf	(xtoa@p+1)^0,c
  1756  000BC0  0E01               	movlw	1
  1757  000BC2  6E33               	movwf	xtoa@p^0,c
  1758  000BC4  EFE8  F005         	goto	l959
  1759  000BC8                     l957:
  1760                           
  1761                           ; BSR set to: 0
  1762  000BC8  C0BC  F033         	movff	_prec,xtoa@p
  1763  000BCC  C0BD  F034         	movff	_prec+1,xtoa@p+1
  1764  000BD0                     l959:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  1768  000BD0  C0BA  F035         	movff	_width,xtoa@w
  1769  000BD4  C0BB  F036         	movff	_width+1,xtoa@w+1
  1770                           
  1771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1772  000BD8  A85E               	btfss	_flags^0,4,c
  1773  000BDA  EFF1  F005         	goto	u931
  1774  000BDE  EFF3  F005         	goto	u930
  1775  000BE2                     u931:
  1776  000BE2  EFF7  F005         	goto	l1686
  1777  000BE6                     u930:
  1778  000BE6                     
  1779                           ; BSR set to: 0
  1780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  1781  000BE6  0EFE               	movlw	254
  1782  000BE8  2635               	addwf	xtoa@w^0,f,c
  1783  000BEA  0EFF               	movlw	255
  1784  000BEC  2236               	addwfc	(xtoa@w+1)^0,f,c
  1785  000BEE                     l1686:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  1789  000BEE  C01E  F037         	movff	xtoa@d,xtoa@n
  1790  000BF2  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  1791  000BF6  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  1792  000BFA  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  1793  000BFE  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  1794  000C02  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  1795  000C06  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  1796  000C0A  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  1797  000C0E                     
  1798                           ; BSR set to: 0
  1799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  1800  000C0E  0E00               	movlw	0
  1801  000C10  6E40               	movwf	(xtoa@i+1)^0,c
  1802  000C12  0E1F               	movlw	31
  1803  000C14  6E3F               	movwf	xtoa@i^0,c
  1804  000C16                     
  1805                           ; BSR set to: 0
  1806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  1807  000C16  0E00               	movlw	0
  1808  000C18  6FEB               	movwf	(_dbuf+31)& (0+255),b
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1811  000C1A  EFC2  F006         	goto	l1722
  1812  000C1E                     l1692:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  1815  000C1E  063F               	decf	xtoa@i^0,f,c
  1816  000C20  A0D8               	btfss	status,0,c
  1817  000C22  0640               	decf	(xtoa@i+1)^0,f,c
  1818  000C24                     
  1819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  1820  000C24  0E0F               	movlw	15
  1821  000C26  1437               	andwf	xtoa@n^0,w,c
  1822  000C28  6E41               	movwf	xtoa@c^0,c
  1823  000C2A  6A42               	clrf	(xtoa@c+1)^0,c
  1824  000C2C                     
  1825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  1826  000C2C  BE42               	btfsc	(xtoa@c+1)^0,7,c
  1827  000C2E  EF22  F006         	goto	u941
  1828  000C32  5042               	movf	(xtoa@c+1)^0,w,c
  1829  000C34  E109               	bnz	u940
  1830  000C36  0E0A               	movlw	10
  1831  000C38  5C41               	subwf	xtoa@c^0,w,c
  1832  000C3A  A0D8               	btfss	status,0,c
  1833  000C3C  EF22  F006         	goto	u941
  1834  000C40  EF24  F006         	goto	u940
  1835  000C44                     u941:
  1836  000C44  EF2C  F006         	goto	l1700
  1837  000C48                     u940:
  1838  000C48  0E57               	movlw	87
  1839  000C4A  2441               	addwf	xtoa@c^0,w,c
  1840  000C4C  6E41               	movwf	xtoa@c^0,c
  1841  000C4E  0E00               	movlw	0
  1842  000C50  2042               	addwfc	(xtoa@c+1)^0,w,c
  1843  000C52  6E42               	movwf	(xtoa@c+1)^0,c
  1844  000C54  EF32  F006         	goto	l966
  1845  000C58                     l1700:
  1846  000C58  0E30               	movlw	48
  1847  000C5A  2441               	addwf	xtoa@c^0,w,c
  1848  000C5C  6E41               	movwf	xtoa@c^0,c
  1849  000C5E  0E00               	movlw	0
  1850  000C60  2042               	addwfc	(xtoa@c+1)^0,w,c
  1851  000C62  6E42               	movwf	(xtoa@c+1)^0,c
  1852  000C64                     l966:
  1853  000C64  0EBF               	movlw	191
  1854  000C66  6E27               	movwf	??_xtoa^0,c
  1855  000C68  0EFF               	movlw	255
  1856  000C6A  6E28               	movwf	(??_xtoa+1)^0,c
  1857  000C6C  5026               	movf	xtoa@x^0,w,c
  1858  000C6E  6E29               	movwf	(??_xtoa+2)^0,c
  1859  000C70  6A2A               	clrf	(??_xtoa+3)^0,c
  1860  000C72  5027               	movf	??_xtoa^0,w,c
  1861  000C74  2629               	addwf	(??_xtoa+2)^0,f,c
  1862  000C76  5028               	movf	(??_xtoa+1)^0,w,c
  1863  000C78  222A               	addwfc	(??_xtoa+3)^0,f,c
  1864  000C7A  502A               	movf	(??_xtoa+3)^0,w,c
  1865  000C7C  E10A               	bnz	u950
  1866  000C7E  0E1A               	movlw	26
  1867  000C80  5C29               	subwf	(??_xtoa+2)^0,w,c
  1868  000C82  A0D8               	btfss	status,0,c
  1869  000C84  EF46  F006         	goto	u951
  1870  000C88  EF49  F006         	goto	u950
  1871  000C8C                     u951:
  1872  000C8C  0E01               	movlw	1
  1873  000C8E  EF4A  F006         	goto	u960
  1874  000C92                     u950:
  1875  000C92  0E00               	movlw	0
  1876  000C94                     u960:
  1877  000C94  6E2F               	movwf	_xtoa$911^0,c
  1878  000C96  6A30               	clrf	(_xtoa$911+1)^0,c
  1879  000C98  502F               	movf	_xtoa$911^0,w,c
  1880  000C9A  1030               	iorwf	(_xtoa$911+1)^0,w,c
  1881  000C9C  B4D8               	btfsc	status,2,c
  1882  000C9E  EF53  F006         	goto	u971
  1883  000CA2  EF55  F006         	goto	u970
  1884  000CA6                     u971:
  1885  000CA6  EF85  F006         	goto	l1714
  1886  000CAA                     u970:
  1887  000CAA  0E9F               	movlw	159
  1888  000CAC  6E27               	movwf	??_xtoa^0,c
  1889  000CAE  0EFF               	movlw	255
  1890  000CB0  6E28               	movwf	(??_xtoa+1)^0,c
  1891  000CB2  0E20               	movlw	32
  1892  000CB4  1041               	iorwf	xtoa@c^0,w,c
  1893  000CB6  6E29               	movwf	(??_xtoa+2)^0,c
  1894  000CB8  0E00               	movlw	0
  1895  000CBA  1042               	iorwf	(xtoa@c+1)^0,w,c
  1896  000CBC  6E2A               	movwf	(??_xtoa+3)^0,c
  1897  000CBE  5027               	movf	??_xtoa^0,w,c
  1898  000CC0  2629               	addwf	(??_xtoa+2)^0,f,c
  1899  000CC2  5028               	movf	(??_xtoa+1)^0,w,c
  1900  000CC4  222A               	addwfc	(??_xtoa+3)^0,f,c
  1901  000CC6  502A               	movf	(??_xtoa+3)^0,w,c
  1902  000CC8  E10A               	bnz	u980
  1903  000CCA  0E1A               	movlw	26
  1904  000CCC  5C29               	subwf	(??_xtoa+2)^0,w,c
  1905  000CCE  A0D8               	btfss	status,0,c
  1906  000CD0  EF6C  F006         	goto	u981
  1907  000CD4  EF6F  F006         	goto	u980
  1908  000CD8                     u981:
  1909  000CD8  0E01               	movlw	1
  1910  000CDA  EF70  F006         	goto	u990
  1911  000CDE                     u980:
  1912  000CDE  0E00               	movlw	0
  1913  000CE0                     u990:
  1914  000CE0  6E31               	movwf	_xtoa$912^0,c
  1915  000CE2  6A32               	clrf	(_xtoa$912+1)^0,c
  1916  000CE4  5031               	movf	_xtoa$912^0,w,c
  1917  000CE6  1032               	iorwf	(_xtoa$912+1)^0,w,c
  1918  000CE8  B4D8               	btfsc	status,2,c
  1919  000CEA  EF79  F006         	goto	u1001
  1920  000CEE  EF7B  F006         	goto	u1000
  1921  000CF2                     u1001:
  1922  000CF2  EF85  F006         	goto	l1714
  1923  000CF6                     u1000:
  1924  000CF6                     
  1925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  1926  000CF6  C041  F007         	movff	xtoa@c,toupper@c
  1927  000CFA  C042  F008         	movff	xtoa@c+1,toupper@c+1
  1928  000CFE  EC11  F009         	call	_toupper	;wreg free
  1929  000D02  C007  F041         	movff	?_toupper,xtoa@c
  1930  000D06  C008  F042         	movff	?_toupper+1,xtoa@c+1
  1931  000D0A                     l1714:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  1934  000D0A  0ECC               	movlw	low _dbuf
  1935  000D0C  243F               	addwf	xtoa@i^0,w,c
  1936  000D0E  6ED9               	movwf	fsr2l,c
  1937  000D10  0E00               	movlw	high _dbuf
  1938  000D12  2040               	addwfc	(xtoa@i+1)^0,w,c
  1939  000D14  6EDA               	movwf	fsr2h,c
  1940  000D16  C041  FFDF         	movff	xtoa@c,indf2
  1941  000D1A                     
  1942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  1943  000D1A  0633               	decf	xtoa@p^0,f,c
  1944  000D1C  A0D8               	btfss	status,0,c
  1945  000D1E  0634               	decf	(xtoa@p+1)^0,f,c
  1946  000D20                     
  1947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  1948  000D20  0635               	decf	xtoa@w^0,f,c
  1949  000D22  A0D8               	btfss	status,0,c
  1950  000D24  0636               	decf	(xtoa@w+1)^0,f,c
  1951  000D26                     
  1952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  1953  000D26  C037  F027         	movff	xtoa@n,??_xtoa
  1954  000D2A  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  1955  000D2E  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  1956  000D32  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  1957  000D36  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  1958  000D3A  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  1959  000D3E  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  1960  000D42  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  1961  000D46  0E05               	movlw	5
  1962  000D48  EFAF  F006         	goto	u1010
  1963  000D4C                     u1015:
  1964  000D4C  90D8               	bcf	status,0,c
  1965  000D4E  322E               	rrcf	(??_xtoa+7)^0,f,c
  1966  000D50  322D               	rrcf	(??_xtoa+6)^0,f,c
  1967  000D52  322C               	rrcf	(??_xtoa+5)^0,f,c
  1968  000D54  322B               	rrcf	(??_xtoa+4)^0,f,c
  1969  000D56  322A               	rrcf	(??_xtoa+3)^0,f,c
  1970  000D58  3229               	rrcf	(??_xtoa+2)^0,f,c
  1971  000D5A  3228               	rrcf	(??_xtoa+1)^0,f,c
  1972  000D5C  3227               	rrcf	??_xtoa^0,f,c
  1973  000D5E                     u1010:
  1974  000D5E  2EE8               	decfsz	wreg,f,c
  1975  000D60  EFA6  F006         	goto	u1015
  1976  000D64  C027  F037         	movff	??_xtoa,xtoa@n
  1977  000D68  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  1978  000D6C  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  1979  000D70  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  1980  000D74  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  1981  000D78  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  1982  000D7C  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  1983  000D80  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  1984  000D84                     l1722:
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1987  000D84  BE40               	btfsc	(xtoa@i+1)^0,7,c
  1988  000D86  EFCE  F006         	goto	u1021
  1989  000D8A  5040               	movf	(xtoa@i+1)^0,w,c
  1990  000D8C  E109               	bnz	u1020
  1991  000D8E  0E02               	movlw	2
  1992  000D90  5C3F               	subwf	xtoa@i^0,w,c
  1993  000D92  A0D8               	btfss	status,0,c
  1994  000D94  EFCE  F006         	goto	u1021
  1995  000D98  EFD0  F006         	goto	u1020
  1996  000D9C                     u1021:
  1997  000D9C  EF00  F007         	goto	l980
  1998  000DA0                     u1020:
  1999  000DA0  5037               	movf	xtoa@n^0,w,c
  2000  000DA2  1038               	iorwf	(xtoa@n+1)^0,w,c
  2001  000DA4  1039               	iorwf	(xtoa@n+2)^0,w,c
  2002  000DA6  103A               	iorwf	(xtoa@n+3)^0,w,c
  2003  000DA8  103B               	iorwf	(xtoa@n+4)^0,w,c
  2004  000DAA  103C               	iorwf	(xtoa@n+5)^0,w,c
  2005  000DAC  103D               	iorwf	(xtoa@n+6)^0,w,c
  2006  000DAE  103E               	iorwf	(xtoa@n+7)^0,w,c
  2007  000DB0  A4D8               	btfss	status,2,c
  2008  000DB2  EFDD  F006         	goto	u1031
  2009  000DB6  EFDF  F006         	goto	u1030
  2010  000DBA                     u1031:
  2011  000DBA  EF0F  F006         	goto	l1692
  2012  000DBE                     u1030:
  2013  000DBE  BE34               	btfsc	(xtoa@p+1)^0,7,c
  2014  000DC0  EFEC  F006         	goto	u1040
  2015  000DC4  5034               	movf	(xtoa@p+1)^0,w,c
  2016  000DC6  E106               	bnz	u1041
  2017  000DC8  0433               	decf	xtoa@p^0,w,c
  2018  000DCA  B0D8               	btfsc	status,0,c
  2019  000DCC  EFEA  F006         	goto	u1041
  2020  000DD0  EFEC  F006         	goto	u1040
  2021  000DD4                     u1041:
  2022  000DD4  EF0F  F006         	goto	l1692
  2023  000DD8                     u1040:
  2024  000DD8  BE36               	btfsc	(xtoa@w+1)^0,7,c
  2025  000DDA  EFF7  F006         	goto	u1051
  2026  000DDE  5036               	movf	(xtoa@w+1)^0,w,c
  2027  000DE0  E108               	bnz	u1050
  2028  000DE2  0435               	decf	xtoa@w^0,w,c
  2029  000DE4  A0D8               	btfss	status,0,c
  2030  000DE6  EFF7  F006         	goto	u1051
  2031  000DEA  EFF9  F006         	goto	u1050
  2032  000DEE                     u1051:
  2033  000DEE  EF00  F007         	goto	l980
  2034  000DF2                     u1050:
  2035  000DF2  B25E               	btfsc	_flags^0,1,c
  2036  000DF4  EFFE  F006         	goto	u1061
  2037  000DF8  EF00  F007         	goto	u1060
  2038  000DFC                     u1061:
  2039  000DFC  EF0F  F006         	goto	l1692
  2040  000E00                     u1060:
  2041  000E00                     l980:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2044  000E00  A85E               	btfss	_flags^0,4,c
  2045  000E02  EF05  F007         	goto	u1071
  2046  000E06  EF07  F007         	goto	u1070
  2047  000E0A                     u1071:
  2048  000E0A  EF1D  F007         	goto	l1738
  2049  000E0E                     u1070:
  2050  000E0E                     
  2051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  2052  000E0E  063F               	decf	xtoa@i^0,f,c
  2053  000E10  A0D8               	btfss	status,0,c
  2054  000E12  0640               	decf	(xtoa@i+1)^0,f,c
  2055  000E14                     
  2056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2057  000E14  0ECC               	movlw	low _dbuf
  2058  000E16  243F               	addwf	xtoa@i^0,w,c
  2059  000E18  6ED9               	movwf	fsr2l,c
  2060  000E1A  0E00               	movlw	high _dbuf
  2061  000E1C  2040               	addwfc	(xtoa@i+1)^0,w,c
  2062  000E1E  6EDA               	movwf	fsr2h,c
  2063  000E20  C026  FFDF         	movff	xtoa@x,indf2
  2064  000E24                     
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  2066  000E24  063F               	decf	xtoa@i^0,f,c
  2067  000E26  A0D8               	btfss	status,0,c
  2068  000E28  0640               	decf	(xtoa@i+1)^0,f,c
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2071  000E2A  0ECC               	movlw	low _dbuf
  2072  000E2C  243F               	addwf	xtoa@i^0,w,c
  2073  000E2E  6ED9               	movwf	fsr2l,c
  2074  000E30  0E00               	movlw	high _dbuf
  2075  000E32  2040               	addwfc	(xtoa@i+1)^0,w,c
  2076  000E34  6EDA               	movwf	fsr2h,c
  2077  000E36  0E30               	movlw	48
  2078  000E38  6EDF               	movwf	indf2,c
  2079  000E3A                     l1738:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2082  000E3A  C01C  F011         	movff	xtoa@fp,pad@fp
  2083  000E3E  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2084  000E42  0ECC               	movlw	low _dbuf
  2085  000E44  243F               	addwf	xtoa@i^0,w,c
  2086  000E46  6E13               	movwf	pad@buf^0,c
  2087  000E48  0E00               	movlw	high _dbuf
  2088  000E4A  2040               	addwfc	(xtoa@i+1)^0,w,c
  2089  000E4C  6E14               	movwf	(pad@buf+1)^0,c
  2090  000E4E  C035  F015         	movff	xtoa@w,pad@p
  2091  000E52  C036  F016         	movff	xtoa@w+1,pad@p+1
  2092  000E56  EC7F  F008         	call	_pad	;wreg free
  2093  000E5A  C011  F01C         	movff	?_pad,?_xtoa
  2094  000E5E  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2095  000E62  0012               	return		;funcret
  2096  000E64                     __end_of_xtoa:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _toupper *****************
  2100 ;; Defined at:
  2101 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  c               2    6[COMRAM] int 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  2    6[COMRAM] int 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2115 ;;      Params:         2       0       0       0       0       0       0       0       0
  2116 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2117 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2118 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2119 ;;Total ram usage:        8 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    1
  2122 ;; This function calls:
  2123 ;;		_islower
  2124 ;; This function is called by:
  2125 ;;		_xtoa
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text5
  2130  001222                     __ptext5:
  2131                           	callstack 0
  2132  001222                     _toupper:
  2133                           	callstack 25
  2134  001222  0E9F               	movlw	159
  2135  001224  6E09               	movwf	??_toupper^0,c
  2136  001226  0EFF               	movlw	255
  2137  001228  6E0A               	movwf	(??_toupper+1)^0,c
  2138  00122A  C007  F00B         	movff	toupper@c,??_toupper+2
  2139  00122E  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2140  001232  5009               	movf	??_toupper^0,w,c
  2141  001234  260B               	addwf	(??_toupper+2)^0,f,c
  2142  001236  500A               	movf	(??_toupper+1)^0,w,c
  2143  001238  220C               	addwfc	(??_toupper+3)^0,f,c
  2144  00123A  500C               	movf	(??_toupper+3)^0,w,c
  2145  00123C  E10A               	bnz	u850
  2146  00123E  0E1A               	movlw	26
  2147  001240  5C0B               	subwf	(??_toupper+2)^0,w,c
  2148  001242  A0D8               	btfss	status,0,c
  2149  001244  EF26  F009         	goto	u851
  2150  001248  EF29  F009         	goto	u850
  2151  00124C                     u851:
  2152  00124C  0E01               	movlw	1
  2153  00124E  EF2A  F009         	goto	u860
  2154  001252                     u850:
  2155  001252  0E00               	movlw	0
  2156  001254                     u860:
  2157  001254  6E0D               	movwf	_toupper$994^0,c
  2158  001256  6A0E               	clrf	(_toupper$994+1)^0,c
  2159  001258  500D               	movf	_toupper$994^0,w,c
  2160  00125A  100E               	iorwf	(_toupper$994+1)^0,w,c
  2161  00125C  B4D8               	btfsc	status,2,c
  2162  00125E  EF33  F009         	goto	u871
  2163  001262  EF35  F009         	goto	u870
  2164  001266                     u871:
  2165  001266  EF3B  F009         	goto	l1042
  2166  00126A                     u870:
  2167  00126A  0E5F               	movlw	95
  2168  00126C  1407               	andwf	toupper@c^0,w,c
  2169  00126E  6E07               	movwf	?_toupper^0,c
  2170  001270  6A08               	clrf	(?_toupper+1)^0,c
  2171  001272  EF3F  F009         	goto	l1047
  2172  001276                     l1042:
  2173  001276  C007  F007         	movff	toupper@c,?_toupper
  2174  00127A  C008  F008         	movff	toupper@c+1,?_toupper+1
  2175  00127E                     l1047:
  2176  00127E  0012               	return		;funcret
  2177  001280                     __end_of_toupper:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _islower *****************
  2181 ;; Defined at:
  2182 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  c               2    0[COMRAM] int 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  2    0[COMRAM] int 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2196 ;;      Params:         2       0       0       0       0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2198 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2199 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2200 ;;Total ram usage:        6 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_toupper
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text6
  2210  001630                     __ptext6:
  2211                           	callstack 0
  2212  001630                     _islower:
  2213                           	callstack 25
  2214  001630  0E9F               	movlw	159
  2215  001632  6E03               	movwf	??_islower^0,c
  2216  001634  0EFF               	movlw	255
  2217  001636  6E04               	movwf	(??_islower+1)^0,c
  2218  001638  C001  F005         	movff	islower@c,??_islower+2
  2219  00163C  C002  F006         	movff	islower@c+1,??_islower+3
  2220  001640  5003               	movf	??_islower^0,w,c
  2221  001642  2605               	addwf	(??_islower+2)^0,f,c
  2222  001644  5004               	movf	(??_islower+1)^0,w,c
  2223  001646  2206               	addwfc	(??_islower+3)^0,f,c
  2224  001648  5006               	movf	(??_islower+3)^0,w,c
  2225  00164A  E10A               	bnz	u750
  2226  00164C  0E1A               	movlw	26
  2227  00164E  5C05               	subwf	(??_islower+2)^0,w,c
  2228  001650  A0D8               	btfss	status,0,c
  2229  001652  EF2D  F00B         	goto	u751
  2230  001656  EF30  F00B         	goto	u750
  2231  00165A                     u751:
  2232  00165A  0E01               	movlw	1
  2233  00165C  EF31  F00B         	goto	u760
  2234  001660                     u750:
  2235  001660  0E00               	movlw	0
  2236  001662                     u760:
  2237  001662  6E01               	movwf	?_islower^0,c
  2238  001664  6A02               	clrf	(?_islower+1)^0,c
  2239  001666  0012               	return		;funcret
  2240  001668                     __end_of_islower:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function _pad *****************
  2244 ;; Defined at:
  2245 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2248 ;;		 -> sprintf@f(6), 
  2249 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2250 ;;		 -> dbuf(32), 
  2251 ;;  p               2   20[COMRAM] int 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  w               2   25[COMRAM] int 
  2254 ;;  i               2   23[COMRAM] int 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  2   16[COMRAM] int 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2264 ;;      Params:         6       0       0       0       0       0       0       0       0
  2265 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2266 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2267 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2268 ;;Total ram usage:       11 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    3
  2271 ;; This function calls:
  2272 ;;		_fputc
  2273 ;;		_fputs
  2274 ;;		_strlen
  2275 ;; This function is called by:
  2276 ;;		_xtoa
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text7
  2281  0010FE                     __ptext7:
  2282                           	callstack 0
  2283  0010FE                     _pad:
  2284                           	callstack 23
  2285  0010FE                     
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2287  0010FE  A05E               	btfss	_flags^0,0,c
  2288  001100  EF84  F008         	goto	u771
  2289  001104  EF86  F008         	goto	u770
  2290  001108                     u771:
  2291  001108  EF90  F008         	goto	l1622
  2292  00110C                     u770:
  2293  00110C                     
  2294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2295  00110C  C013  F00A         	movff	pad@buf,fputs@s
  2296  001110  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2297  001114  C011  F00C         	movff	pad@fp,fputs@fp
  2298  001118  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2299  00111C  EC7E  F00A         	call	_fputs	;wreg free
  2300  001120                     l1622:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2303  001120  BE16               	btfsc	(pad@p+1)^0,7,c
  2304  001122  EF95  F008         	goto	u781
  2305  001126  EF97  F008         	goto	u780
  2306  00112A                     u781:
  2307  00112A  EF9D  F008         	goto	l1626
  2308  00112E                     u780:
  2309  00112E  C015  F01A         	movff	pad@p,pad@w
  2310  001132  C016  F01B         	movff	pad@p+1,pad@w+1
  2311  001136  EFA1  F008         	goto	l947
  2312  00113A                     l1626:
  2313  00113A  0E00               	movlw	0
  2314  00113C  6E1B               	movwf	(pad@w+1)^0,c
  2315  00113E  0E00               	movlw	0
  2316  001140  6E1A               	movwf	pad@w^0,c
  2317  001142                     l947:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2320  001142  0E00               	movlw	0
  2321  001144  6E19               	movwf	(pad@i+1)^0,c
  2322  001146  0E00               	movlw	0
  2323  001148  6E18               	movwf	pad@i^0,c
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2326  00114A  EFB3  F008         	goto	l1632
  2327  00114E                     l1628:
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2330  00114E  0E00               	movlw	0
  2331  001150  6E02               	movwf	(fputc@c+1)^0,c
  2332  001152  0E20               	movlw	32
  2333  001154  6E01               	movwf	fputc@c^0,c
  2334  001156  C011  F003         	movff	pad@fp,fputc@fp
  2335  00115A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2336  00115E  EC1A  F008         	call	_fputc	;wreg free
  2337  001162                     
  2338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2339  001162  4A18               	infsnz	pad@i^0,f,c
  2340  001164  2A19               	incf	(pad@i+1)^0,f,c
  2341  001166                     l1632:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2344  001166  501A               	movf	pad@w^0,w,c
  2345  001168  5C18               	subwf	pad@i^0,w,c
  2346  00116A  5019               	movf	(pad@i+1)^0,w,c
  2347  00116C  0A80               	xorlw	128
  2348  00116E  6E17               	movwf	??_pad^0,c
  2349  001170  501B               	movf	(pad@w+1)^0,w,c
  2350  001172  0A80               	xorlw	128
  2351  001174  5817               	subwfb	??_pad^0,w,c
  2352  001176  A0D8               	btfss	status,0,c
  2353  001178  EFC0  F008         	goto	u791
  2354  00117C  EFC2  F008         	goto	u790
  2355  001180                     u791:
  2356  001180  EFA7  F008         	goto	l1628
  2357  001184                     u790:
  2358  001184                     
  2359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2360  001184  B05E               	btfsc	_flags^0,0,c
  2361  001186  EFC7  F008         	goto	u801
  2362  00118A  EFC9  F008         	goto	u800
  2363  00118E                     u801:
  2364  00118E  EFD3  F008         	goto	l1636
  2365  001192                     u800:
  2366  001192                     
  2367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2368  001192  C013  F00A         	movff	pad@buf,fputs@s
  2369  001196  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2370  00119A  C011  F00C         	movff	pad@fp,fputs@fp
  2371  00119E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2372  0011A2  EC7E  F00A         	call	_fputs	;wreg free
  2373  0011A6                     l1636:
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2376  0011A6  C013  F001         	movff	pad@buf,strlen@s
  2377  0011AA  C014  F002         	movff	pad@buf+1,strlen@s+1
  2378  0011AE  EC50  F00B         	call	_strlen	;wreg free
  2379  0011B2  501A               	movf	pad@w^0,w,c
  2380  0011B4  2401               	addwf	?_strlen^0,w,c
  2381  0011B6  6E11               	movwf	?_pad^0,c
  2382  0011B8  501B               	movf	(pad@w+1)^0,w,c
  2383  0011BA  2002               	addwfc	(?_strlen+1)^0,w,c
  2384  0011BC  6E12               	movwf	(?_pad+1)^0,c
  2385  0011BE  0012               	return		;funcret
  2386  0011C0                     __end_of_pad:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _strlen *****************
  2390 ;; Defined at:
  2391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2394 ;;		 -> dbuf(32), 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2397 ;;		 -> dbuf(32), 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  2    0[COMRAM] unsigned int 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2407 ;;      Params:         2       0       0       0       0       0       0       0       0
  2408 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2410 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2411 ;;Total ram usage:        4 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_pad
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text8
  2421  0016A0                     __ptext8:
  2422                           	callstack 0
  2423  0016A0                     _strlen:
  2424                           	callstack 25
  2425  0016A0  C001  F003         	movff	strlen@s,strlen@a
  2426  0016A4  C002  F004         	movff	strlen@s+1,strlen@a+1
  2427  0016A8  EF58  F00B         	goto	l1608
  2428  0016AC                     l1606:
  2429  0016AC  4A01               	infsnz	strlen@s^0,f,c
  2430  0016AE  2A02               	incf	(strlen@s+1)^0,f,c
  2431  0016B0                     l1608:
  2432  0016B0  C001  FFD9         	movff	strlen@s,fsr2l
  2433  0016B4  C002  FFDA         	movff	strlen@s+1,fsr2h
  2434  0016B8  50DF               	movf	indf2,w,c
  2435  0016BA  A4D8               	btfss	status,2,c
  2436  0016BC  EF62  F00B         	goto	u741
  2437  0016C0  EF64  F00B         	goto	u740
  2438  0016C4                     u741:
  2439  0016C4  EF56  F00B         	goto	l1606
  2440  0016C8                     u740:
  2441  0016C8  5003               	movf	strlen@a^0,w,c
  2442  0016CA  5C01               	subwf	strlen@s^0,w,c
  2443  0016CC  6E01               	movwf	?_strlen^0,c
  2444  0016CE  5004               	movf	(strlen@a+1)^0,w,c
  2445  0016D0  5802               	subwfb	(strlen@s+1)^0,w,c
  2446  0016D2  6E02               	movwf	(?_strlen+1)^0,c
  2447  0016D4  0012               	return		;funcret
  2448  0016D6                     __end_of_strlen:
  2449                           	callstack 0
  2450                           
  2451 ;; *************** function _fputs *****************
  2452 ;; Defined at:
  2453 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2456 ;;		 -> dbuf(32), 
  2457 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2458 ;;		 -> sprintf@f(6), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  i               2   14[COMRAM] int 
  2461 ;;  c               1   13[COMRAM] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  2    9[COMRAM] int 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:         4       0       0       0       0       0       0       0       0
  2472 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2474 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2475 ;;Total ram usage:        7 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    2
  2478 ;; This function calls:
  2479 ;;		_fputc
  2480 ;; This function is called by:
  2481 ;;		_pad
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text9
  2486  0014FC                     __ptext9:
  2487                           	callstack 0
  2488  0014FC                     _fputs:
  2489                           	callstack 23
  2490  0014FC  0E00               	movlw	0
  2491  0014FE  6E10               	movwf	(fputs@i+1)^0,c
  2492  001500  0E00               	movlw	0
  2493  001502  6E0F               	movwf	fputs@i^0,c
  2494  001504  EF8F  F00A         	goto	l1602
  2495  001508                     l1598:
  2496  001508  C00E  F001         	movff	fputs@c,fputc@c
  2497  00150C  6A02               	clrf	(fputc@c+1)^0,c
  2498  00150E  C00C  F003         	movff	fputs@fp,fputc@fp
  2499  001512  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2500  001516  EC1A  F008         	call	_fputc	;wreg free
  2501  00151A  4A0F               	infsnz	fputs@i^0,f,c
  2502  00151C  2A10               	incf	(fputs@i+1)^0,f,c
  2503  00151E                     l1602:
  2504  00151E  500F               	movf	fputs@i^0,w,c
  2505  001520  240A               	addwf	fputs@s^0,w,c
  2506  001522  6ED9               	movwf	fsr2l,c
  2507  001524  5010               	movf	(fputs@i+1)^0,w,c
  2508  001526  200B               	addwfc	(fputs@s+1)^0,w,c
  2509  001528  6EDA               	movwf	fsr2h,c
  2510  00152A  50DF               	movf	indf2,w,c
  2511  00152C  6E0E               	movwf	fputs@c^0,c
  2512  00152E  500E               	movf	fputs@c^0,w,c
  2513  001530  A4D8               	btfss	status,2,c
  2514  001532  EF9D  F00A         	goto	u731
  2515  001536  EF9F  F00A         	goto	u730
  2516  00153A                     u731:
  2517  00153A  EF84  F00A         	goto	l1598
  2518  00153E                     u730:
  2519  00153E  0012               	return		;funcret
  2520  001540                     __end_of_fputs:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function _fputc *****************
  2524 ;; Defined at:
  2525 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  c               2    0[COMRAM] int 
  2528 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2529 ;;		 -> sprintf@f(6), 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  2    0[COMRAM] int 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2541 ;;      Params:         4       0       0       0       0       0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2543 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2544 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2545 ;;Total ram usage:        9 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    1
  2548 ;; This function calls:
  2549 ;;		_putch
  2550 ;; This function is called by:
  2551 ;;		_pad
  2552 ;;		_vfpfcnvrt
  2553 ;;		_fputs
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text10
  2558  001034                     __ptext10:
  2559                           	callstack 0
  2560  001034                     _fputc:
  2561                           	callstack 23
  2562  001034  5003               	movf	fputc@fp^0,w,c
  2563  001036  1004               	iorwf	(fputc@fp+1)^0,w,c
  2564  001038  B4D8               	btfsc	status,2,c
  2565  00103A  EF21  F008         	goto	u691
  2566  00103E  EF23  F008         	goto	u690
  2567  001042                     u691:
  2568  001042  EF2C  F008         	goto	l1586
  2569  001046                     u690:
  2570  001046  5003               	movf	fputc@fp^0,w,c
  2571  001048  1004               	iorwf	(fputc@fp+1)^0,w,c
  2572  00104A  A4D8               	btfss	status,2,c
  2573  00104C  EF2A  F008         	goto	u701
  2574  001050  EF2C  F008         	goto	u700
  2575  001054                     u701:
  2576  001054  EF31  F008         	goto	l1588
  2577  001058                     u700:
  2578  001058                     l1586:
  2579  001058  5001               	movf	fputc@c^0,w,c
  2580  00105A  EC04  F00C         	call	_putch
  2581  00105E  EF7E  F008         	goto	l1020
  2582  001062                     l1588:
  2583  001062  EE20 F004          	lfsr	2,4
  2584  001066  5003               	movf	fputc@fp^0,w,c
  2585  001068  26D9               	addwf	fsr2l,f,c
  2586  00106A  5004               	movf	(fputc@fp+1)^0,w,c
  2587  00106C  22DA               	addwfc	fsr2h,f,c
  2588  00106E  50DE               	movf	postinc2,w,c
  2589  001070  10DE               	iorwf	postinc2,w,c
  2590  001072  B4D8               	btfsc	status,2,c
  2591  001074  EF3E  F008         	goto	u711
  2592  001078  EF40  F008         	goto	u710
  2593  00107C                     u711:
  2594  00107C  EF5B  F008         	goto	l1592
  2595  001080                     u710:
  2596  001080  EE20 F004          	lfsr	2,4
  2597  001084  5003               	movf	fputc@fp^0,w,c
  2598  001086  26D9               	addwf	fsr2l,f,c
  2599  001088  5004               	movf	(fputc@fp+1)^0,w,c
  2600  00108A  22DA               	addwfc	fsr2h,f,c
  2601  00108C  EE10 F002          	lfsr	1,2
  2602  001090  5003               	movf	fputc@fp^0,w,c
  2603  001092  26E1               	addwf	fsr1l,f,c
  2604  001094  5004               	movf	(fputc@fp+1)^0,w,c
  2605  001096  22E2               	addwfc	fsr1h,f,c
  2606  001098  50DE               	movf	postinc2,w,c
  2607  00109A  5CE6               	subwf	postinc1,w,c
  2608  00109C  50E6               	movf	postinc1,w,c
  2609  00109E  0A80               	xorlw	128
  2610  0010A0  6E09               	movwf	(??_fputc+4)^0,c
  2611  0010A2  50DE               	movf	postinc2,w,c
  2612  0010A4  0A80               	xorlw	128
  2613  0010A6  5809               	subwfb	(??_fputc+4)^0,w,c
  2614  0010A8  B0D8               	btfsc	status,0,c
  2615  0010AA  EF59  F008         	goto	u721
  2616  0010AE  EF5B  F008         	goto	u720
  2617  0010B2                     u721:
  2618  0010B2  EF7E  F008         	goto	l1020
  2619  0010B6                     u720:
  2620  0010B6                     l1592:
  2621  0010B6  EE20 F002          	lfsr	2,2
  2622  0010BA  5003               	movf	fputc@fp^0,w,c
  2623  0010BC  26D9               	addwf	fsr2l,f,c
  2624  0010BE  5004               	movf	(fputc@fp+1)^0,w,c
  2625  0010C0  22DA               	addwfc	fsr2h,f,c
  2626  0010C2  CFDE F005          	movff	postinc2,??_fputc
  2627  0010C6  CFDD F006          	movff	postdec2,??_fputc+1
  2628  0010CA  C003  FFD9         	movff	fputc@fp,fsr2l
  2629  0010CE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2630  0010D2  CFDE F007          	movff	postinc2,??_fputc+2
  2631  0010D6  CFDD F008          	movff	postdec2,??_fputc+3
  2632  0010DA  5005               	movf	??_fputc^0,w,c
  2633  0010DC  2407               	addwf	(??_fputc+2)^0,w,c
  2634  0010DE  6ED9               	movwf	fsr2l,c
  2635  0010E0  5006               	movf	(??_fputc+1)^0,w,c
  2636  0010E2  2008               	addwfc	(??_fputc+3)^0,w,c
  2637  0010E4  6EDA               	movwf	fsr2h,c
  2638  0010E6  C001  FFDF         	movff	fputc@c,indf2
  2639  0010EA  EE20 F002          	lfsr	2,2
  2640  0010EE  5003               	movf	fputc@fp^0,w,c
  2641  0010F0  26D9               	addwf	fsr2l,f,c
  2642  0010F2  5004               	movf	(fputc@fp+1)^0,w,c
  2643  0010F4  22DA               	addwfc	fsr2h,f,c
  2644  0010F6  2ADE               	incf	postinc2,f,c
  2645  0010F8  0E00               	movlw	0
  2646  0010FA  22DD               	addwfc	postdec2,f,c
  2647  0010FC                     l1020:
  2648  0010FC  0012               	return		;funcret
  2649  0010FE                     __end_of_fputc:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function _putch *****************
  2653 ;; Defined at:
  2654 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  c               1    wreg     unsigned char 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  c               1    0[COMRAM] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		wreg
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2668 ;;      Params:         0       0       0       0       0       0       0       0       0
  2669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2671 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2672 ;;Total ram usage:        0 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_fputc
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text11
  2682  001808                     __ptext11:
  2683                           	callstack 0
  2684  001808                     _putch:
  2685                           	callstack 23
  2686  001808  0012               	return		;funcret
  2687  00180A                     __end_of_putch:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function _isupper *****************
  2691 ;; Defined at:
  2692 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  c               2    0[COMRAM] int 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  2    0[COMRAM] int 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2706 ;;      Params:         2       0       0       0       0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2708 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2709 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2710 ;;Total ram usage:        6 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_xtoa
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text12
  2720  001668                     __ptext12:
  2721                           	callstack 0
  2722  001668                     _isupper:
  2723                           	callstack 26
  2724  001668  0EBF               	movlw	191
  2725  00166A  6E03               	movwf	??_isupper^0,c
  2726  00166C  0EFF               	movlw	255
  2727  00166E  6E04               	movwf	(??_isupper+1)^0,c
  2728  001670  C001  F005         	movff	isupper@c,??_isupper+2
  2729  001674  C002  F006         	movff	isupper@c+1,??_isupper+3
  2730  001678  5003               	movf	??_isupper^0,w,c
  2731  00167A  2605               	addwf	(??_isupper+2)^0,f,c
  2732  00167C  5004               	movf	(??_isupper+1)^0,w,c
  2733  00167E  2206               	addwfc	(??_isupper+3)^0,f,c
  2734  001680  5006               	movf	(??_isupper+3)^0,w,c
  2735  001682  E10A               	bnz	u810
  2736  001684  0E1A               	movlw	26
  2737  001686  5C05               	subwf	(??_isupper+2)^0,w,c
  2738  001688  A0D8               	btfss	status,0,c
  2739  00168A  EF49  F00B         	goto	u811
  2740  00168E  EF4C  F00B         	goto	u810
  2741  001692                     u811:
  2742  001692  0E01               	movlw	1
  2743  001694  EF4D  F00B         	goto	u820
  2744  001698                     u810:
  2745  001698  0E00               	movlw	0
  2746  00169A                     u820:
  2747  00169A  6E01               	movwf	?_isupper^0,c
  2748  00169C  6A02               	clrf	(?_isupper+1)^0,c
  2749  00169E  0012               	return		;funcret
  2750  0016A0                     __end_of_isupper:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _isalpha *****************
  2754 ;; Defined at:
  2755 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  c               2    0[COMRAM] int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  2    0[COMRAM] int 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2769 ;;      Params:         2       0       0       0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2771 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2772 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        6 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_xtoa
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text13
  2783  001580                     __ptext13:
  2784                           	callstack 0
  2785  001580                     _isalpha:
  2786                           	callstack 26
  2787  001580  0E9F               	movlw	159
  2788  001582  6E03               	movwf	??_isalpha^0,c
  2789  001584  0EFF               	movlw	255
  2790  001586  6E04               	movwf	(??_isalpha+1)^0,c
  2791  001588  0E20               	movlw	32
  2792  00158A  1001               	iorwf	isalpha@c^0,w,c
  2793  00158C  6E05               	movwf	(??_isalpha+2)^0,c
  2794  00158E  0E00               	movlw	0
  2795  001590  1002               	iorwf	(isalpha@c+1)^0,w,c
  2796  001592  6E06               	movwf	(??_isalpha+3)^0,c
  2797  001594  5003               	movf	??_isalpha^0,w,c
  2798  001596  2605               	addwf	(??_isalpha+2)^0,f,c
  2799  001598  5004               	movf	(??_isalpha+1)^0,w,c
  2800  00159A  2206               	addwfc	(??_isalpha+3)^0,f,c
  2801  00159C  5006               	movf	(??_isalpha+3)^0,w,c
  2802  00159E  E10A               	bnz	u830
  2803  0015A0  0E1A               	movlw	26
  2804  0015A2  5C05               	subwf	(??_isalpha+2)^0,w,c
  2805  0015A4  A0D8               	btfss	status,0,c
  2806  0015A6  EFD7  F00A         	goto	u831
  2807  0015AA  EFDA  F00A         	goto	u830
  2808  0015AE                     u831:
  2809  0015AE  0E01               	movlw	1
  2810  0015B0  EFDB  F00A         	goto	u840
  2811  0015B4                     u830:
  2812  0015B4  0E00               	movlw	0
  2813  0015B6                     u840:
  2814  0015B6  6E01               	movwf	?_isalpha^0,c
  2815  0015B8  6A02               	clrf	(?_isalpha+1)^0,c
  2816  0015BA  0012               	return		;funcret
  2817  0015BC                     __end_of_isalpha:
  2818                           	callstack 0
  2819                           
  2820 ;; *************** function _RTC_Read_Clock *****************
  2821 ;; Defined at:
  2822 ;;		line 19 in file "RTC.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  read_clock_a    1    wreg     unsigned char 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0
  2837 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2838 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2839 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2840 ;;Total ram usage:        2 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    3
  2843 ;; This function calls:
  2844 ;;		_I2C_Read
  2845 ;;		_I2C_Repeated_Start
  2846 ;;		_I2C_Start
  2847 ;;		_I2C_Write
  2848 ;; This function is called by:
  2849 ;;		_main
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text14
  2854  0014B6                     __ptext14:
  2855                           	callstack 0
  2856  0014B6                     _RTC_Read_Clock:
  2857                           	callstack 27
  2858                           
  2859                           ;incstack = 0
  2860                           ;RTC_Read_Clock@read_clock_address stored from wreg
  2861  0014B6  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  2862  0014B8                     
  2863                           ;RTC.c: 19: void RTC_Read_Clock(char read_clock_address);RTC.c: 20: {;RTC.c: 21:     I2C
      +                          _Start(0xD0);
  2864  0014B8  0ED0               	movlw	208
  2865  0014BA  EC83  F00B         	call	_I2C_Start
  2866                           
  2867                           ;RTC.c: 22:     I2C_Write(read_clock_address);
  2868  0014BE  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  2869  0014C0  ECB1  F00B         	call	_I2C_Write
  2870                           
  2871                           ;RTC.c: 23:     I2C_Repeated_Start(0xD1);
  2872  0014C4  0ED1               	movlw	209
  2873  0014C6  EC9A  F00B         	call	_I2C_Repeated_Start
  2874  0014CA                     
  2875                           ;RTC.c: 24:     sec = I2C_Read(0);
  2876  0014CA  0E00               	movlw	0
  2877  0014CC  ECFB  F00A         	call	_I2C_Read
  2878  0014D0  6E03               	movwf	??_RTC_Read_Clock^0,c
  2879  0014D2  5003               	movf	??_RTC_Read_Clock^0,w,c
  2880  0014D4  0100               	movlb	0	; () banked
  2881  0014D6  6FCA               	movwf	_sec& (0+255),b
  2882  0014D8  6BCB               	clrf	(_sec+1)& (0+255),b
  2883  0014DA                     
  2884                           ; BSR set to: 0
  2885                           ;RTC.c: 25:     min = I2C_Read(0);
  2886  0014DA  0E00               	movlw	0
  2887  0014DC  ECFB  F00A         	call	_I2C_Read
  2888  0014E0  6E03               	movwf	??_RTC_Read_Clock^0,c
  2889  0014E2  5003               	movf	??_RTC_Read_Clock^0,w,c
  2890  0014E4  0100               	movlb	0	; () banked
  2891  0014E6  6FC8               	movwf	_min& (0+255),b
  2892  0014E8  6BC9               	clrf	(_min+1)& (0+255),b
  2893  0014EA                     
  2894                           ; BSR set to: 0
  2895                           ;RTC.c: 26:     hour= I2C_Read(1);
  2896  0014EA  0E01               	movlw	1
  2897  0014EC  ECFB  F00A         	call	_I2C_Read
  2898  0014F0  6E03               	movwf	??_RTC_Read_Clock^0,c
  2899  0014F2  5003               	movf	??_RTC_Read_Clock^0,w,c
  2900  0014F4  0100               	movlb	0	; () banked
  2901  0014F6  6FC6               	movwf	_hour& (0+255),b
  2902  0014F8  6BC7               	clrf	(_hour+1)& (0+255),b
  2903  0014FA                     
  2904                           ; BSR set to: 0
  2905  0014FA  0012               	return		;funcret
  2906  0014FC                     __end_of_RTC_Read_Clock:
  2907                           	callstack 0
  2908                           
  2909 ;; *************** function _RTC_Read_Calendar *****************
  2910 ;; Defined at:
  2911 ;;		line 30 in file "RTC.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  read_calenda    1    wreg     unsigned char 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  read_calenda    1    3[COMRAM] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2925 ;;      Params:         0       0       0       0       0       0       0       0       0
  2926 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2927 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2928 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2929 ;;Total ram usage:        2 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    3
  2932 ;; This function calls:
  2933 ;;		_I2C_Read
  2934 ;;		_I2C_Repeated_Start
  2935 ;;		_I2C_Start
  2936 ;;		_I2C_Stop
  2937 ;;		_I2C_Write
  2938 ;; This function is called by:
  2939 ;;		_main
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text15
  2944  0012DE                     __ptext15:
  2945                           	callstack 0
  2946  0012DE                     _RTC_Read_Calendar:
  2947                           	callstack 27
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;incstack = 0
  2951                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  2952  0012DE  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  2953  0012E0                     
  2954                           ;RTC.c: 30: void RTC_Read_Calendar(char read_calendar_address);RTC.c: 31: {;RTC.c: 32:  
      +                             I2C_Start(0xD0);
  2955  0012E0  0ED0               	movlw	208
  2956  0012E2  EC83  F00B         	call	_I2C_Start
  2957                           
  2958                           ;RTC.c: 33:     I2C_Write(read_calendar_address);
  2959  0012E6  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  2960  0012E8  ECB1  F00B         	call	_I2C_Write
  2961                           
  2962                           ;RTC.c: 34:     I2C_Repeated_Start(0xD1);
  2963  0012EC  0ED1               	movlw	209
  2964  0012EE  EC9A  F00B         	call	_I2C_Repeated_Start
  2965  0012F2                     
  2966                           ;RTC.c: 35:     Day = I2C_Read(0);
  2967  0012F2  0E00               	movlw	0
  2968  0012F4  ECFB  F00A         	call	_I2C_Read
  2969  0012F8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2970  0012FA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2971  0012FC  0100               	movlb	0	; () banked
  2972  0012FE  6FC4               	movwf	_Day& (0+255),b
  2973  001300  6BC5               	clrf	(_Day+1)& (0+255),b
  2974  001302                     
  2975                           ; BSR set to: 0
  2976                           ;RTC.c: 36:     Date = I2C_Read(0);
  2977  001302  0E00               	movlw	0
  2978  001304  ECFB  F00A         	call	_I2C_Read
  2979  001308  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2980  00130A  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2981  00130C  0100               	movlb	0	; () banked
  2982  00130E  6FC2               	movwf	_Date& (0+255),b
  2983  001310  6BC3               	clrf	(_Date+1)& (0+255),b
  2984  001312                     
  2985                           ; BSR set to: 0
  2986                           ;RTC.c: 37:     Month = I2C_Read(0);
  2987  001312  0E00               	movlw	0
  2988  001314  ECFB  F00A         	call	_I2C_Read
  2989  001318  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2990  00131A  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2991  00131C  0100               	movlb	0	; () banked
  2992  00131E  6FC0               	movwf	_Month& (0+255),b
  2993  001320  6BC1               	clrf	(_Month+1)& (0+255),b
  2994  001322                     
  2995                           ; BSR set to: 0
  2996                           ;RTC.c: 38:     Year = I2C_Read(1);
  2997  001322  0E01               	movlw	1
  2998  001324  ECFB  F00A         	call	_I2C_Read
  2999  001328  6E03               	movwf	??_RTC_Read_Calendar^0,c
  3000  00132A  5003               	movf	??_RTC_Read_Calendar^0,w,c
  3001  00132C  0100               	movlb	0	; () banked
  3002  00132E  6FBE               	movwf	_Year& (0+255),b
  3003  001330  6BBF               	clrf	(_Year+1)& (0+255),b
  3004  001332                     
  3005                           ; BSR set to: 0
  3006                           ;RTC.c: 39:     I2C_Stop();
  3007  001332  ECCF  F00B         	call	_I2C_Stop	;wreg free
  3008  001336  0012               	return		;funcret
  3009  001338                     __end_of_RTC_Read_Calendar:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _I2C_Stop *****************
  3013 ;; Defined at:
  3014 ;;		line 93 in file "PIC18F4550_I2C_Source_File.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      unsigned char 
  3021 ;; Registers used:
  3022 ;;		wreg
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3031 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3032 ;;Total ram usage:        0 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_RTC_Read_Calendar
  3038 ;;		_main
  3039 ;;		_I2C_Start_Wait
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text16
  3044  00179E                     __ptext16:
  3045                           	callstack 0
  3046  00179E                     _I2C_Stop:
  3047                           	callstack 29
  3048  00179E                     
  3049                           ;PIC18F4550_I2C_Source_File.c: 95:     PEN = 1;
  3050  00179E  84C5               	bsf	4037,2,c	;volatile
  3051  0017A0                     l214:
  3052  0017A0  B4C5               	btfsc	4037,2,c	;volatile
  3053  0017A2  EFD5  F00B         	goto	u1211
  3054  0017A6  EFD7  F00B         	goto	u1210
  3055  0017AA                     u1211:
  3056  0017AA  EFD0  F00B         	goto	l214
  3057  0017AE                     u1210:
  3058  0017AE                     
  3059                           ;PIC18F4550_I2C_Source_File.c: 97:     if(!SSPSTATbits.P);
  3060  0017AE  50C7               	movf	199,w,c	;volatile
  3061  0017B0  0012               	return		;funcret
  3062  0017B2                     __end_of_I2C_Stop:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _I2C_Start *****************
  3066 ;; Defined at:
  3067 ;;		line 68 in file "PIC18F4550_I2C_Source_File.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  slave_write_    1    wreg     unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  slave_write_    1    1[COMRAM] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      unsigned char 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0
  3082 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3084 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3085 ;;Total ram usage:        1 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    2
  3088 ;; This function calls:
  3089 ;;		_I2C_Write
  3090 ;; This function is called by:
  3091 ;;		_RTC_Read_Clock
  3092 ;;		_RTC_Read_Calendar
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text17
  3097  001706                     __ptext17:
  3098                           	callstack 0
  3099  001706                     _I2C_Start:
  3100                           	callstack 27
  3101                           
  3102                           ;incstack = 0
  3103                           ;I2C_Start@slave_write_address stored from wreg
  3104  001706  6E02               	movwf	I2C_Start@slave_write_address^0,c
  3105  001708                     
  3106                           ;PIC18F4550_I2C_Source_File.c: 68: char I2C_Start(char slave_write_address);PIC18F4550_I
      +                          2C_Source_File.c: 69: {;PIC18F4550_I2C_Source_File.c: 70:     SSPCON2bits.SEN=1;
  3107  001708  80C5               	bsf	197,0,c	;volatile
  3108  00170A                     l198:
  3109  00170A  B0C5               	btfsc	197,0,c	;volatile
  3110  00170C  EF8A  F00B         	goto	u1151
  3111  001710  EF8C  F00B         	goto	u1150
  3112  001714                     u1151:
  3113  001714  EF85  F00B         	goto	l198
  3114  001718                     u1150:
  3115  001718                     
  3116                           ;PIC18F4550_I2C_Source_File.c: 72:  SSPIF=0;
  3117  001718  969E               	bcf	3998,3,c	;volatile
  3118                           
  3119                           ;PIC18F4550_I2C_Source_File.c: 73:     if(!SSPSTATbits.S)
  3120  00171A  B6C7               	btfsc	199,3,c	;volatile
  3121  00171C  EF92  F00B         	goto	u1161
  3122  001720  EF94  F00B         	goto	u1160
  3123  001724                     u1161:
  3124  001724  EF96  F00B         	goto	l1832
  3125  001728                     u1160:
  3126  001728  EF99  F00B         	goto	l202
  3127  00172C                     l1832:
  3128                           
  3129                           ;PIC18F4550_I2C_Source_File.c: 75:     return (I2C_Write(slave_write_address));;	Return 
      +                          value of _I2C_Start is never used
  3130  00172C  5002               	movf	I2C_Start@slave_write_address^0,w,c
  3131  00172E  ECB1  F00B         	call	_I2C_Write
  3132  001732                     l202:
  3133  001732  0012               	return		;funcret
  3134  001734                     __end_of_I2C_Start:
  3135                           	callstack 0
  3136                           
  3137 ;; *************** function _I2C_Repeated_Start *****************
  3138 ;; Defined at:
  3139 ;;		line 79 in file "PIC18F4550_I2C_Source_File.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  slave_read_a    1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      unsigned char 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0
  3154 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3156 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3157 ;;Total ram usage:        1 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    2
  3160 ;; This function calls:
  3161 ;;		_I2C_Write
  3162 ;; This function is called by:
  3163 ;;		_RTC_Read_Clock
  3164 ;;		_RTC_Read_Calendar
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text18
  3169  001734                     __ptext18:
  3170                           	callstack 0
  3171  001734                     _I2C_Repeated_Start:
  3172                           	callstack 27
  3173                           
  3174                           ;incstack = 0
  3175                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  3176  001734  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  3177  001736                     
  3178                           ;PIC18F4550_I2C_Source_File.c: 79: char I2C_Repeated_Start(char slave_read_address);PIC1
      +                          8F4550_I2C_Source_File.c: 80: {;PIC18F4550_I2C_Source_File.c: 81:     RSEN = 1;
  3179  001736  82C5               	bsf	4037,1,c	;volatile
  3180  001738                     l205:
  3181  001738  B2C5               	btfsc	4037,1,c	;volatile
  3182  00173A  EFA1  F00B         	goto	u1171
  3183  00173E  EFA3  F00B         	goto	u1170
  3184  001742                     u1171:
  3185  001742  EF9C  F00B         	goto	l205
  3186  001746                     u1170:
  3187  001746                     
  3188                           ;PIC18F4550_I2C_Source_File.c: 83:     SSPIF = 0;
  3189  001746  969E               	bcf	3998,3,c	;volatile
  3190                           
  3191                           ;PIC18F4550_I2C_Source_File.c: 84:  if(!SSPSTATbits.S)
  3192  001748  B6C7               	btfsc	199,3,c	;volatile
  3193  00174A  EFA9  F00B         	goto	u1181
  3194  00174E  EFAB  F00B         	goto	u1180
  3195  001752                     u1181:
  3196  001752  EFAD  F00B         	goto	l1840
  3197  001756                     u1180:
  3198  001756  EFB0  F00B         	goto	l209
  3199  00175A                     l1840:
  3200                           
  3201                           ;PIC18F4550_I2C_Source_File.c: 86:     I2C_Write(slave_read_address);
  3202  00175A  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  3203  00175C  ECB1  F00B         	call	_I2C_Write
  3204  001760                     l209:
  3205  001760  0012               	return		;funcret
  3206  001762                     __end_of_I2C_Repeated_Start:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _I2C_Write *****************
  3210 ;; Defined at:
  3211 ;;		line 101 in file "PIC18F4550_I2C_Source_File.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  data            1    wreg     unsigned char 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  data            1    0[COMRAM] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      unsigned char 
  3218 ;; Registers used:
  3219 ;;		wreg, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0
  3226 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3228 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3229 ;;Total ram usage:        1 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    1
  3232 ;; This function calls:
  3233 ;;		_I2C_Ready
  3234 ;; This function is called by:
  3235 ;;		_RTC_Read_Clock
  3236 ;;		_RTC_Read_Calendar
  3237 ;;		_I2C_Start
  3238 ;;		_I2C_Repeated_Start
  3239 ;;		_I2C_Start_Wait
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text19
  3244  001762                     __ptext19:
  3245                           	callstack 0
  3246  001762                     _I2C_Write:
  3247                           	callstack 28
  3248                           
  3249                           ;incstack = 0
  3250                           ;I2C_Write@data stored from wreg
  3251  001762  6E01               	movwf	I2C_Write@data^0,c
  3252  001764                     
  3253                           ;PIC18F4550_I2C_Source_File.c: 101: char I2C_Write(unsigned char data);PIC18F4550_I2C_So
      +                          urce_File.c: 102: {;PIC18F4550_I2C_Source_File.c: 103:       SSPBUF = data;
  3254  001764  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3255  001768                     
  3256                           ;PIC18F4550_I2C_Source_File.c: 104:       I2C_Ready();
  3257  001768  ECF7  F00B         	call	_I2C_Ready	;wreg free
  3258  00176C                     
  3259                           ;PIC18F4550_I2C_Source_File.c: 105:       if (ACKSTAT)
  3260  00176C  ACC5               	btfss	4037,6,c	;volatile
  3261  00176E  EFBB  F00B         	goto	u1081
  3262  001772  EFBD  F00B         	goto	u1080
  3263  001776                     u1081:
  3264  001776  EFC0  F00B         	goto	l1754
  3265  00177A                     u1080:
  3266  00177A                     
  3267                           ;PIC18F4550_I2C_Source_File.c: 106:         return 1;
  3268  00177A  0E01               	movlw	1
  3269  00177C  EFC1  F00B         	goto	l222
  3270  001780                     l1754:
  3271                           
  3272                           ;PIC18F4550_I2C_Source_File.c: 108:         return 2;
  3273  001780  0E02               	movlw	2
  3274  001782                     l222:
  3275  001782  0012               	return		;funcret
  3276  001784                     __end_of_I2C_Write:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function _I2C_Read *****************
  3280 ;; Defined at:
  3281 ;;		line 12 in file "PIC18F4550_I2C_Source_File.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  flag            1    wreg     unsigned char 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  flag            1    0[COMRAM] unsigned char 
  3286 ;;  buffer          1    1[COMRAM] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      unsigned char 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3296 ;;      Params:         0       0       0       0       0       0       0       0       0
  3297 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3299 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3300 ;;Total ram usage:        2 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    1
  3303 ;; This function calls:
  3304 ;;		_I2C_Ack
  3305 ;;		_I2C_Nack
  3306 ;;		_I2C_Ready
  3307 ;; This function is called by:
  3308 ;;		_RTC_Read_Clock
  3309 ;;		_RTC_Read_Calendar
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text20
  3314  0015F6                     __ptext20:
  3315                           	callstack 0
  3316  0015F6                     _I2C_Read:
  3317                           	callstack 28
  3318                           
  3319                           ;incstack = 0
  3320                           ;I2C_Read@flag stored from wreg
  3321  0015F6  6E01               	movwf	I2C_Read@flag^0,c
  3322  0015F8                     
  3323                           ;PIC18F4550_I2C_Source_File.c: 12: char I2C_Read(char flag);PIC18F4550_I2C_Source_File.c
      +                          : 14: {;PIC18F4550_I2C_Source_File.c: 15:         char buffer;;PIC18F4550_I2C_Source_Fil
      +                          e.c: 16:         RCEN = 1;
  3324  0015F8  86C5               	bsf	4037,3,c	;volatile
  3325  0015FA                     l170:
  3326  0015FA  A0C7               	btfss	199,0,c	;volatile
  3327  0015FC  EF02  F00B         	goto	u1191
  3328  001600  EF04  F00B         	goto	u1190
  3329  001604                     u1191:
  3330  001604  EFFD  F00A         	goto	l170
  3331  001608                     u1190:
  3332  001608                     
  3333                           ;PIC18F4550_I2C_Source_File.c: 19:         buffer = SSPBUF;
  3334  001608  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3335  00160C                     
  3336                           ;PIC18F4550_I2C_Source_File.c: 21:         if(flag==0)
  3337  00160C  5001               	movf	I2C_Read@flag^0,w,c
  3338  00160E  A4D8               	btfss	status,2,c
  3339  001610  EF0C  F00B         	goto	u1201
  3340  001614  EF0E  F00B         	goto	u1200
  3341  001618                     u1201:
  3342  001618  EF12  F00B         	goto	l1854
  3343  00161C                     u1200:
  3344  00161C                     
  3345                           ;PIC18F4550_I2C_Source_File.c: 22:             I2C_Ack();
  3346  00161C  ECE3  F00B         	call	_I2C_Ack	;wreg free
  3347  001620  EF14  F00B         	goto	l174
  3348  001624                     l1854:
  3349                           
  3350                           ;PIC18F4550_I2C_Source_File.c: 24:             I2C_Nack();
  3351  001624  ECD9  F00B         	call	_I2C_Nack	;wreg free
  3352  001628                     l174:
  3353                           
  3354                           ;PIC18F4550_I2C_Source_File.c: 25:         I2C_Ready();
  3355  001628  ECF7  F00B         	call	_I2C_Ready	;wreg free
  3356  00162C                     
  3357                           ;PIC18F4550_I2C_Source_File.c: 26:         return(buffer);
  3358  00162C  5002               	movf	I2C_Read@buffer^0,w,c
  3359  00162E  0012               	return		;funcret
  3360  001630                     __end_of_I2C_Read:
  3361                           	callstack 0
  3362                           
  3363 ;; *************** function _I2C_Ready *****************
  3364 ;; Defined at:
  3365 ;;		line 43 in file "PIC18F4550_I2C_Source_File.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		None
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3382 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_I2C_Read
  3389 ;;		_I2C_Write
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text21
  3394  0017EE                     __ptext21:
  3395                           	callstack 0
  3396  0017EE                     _I2C_Ready:
  3397                           	callstack 28
  3398  0017EE                     l181:
  3399  0017EE  A69E               	btfss	3998,3,c	;volatile
  3400  0017F0  EFFC  F00B         	goto	u901
  3401  0017F4  EFFE  F00B         	goto	u900
  3402  0017F8                     u901:
  3403  0017F8  EFF7  F00B         	goto	l181
  3404  0017FC                     u900:
  3405  0017FC                     
  3406                           ;PIC18F4550_I2C_Source_File.c: 46:     SSPIF=0;
  3407  0017FC  969E               	bcf	3998,3,c	;volatile
  3408  0017FE  0012               	return		;funcret
  3409  001800                     __end_of_I2C_Ready:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _I2C_Nack *****************
  3413 ;; Defined at:
  3414 ;;		line 118 in file "PIC18F4550_I2C_Source_File.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		None
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3431 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_I2C_Read
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text22
  3442  0017B2                     __ptext22:
  3443                           	callstack 0
  3444  0017B2                     _I2C_Nack:
  3445                           	callstack 28
  3446  0017B2                     
  3447                           ;PIC18F4550_I2C_Source_File.c: 120:     ACKDT=1;
  3448  0017B2  8AC5               	bsf	4037,5,c	;volatile
  3449                           
  3450                           ;PIC18F4550_I2C_Source_File.c: 121:  ACKEN=1;
  3451  0017B4  88C5               	bsf	4037,4,c	;volatile
  3452  0017B6                     l232:
  3453  0017B6  B8C5               	btfsc	4037,4,c	;volatile
  3454  0017B8  EFE0  F00B         	goto	u1101
  3455  0017BC  EFE2  F00B         	goto	u1100
  3456  0017C0                     u1101:
  3457  0017C0  EFDB  F00B         	goto	l232
  3458  0017C4                     u1100:
  3459  0017C4  0012               	return		;funcret
  3460  0017C6                     __end_of_I2C_Nack:
  3461                           	callstack 0
  3462                           
  3463 ;; *************** function _I2C_Ack *****************
  3464 ;; Defined at:
  3465 ;;		line 111 in file "PIC18F4550_I2C_Source_File.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;		None
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		None
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3479 ;;      Params:         0       0       0       0       0       0       0       0       0
  3480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3482 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3483 ;;Total ram usage:        0 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_I2C_Read
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text23
  3493  0017C6                     __ptext23:
  3494                           	callstack 0
  3495  0017C6                     _I2C_Ack:
  3496                           	callstack 28
  3497  0017C6                     
  3498                           ;PIC18F4550_I2C_Source_File.c: 113:     ACKDT=0;
  3499  0017C6  9AC5               	bcf	4037,5,c	;volatile
  3500                           
  3501                           ;PIC18F4550_I2C_Source_File.c: 114:  ACKEN=1;
  3502  0017C8  88C5               	bsf	4037,4,c	;volatile
  3503  0017CA                     l226:
  3504  0017CA  B8C5               	btfsc	4037,4,c	;volatile
  3505  0017CC  EFEA  F00B         	goto	u1091
  3506  0017D0  EFEC  F00B         	goto	u1090
  3507  0017D4                     u1091:
  3508  0017D4  EFE5  F00B         	goto	l226
  3509  0017D8                     u1090:
  3510  0017D8  0012               	return		;funcret
  3511  0017DA                     __end_of_I2C_Ack:
  3512                           	callstack 0
  3513                           
  3514 ;; *************** function _MSdelay1 *****************
  3515 ;; Defined at:
  3516 ;;		line 42 in file "RTC.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  val             2    0[COMRAM] unsigned int 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  j               2    4[COMRAM] unsigned int 
  3521 ;;  i               2    2[COMRAM] unsigned int 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3531 ;;      Params:         2       0       0       0       0       0       0       0       0
  3532 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3534 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3535 ;;Total ram usage:        6 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_main
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text24
  3545  001422                     __ptext24:
  3546                           	callstack 0
  3547  001422                     _MSdelay1:
  3548                           	callstack 30
  3549  001422                     
  3550                           ;RTC.c: 42: void MSdelay1(unsigned int val);RTC.c: 43: {;RTC.c: 44:  unsigned int i,j;;R
      +                          TC.c: 45:  for(i=0;i<val;i++)
  3551  001422  0E00               	movlw	0
  3552  001424  6E04               	movwf	(MSdelay1@i+1)^0,c
  3553  001426  0E00               	movlw	0
  3554  001428  6E03               	movwf	MSdelay1@i^0,c
  3555  00142A  EF2A  F00A         	goto	l1932
  3556  00142E                     l1920:
  3557                           
  3558                           ;RTC.c: 46:      for(j=0;j<165;j++);
  3559  00142E  0E00               	movlw	0
  3560  001430  6E06               	movwf	(MSdelay1@j+1)^0,c
  3561  001432  0E00               	movlw	0
  3562  001434  6E05               	movwf	MSdelay1@j^0,c
  3563  001436                     l1926:
  3564  001436  4A05               	infsnz	MSdelay1@j^0,f,c
  3565  001438  2A06               	incf	(MSdelay1@j+1)^0,f,c
  3566  00143A  5006               	movf	(MSdelay1@j+1)^0,w,c
  3567  00143C  E109               	bnz	u1260
  3568  00143E  0EA5               	movlw	165
  3569  001440  5C05               	subwf	MSdelay1@j^0,w,c
  3570  001442  A0D8               	btfss	status,0,c
  3571  001444  EF26  F00A         	goto	u1261
  3572  001448  EF28  F00A         	goto	u1260
  3573  00144C                     u1261:
  3574  00144C  EF1B  F00A         	goto	l1926
  3575  001450                     u1260:
  3576  001450  4A03               	infsnz	MSdelay1@i^0,f,c
  3577  001452  2A04               	incf	(MSdelay1@i+1)^0,f,c
  3578  001454                     l1932:
  3579  001454  5001               	movf	MSdelay1@val^0,w,c
  3580  001456  5C03               	subwf	MSdelay1@i^0,w,c
  3581  001458  5002               	movf	(MSdelay1@val+1)^0,w,c
  3582  00145A  5804               	subwfb	(MSdelay1@i+1)^0,w,c
  3583  00145C  A0D8               	btfss	status,0,c
  3584  00145E  EF33  F00A         	goto	u1271
  3585  001462  EF35  F00A         	goto	u1270
  3586  001466                     u1271:
  3587  001466  EF17  F00A         	goto	l1920
  3588  00146A                     u1270:
  3589  00146A  0012               	return		;funcret
  3590  00146C                     __end_of_MSdelay1:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function _LCD_String_xy *****************
  3594 ;; Defined at:
  3595 ;;		line 63 in file "LCD_16x2_4bit_mode.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  row             1    wreg     unsigned char 
  3598 ;;  pos             1   10[COMRAM] unsigned char 
  3599 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  3600 ;;		 -> main@date(10), main@hours(10), STR_2(3), STR_1(3), 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  row             1   13[COMRAM] unsigned char 
  3603 ;;  location        1   14[COMRAM] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3613 ;;      Params:         3       0       0       0       0       0       0       0       0
  3614 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3616 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3617 ;;Total ram usage:        5 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    3
  3620 ;; This function calls:
  3621 ;;		_LCD_Command
  3622 ;;		_LCD_String
  3623 ;; This function is called by:
  3624 ;;		_main
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text25
  3629  001540                     __ptext25:
  3630                           	callstack 0
  3631  001540                     _LCD_String_xy:
  3632                           	callstack 27
  3633                           
  3634                           ;incstack = 0
  3635                           ;LCD_String_xy@row stored from wreg
  3636  001540  6E0E               	movwf	LCD_String_xy@row^0,c
  3637  001542                     
  3638                           ;LCD_16x2_4bit_mode.c: 66:     if(row<=1)
  3639  001542  0E02               	movlw	2
  3640  001544  600E               	cpfslt	LCD_String_xy@row^0,c
  3641  001546  EFA7  F00A         	goto	u1281
  3642  00154A  EFA9  F00A         	goto	u1280
  3643  00154E                     u1281:
  3644  00154E  EFB2  F00A         	goto	l1966
  3645  001552                     u1280:
  3646  001552                     
  3647                           ;LCD_16x2_4bit_mode.c: 67:     {;LCD_16x2_4bit_mode.c: 68:         location = (0x80) | (
      +                          (pos) & 0x0f);
  3648  001552  500B               	movf	LCD_String_xy@pos^0,w,c
  3649  001554  0B0F               	andlw	15
  3650  001556  0980               	iorlw	128
  3651  001558  6E0F               	movwf	LCD_String_xy@location^0,c
  3652  00155A                     
  3653                           ;LCD_16x2_4bit_mode.c: 69:         LCD_Command(location);
  3654  00155A  500F               	movf	LCD_String_xy@location^0,w,c
  3655  00155C  ECEB  F009         	call	_LCD_Command
  3656                           
  3657                           ;LCD_16x2_4bit_mode.c: 70:     }
  3658  001560  EFB9  F00A         	goto	l1970
  3659  001564                     l1966:
  3660                           
  3661                           ;LCD_16x2_4bit_mode.c: 72:     {;LCD_16x2_4bit_mode.c: 73:         location = (0xC0) | (
      +                          (pos) & 0x0f);
  3662  001564  500B               	movf	LCD_String_xy@pos^0,w,c
  3663  001566  0B0F               	andlw	15
  3664  001568  09C0               	iorlw	192
  3665  00156A  6E0F               	movwf	LCD_String_xy@location^0,c
  3666  00156C                     
  3667                           ;LCD_16x2_4bit_mode.c: 74:         LCD_Command(location);
  3668  00156C  500F               	movf	LCD_String_xy@location^0,w,c
  3669  00156E  ECEB  F009         	call	_LCD_Command
  3670  001572                     l1970:
  3671                           
  3672                           ;LCD_16x2_4bit_mode.c: 78:     LCD_String(msg);
  3673  001572  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
  3674  001576  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3675  00157A  EC40  F009         	call	_LCD_String	;wreg free
  3676  00157E  0012               	return		;funcret
  3677  001580                     __end_of_LCD_String_xy:
  3678                           	callstack 0
  3679                           
  3680 ;; *************** function _LCD_String *****************
  3681 ;; Defined at:
  3682 ;;		line 53 in file "LCD_16x2_4bit_mode.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  msg             2    8[COMRAM] PTR const unsigned char 
  3685 ;;		 -> STR_18(4), STR_17(4), STR_16(4), STR_15(4), 
  3686 ;;		 -> STR_14(4), STR_13(4), STR_12(4), main@year(10), 
  3687 ;;		 -> main@month(10), main@date(10), main@hours(10), main@mins(10), 
  3688 ;;		 -> main@secs(10), STR_2(3), STR_1(3), 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3700 ;;      Params:         2       0       0       0       0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3703 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3704 ;;Total ram usage:        2 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    2
  3707 ;; This function calls:
  3708 ;;		_LCD_Char
  3709 ;; This function is called by:
  3710 ;;		_main
  3711 ;;		_LCD_String_xy
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text26
  3716  001280                     __ptext26:
  3717                           	callstack 0
  3718  001280                     _LCD_String:
  3719                           	callstack 27
  3720  001280                     
  3721                           ;LCD_16x2_4bit_mode.c: 53: void LCD_String(const char *msg);LCD_16x2_4bit_mode.c: 54: {;
      +                          LCD_16x2_4bit_mode.c: 55:  while((*msg)!=0)
  3722  001280  EF56  F009         	goto	l1868
  3723  001284                     l1864:
  3724                           
  3725                           ;LCD_16x2_4bit_mode.c: 56:  {;LCD_16x2_4bit_mode.c: 57:    LCD_Char(*msg);
  3726  001284  C009  FFF6         	movff	LCD_String@msg,tblptrl
  3727  001288  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  3728  00128C  6AF8               	clrf	tblptru,c
  3729  00128E  0E07               	movlw	(high __ramtop+-1)
  3730  001290  64F7               	cpfsgt	tblptrh,c
  3731  001292  D003               	bra	u1227
  3732  001294  0008               	tblrd		*
  3733  001296  50F5               	movf	tablat,w,c
  3734  001298  D005               	bra	u1220
  3735  00129A                     u1227:
  3736  00129A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3737  00129E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3738  0012A2  50E7               	movf	indf1,w,c
  3739  0012A4                     u1220:
  3740  0012A4  ECC5  F009         	call	_LCD_Char
  3741  0012A8                     
  3742                           ;LCD_16x2_4bit_mode.c: 58:    msg++;
  3743  0012A8  4A09               	infsnz	LCD_String@msg^0,f,c
  3744  0012AA  2A0A               	incf	(LCD_String@msg+1)^0,f,c
  3745  0012AC                     l1868:
  3746                           
  3747                           ;LCD_16x2_4bit_mode.c: 55:  while((*msg)!=0)
  3748  0012AC  C009  FFF6         	movff	LCD_String@msg,tblptrl
  3749  0012B0  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  3750  0012B4  6AF8               	clrf	tblptru,c
  3751  0012B6  0E07               	movlw	(high __ramtop+-1)
  3752  0012B8  64F7               	cpfsgt	tblptrh,c
  3753  0012BA  D003               	bra	u1237
  3754  0012BC  0008               	tblrd		*
  3755  0012BE  50F5               	movf	tablat,w,c
  3756  0012C0  D005               	bra	u1230
  3757  0012C2                     u1237:
  3758  0012C2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3759  0012C6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3760  0012CA  50E7               	movf	indf1,w,c
  3761  0012CC                     u1230:
  3762  0012CC  0900               	iorlw	0
  3763  0012CE  A4D8               	btfss	status,2,c
  3764  0012D0  EF6C  F009         	goto	u1241
  3765  0012D4  EF6E  F009         	goto	u1240
  3766  0012D8                     u1241:
  3767  0012D8  EF42  F009         	goto	l1864
  3768  0012DC                     u1240:
  3769  0012DC  0012               	return		;funcret
  3770  0012DE                     __end_of_LCD_String:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _LCD_Char *****************
  3774 ;; Defined at:
  3775 ;;		line 39 in file "LCD_16x2_4bit_mode.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  dat             1    wreg     unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  dat             1    7[COMRAM] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0
  3790 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3791 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3792 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3793 ;;Total ram usage:        2 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    1
  3796 ;; This function calls:
  3797 ;;		_MSdelay
  3798 ;; This function is called by:
  3799 ;;		_LCD_String
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text27
  3804  00138A                     __ptext27:
  3805                           	callstack 0
  3806  00138A                     _LCD_Char:
  3807                           	callstack 27
  3808                           
  3809                           ;incstack = 0
  3810                           ;LCD_Char@dat stored from wreg
  3811  00138A  6E08               	movwf	LCD_Char@dat^0,c
  3812  00138C                     
  3813                           ;LCD_16x2_4bit_mode.c: 39: void LCD_Char(unsigned char dat);LCD_16x2_4bit_mode.c: 40: {;
      +                          LCD_16x2_4bit_mode.c: 41:  LATD = (LATD & 0x0f) | (0xF0 & dat);
  3814  00138C  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  3815  001390  0EF0               	movlw	240
  3816  001392  1607               	andwf	??_LCD_Char^0,f,c
  3817  001394  508C               	movf	140,w,c	;volatile
  3818  001396  0B0F               	andlw	15
  3819  001398  1007               	iorwf	??_LCD_Char^0,w,c
  3820  00139A  6E8C               	movwf	140,c	;volatile
  3821  00139C                     
  3822                           ;LCD_16x2_4bit_mode.c: 42:  LATD0 = 1;
  3823  00139C  808C               	bsf	3980,0,c	;volatile
  3824  00139E                     
  3825                           ;LCD_16x2_4bit_mode.c: 43:  LATD2 = 1;
  3826  00139E  848C               	bsf	3980,2,c	;volatile
  3827  0013A0                     
  3828                           ;LCD_16x2_4bit_mode.c: 44:  __nop();
  3829  0013A0  F000               	nop	
  3830  0013A2                     
  3831                           ;LCD_16x2_4bit_mode.c: 45:  LATD2 = 0;
  3832  0013A2  948C               	bcf	3980,2,c	;volatile
  3833  0013A4                     
  3834                           ;LCD_16x2_4bit_mode.c: 46:  MSdelay(1);
  3835  0013A4  0E00               	movlw	0
  3836  0013A6  6E02               	movwf	(MSdelay@val+1)^0,c
  3837  0013A8  0E01               	movlw	1
  3838  0013AA  6E01               	movwf	MSdelay@val^0,c
  3839  0013AC  EC36  F00A         	call	_MSdelay	;wreg free
  3840  0013B0                     
  3841                           ;LCD_16x2_4bit_mode.c: 47:     LATD = (LATD & 0x0f) | (dat<<4);
  3842  0013B0  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  3843  0013B4  3A07               	swapf	??_LCD_Char^0,f,c
  3844  0013B6  0EF0               	movlw	240
  3845  0013B8  1607               	andwf	??_LCD_Char^0,f,c
  3846  0013BA  508C               	movf	140,w,c	;volatile
  3847  0013BC  0B0F               	andlw	15
  3848  0013BE  1007               	iorwf	??_LCD_Char^0,w,c
  3849  0013C0  6E8C               	movwf	140,c	;volatile
  3850  0013C2                     
  3851                           ;LCD_16x2_4bit_mode.c: 48:  LATD2 = 1;
  3852  0013C2  848C               	bsf	3980,2,c	;volatile
  3853  0013C4                     
  3854                           ;LCD_16x2_4bit_mode.c: 49:  __nop();
  3855  0013C4  F000               	nop	
  3856  0013C6                     
  3857                           ;LCD_16x2_4bit_mode.c: 50:  LATD2 = 0;
  3858  0013C6  948C               	bcf	3980,2,c	;volatile
  3859                           
  3860                           ;LCD_16x2_4bit_mode.c: 51:  MSdelay(3);
  3861  0013C8  0E00               	movlw	0
  3862  0013CA  6E02               	movwf	(MSdelay@val+1)^0,c
  3863  0013CC  0E03               	movlw	3
  3864  0013CE  6E01               	movwf	MSdelay@val^0,c
  3865  0013D0  EC36  F00A         	call	_MSdelay	;wreg free
  3866  0013D4  0012               	return		;funcret
  3867  0013D6                     __end_of_LCD_Char:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function _LCD_Init *****************
  3871 ;; Defined at:
  3872 ;;		line 8 in file "LCD_16x2_4bit_mode.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0
  3887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3889 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3890 ;;Total ram usage:        0 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    2
  3893 ;; This function calls:
  3894 ;;		_LCD_Command
  3895 ;;		_MSdelay
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text28
  3902  0016D6                     __ptext28:
  3903                           	callstack 0
  3904  0016D6                     _LCD_Init:
  3905                           	callstack 28
  3906  0016D6                     
  3907                           ;LCD_16x2_4bit_mode.c: 10:     TRISD = 0;
  3908  0016D6  0E00               	movlw	0
  3909  0016D8  6E95               	movwf	149,c	;volatile
  3910  0016DA                     
  3911                           ;LCD_16x2_4bit_mode.c: 11:     MSdelay(20);
  3912  0016DA  0E00               	movlw	0
  3913  0016DC  6E02               	movwf	(MSdelay@val+1)^0,c
  3914  0016DE  0E14               	movlw	20
  3915  0016E0  6E01               	movwf	MSdelay@val^0,c
  3916  0016E2  EC36  F00A         	call	_MSdelay	;wreg free
  3917  0016E6                     
  3918                           ;LCD_16x2_4bit_mode.c: 12:     LCD_Command(0x02);
  3919  0016E6  0E02               	movlw	2
  3920  0016E8  ECEB  F009         	call	_LCD_Command
  3921  0016EC                     
  3922                           ;LCD_16x2_4bit_mode.c: 14:     LCD_Command(0x28);
  3923  0016EC  0E28               	movlw	40
  3924  0016EE  ECEB  F009         	call	_LCD_Command
  3925  0016F2                     
  3926                           ;LCD_16x2_4bit_mode.c: 16:  LCD_Command(0x01);
  3927  0016F2  0E01               	movlw	1
  3928  0016F4  ECEB  F009         	call	_LCD_Command
  3929  0016F8                     
  3930                           ;LCD_16x2_4bit_mode.c: 17:     LCD_Command(0x0c);
  3931  0016F8  0E0C               	movlw	12
  3932  0016FA  ECEB  F009         	call	_LCD_Command
  3933  0016FE                     
  3934                           ;LCD_16x2_4bit_mode.c: 18:  LCD_Command(0x06);
  3935  0016FE  0E06               	movlw	6
  3936  001700  ECEB  F009         	call	_LCD_Command
  3937  001704  0012               	return		;funcret
  3938  001706                     __end_of_LCD_Init:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _LCD_Clear *****************
  3942 ;; Defined at:
  3943 ;;		line 82 in file "LCD_16x2_4bit_mode.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3957 ;;      Params:         0       0       0       0       0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    2
  3964 ;; This function calls:
  3965 ;;		_LCD_Command
  3966 ;;		_MSdelay
  3967 ;; This function is called by:
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text29
  3973  0017DA                     __ptext29:
  3974                           	callstack 0
  3975  0017DA                     _LCD_Clear:
  3976                           	callstack 28
  3977  0017DA                     
  3978                           ;LCD_16x2_4bit_mode.c: 84:     LCD_Command(0x01);
  3979  0017DA  0E01               	movlw	1
  3980  0017DC  ECEB  F009         	call	_LCD_Command
  3981                           
  3982                           ;LCD_16x2_4bit_mode.c: 85:     MSdelay(3);
  3983  0017E0  0E00               	movlw	0
  3984  0017E2  6E02               	movwf	(MSdelay@val+1)^0,c
  3985  0017E4  0E03               	movlw	3
  3986  0017E6  6E01               	movwf	MSdelay@val^0,c
  3987  0017E8  EC36  F00A         	call	_MSdelay	;wreg free
  3988  0017EC  0012               	return		;funcret
  3989  0017EE                     __end_of_LCD_Clear:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function _LCD_Command *****************
  3993 ;; Defined at:
  3994 ;;		line 21 in file "LCD_16x2_4bit_mode.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  cmd             1    wreg     unsigned char 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  cmd             1    7[COMRAM] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4008 ;;      Params:         0       0       0       0       0       0       0       0       0
  4009 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4010 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4011 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    1
  4015 ;; This function calls:
  4016 ;;		_MSdelay
  4017 ;; This function is called by:
  4018 ;;		_LCD_Init
  4019 ;;		_LCD_String_xy
  4020 ;;		_LCD_Clear
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text30
  4025  0013D6                     __ptext30:
  4026                           	callstack 0
  4027  0013D6                     _LCD_Command:
  4028                           	callstack 28
  4029                           
  4030                           ;incstack = 0
  4031                           ;LCD_Command@cmd stored from wreg
  4032  0013D6  6E08               	movwf	LCD_Command@cmd^0,c
  4033  0013D8                     
  4034                           ;LCD_16x2_4bit_mode.c: 21: void LCD_Command(unsigned char cmd );LCD_16x2_4bit_mode.c: 22
      +                          : {;LCD_16x2_4bit_mode.c: 23:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
  4035  0013D8  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  4036  0013DC  0EF0               	movlw	240
  4037  0013DE  1607               	andwf	??_LCD_Command^0,f,c
  4038  0013E0  508C               	movf	140,w,c	;volatile
  4039  0013E2  0B0F               	andlw	15
  4040  0013E4  1007               	iorwf	??_LCD_Command^0,w,c
  4041  0013E6  6E8C               	movwf	140,c	;volatile
  4042  0013E8                     
  4043                           ;LCD_16x2_4bit_mode.c: 24:  LATD0 = 0;
  4044  0013E8  908C               	bcf	3980,0,c	;volatile
  4045  0013EA                     
  4046                           ;LCD_16x2_4bit_mode.c: 25:  LATD2 = 1;
  4047  0013EA  848C               	bsf	3980,2,c	;volatile
  4048  0013EC                     
  4049                           ;LCD_16x2_4bit_mode.c: 26:  __nop();
  4050  0013EC  F000               	nop	
  4051  0013EE                     
  4052                           ;LCD_16x2_4bit_mode.c: 27:  LATD2 = 0;
  4053  0013EE  948C               	bcf	3980,2,c	;volatile
  4054  0013F0                     
  4055                           ;LCD_16x2_4bit_mode.c: 28:  MSdelay(1);
  4056  0013F0  0E00               	movlw	0
  4057  0013F2  6E02               	movwf	(MSdelay@val+1)^0,c
  4058  0013F4  0E01               	movlw	1
  4059  0013F6  6E01               	movwf	MSdelay@val^0,c
  4060  0013F8  EC36  F00A         	call	_MSdelay	;wreg free
  4061  0013FC                     
  4062                           ;LCD_16x2_4bit_mode.c: 29:     LATD = (LATD & 0x0f) | (cmd<<4);
  4063  0013FC  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  4064  001400  3A07               	swapf	??_LCD_Command^0,f,c
  4065  001402  0EF0               	movlw	240
  4066  001404  1607               	andwf	??_LCD_Command^0,f,c
  4067  001406  508C               	movf	140,w,c	;volatile
  4068  001408  0B0F               	andlw	15
  4069  00140A  1007               	iorwf	??_LCD_Command^0,w,c
  4070  00140C  6E8C               	movwf	140,c	;volatile
  4071  00140E                     
  4072                           ;LCD_16x2_4bit_mode.c: 30:  LATD2 = 1;
  4073  00140E  848C               	bsf	3980,2,c	;volatile
  4074  001410                     
  4075                           ;LCD_16x2_4bit_mode.c: 31:  __nop();
  4076  001410  F000               	nop	
  4077  001412                     
  4078                           ;LCD_16x2_4bit_mode.c: 32:  LATD2 = 0;
  4079  001412  948C               	bcf	3980,2,c	;volatile
  4080                           
  4081                           ;LCD_16x2_4bit_mode.c: 33:  MSdelay(3);
  4082  001414  0E00               	movlw	0
  4083  001416  6E02               	movwf	(MSdelay@val+1)^0,c
  4084  001418  0E03               	movlw	3
  4085  00141A  6E01               	movwf	MSdelay@val^0,c
  4086  00141C  EC36  F00A         	call	_MSdelay	;wreg free
  4087  001420  0012               	return		;funcret
  4088  001422                     __end_of_LCD_Command:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _MSdelay *****************
  4092 ;; Defined at:
  4093 ;;		line 88 in file "LCD_16x2_4bit_mode.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  val             2    0[COMRAM] unsigned int 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  j               2    4[COMRAM] unsigned int 
  4098 ;;  i               2    2[COMRAM] unsigned int 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4108 ;;      Params:         2       0       0       0       0       0       0       0       0
  4109 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4111 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4112 ;;Total ram usage:        6 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_main
  4118 ;;		_LCD_Init
  4119 ;;		_LCD_Command
  4120 ;;		_LCD_Char
  4121 ;;		_LCD_Clear
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text31
  4126  00146C                     __ptext31:
  4127                           	callstack 0
  4128  00146C                     _MSdelay:
  4129                           	callstack 30
  4130  00146C                     
  4131                           ;LCD_16x2_4bit_mode.c: 88: void MSdelay(unsigned int val);LCD_16x2_4bit_mode.c: 89: {;LC
      +                          D_16x2_4bit_mode.c: 90:  unsigned int i,j;;LCD_16x2_4bit_mode.c: 91:  for(i=0;i<val;i++)
  4132  00146C  0E00               	movlw	0
  4133  00146E  6E04               	movwf	(MSdelay@i+1)^0,c
  4134  001470  0E00               	movlw	0
  4135  001472  6E03               	movwf	MSdelay@i^0,c
  4136  001474  EF4F  F00A         	goto	l1672
  4137  001478                     l1660:
  4138                           
  4139                           ;LCD_16x2_4bit_mode.c: 92:      for(j=0;j<165;j++);
  4140  001478  0E00               	movlw	0
  4141  00147A  6E06               	movwf	(MSdelay@j+1)^0,c
  4142  00147C  0E00               	movlw	0
  4143  00147E  6E05               	movwf	MSdelay@j^0,c
  4144  001480                     l1666:
  4145  001480  4A05               	infsnz	MSdelay@j^0,f,c
  4146  001482  2A06               	incf	(MSdelay@j+1)^0,f,c
  4147  001484  5006               	movf	(MSdelay@j+1)^0,w,c
  4148  001486  E109               	bnz	u880
  4149  001488  0EA5               	movlw	165
  4150  00148A  5C05               	subwf	MSdelay@j^0,w,c
  4151  00148C  A0D8               	btfss	status,0,c
  4152  00148E  EF4B  F00A         	goto	u881
  4153  001492  EF4D  F00A         	goto	u880
  4154  001496                     u881:
  4155  001496  EF40  F00A         	goto	l1666
  4156  00149A                     u880:
  4157  00149A  4A03               	infsnz	MSdelay@i^0,f,c
  4158  00149C  2A04               	incf	(MSdelay@i+1)^0,f,c
  4159  00149E                     l1672:
  4160  00149E  5001               	movf	MSdelay@val^0,w,c
  4161  0014A0  5C03               	subwf	MSdelay@i^0,w,c
  4162  0014A2  5002               	movf	(MSdelay@val+1)^0,w,c
  4163  0014A4  5804               	subwfb	(MSdelay@i+1)^0,w,c
  4164  0014A6  A0D8               	btfss	status,0,c
  4165  0014A8  EF58  F00A         	goto	u891
  4166  0014AC  EF5A  F00A         	goto	u890
  4167  0014B0                     u891:
  4168  0014B0  EF3C  F00A         	goto	l1660
  4169  0014B4                     u890:
  4170  0014B4  0012               	return		;funcret
  4171  0014B6                     __end_of_MSdelay:
  4172                           	callstack 0
  4173                           
  4174 ;; *************** function _I2C_Init *****************
  4175 ;; Defined at:
  4176 ;;		line 29 in file "PIC18F4550_I2C_Source_File.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_main
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text32
  4204  001784                     __ptext32:
  4205                           	callstack 0
  4206  001784                     _I2C_Init:
  4207                           	callstack 30
  4208  001784                     
  4209                           ;PIC18F4550_I2C_Source_File.c: 31:     TRISB0=1;
  4210  001784  8093               	bsf	3987,0,c	;volatile
  4211                           
  4212                           ;PIC18F4550_I2C_Source_File.c: 32:  TRISB1=1;
  4213  001786  8293               	bsf	3987,1,c	;volatile
  4214  001788                     
  4215                           ;PIC18F4550_I2C_Source_File.c: 33:  SSPSTAT=80;
  4216  001788  0E50               	movlw	80
  4217  00178A  6EC7               	movwf	199,c	;volatile
  4218                           
  4219                           ;PIC18F4550_I2C_Source_File.c: 34:     SSPCON1=0x28;
  4220  00178C  0E28               	movlw	40
  4221  00178E  6EC6               	movwf	198,c	;volatile
  4222                           
  4223                           ;PIC18F4550_I2C_Source_File.c: 36:  SSPCON2=0;
  4224  001790  0E00               	movlw	0
  4225  001792  6EC5               	movwf	197,c	;volatile
  4226                           
  4227                           ;PIC18F4550_I2C_Source_File.c: 37:     SSPADD=((8000000/(4*100000))-1);
  4228  001794  0E13               	movlw	19
  4229  001796  6EC8               	movwf	200,c	;volatile
  4230  001798                     
  4231                           ;PIC18F4550_I2C_Source_File.c: 38:     SSPIE=1;
  4232  001798  869D               	bsf	3997,3,c	;volatile
  4233  00179A                     
  4234                           ;PIC18F4550_I2C_Source_File.c: 39:     SSPIF=0;
  4235  00179A  969E               	bcf	3998,3,c	;volatile
  4236  00179C  0012               	return		;funcret
  4237  00179E                     __end_of_I2C_Init:
  4238                           	callstack 0
  4239                           
  4240                           	psect	rparam
  4241  0000                     
  4242                           	psect	idloc
  4243                           
  4244                           ;Config register IDLOC0 @ 0x200000
  4245                           ;	unspecified, using default values
  4246  200000                     	org	2097152
  4247  200000  FF                 	db	255
  4248                           
  4249                           ;Config register IDLOC1 @ 0x200001
  4250                           ;	unspecified, using default values
  4251  200001                     	org	2097153
  4252  200001  FF                 	db	255
  4253                           
  4254                           ;Config register IDLOC2 @ 0x200002
  4255                           ;	unspecified, using default values
  4256  200002                     	org	2097154
  4257  200002  FF                 	db	255
  4258                           
  4259                           ;Config register IDLOC3 @ 0x200003
  4260                           ;	unspecified, using default values
  4261  200003                     	org	2097155
  4262  200003  FF                 	db	255
  4263                           
  4264                           ;Config register IDLOC4 @ 0x200004
  4265                           ;	unspecified, using default values
  4266  200004                     	org	2097156
  4267  200004  FF                 	db	255
  4268                           
  4269                           ;Config register IDLOC5 @ 0x200005
  4270                           ;	unspecified, using default values
  4271  200005                     	org	2097157
  4272  200005  FF                 	db	255
  4273                           
  4274                           ;Config register IDLOC6 @ 0x200006
  4275                           ;	unspecified, using default values
  4276  200006                     	org	2097158
  4277  200006  FF                 	db	255
  4278                           
  4279                           ;Config register IDLOC7 @ 0x200007
  4280                           ;	unspecified, using default values
  4281  200007                     	org	2097159
  4282  200007  FF                 	db	255
  4283                           
  4284                           	psect	config
  4285                           
  4286                           ;Config register CONFIG1L @ 0x300000
  4287                           ;	PLL Prescaler Selection bits
  4288                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4289                           ;	System Clock Postscaler Selection bits
  4290                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4291                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4292                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4293  300000                     	org	3145728
  4294  300000  00                 	db	0
  4295                           
  4296                           ;Config register CONFIG1H @ 0x300001
  4297                           ;	Oscillator Selection bits
  4298                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4299                           ;	Fail-Safe Clock Monitor Enable bit
  4300                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4301                           ;	Internal/External Oscillator Switchover bit
  4302                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4303  300001                     	org	3145729
  4304  300001  09                 	db	9
  4305                           
  4306                           ;Config register CONFIG2L @ 0x300002
  4307                           ;	Power-up Timer Enable bit
  4308                           ;	PWRT = OFF, PWRT disabled
  4309                           ;	Brown-out Reset Enable bits
  4310                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4311                           ;	Brown-out Reset Voltage bits
  4312                           ;	BORV = 3, Minimum setting 2.05V
  4313                           ;	USB Voltage Regulator Enable bit
  4314                           ;	VREGEN = OFF, USB voltage regulator disabled
  4315  300002                     	org	3145730
  4316  300002  1F                 	db	31
  4317                           
  4318                           ;Config register CONFIG2H @ 0x300003
  4319                           ;	Watchdog Timer Enable bit
  4320                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4321                           ;	Watchdog Timer Postscale Select bits
  4322                           ;	WDTPS = 32768, 1:32768
  4323  300003                     	org	3145731
  4324  300003  1E                 	db	30
  4325                           
  4326                           ; Padding undefined space
  4327  300004                     	org	3145732
  4328  300004  FF                 	db	255
  4329                           
  4330                           ;Config register CONFIG3H @ 0x300005
  4331                           ;	CCP2 MUX bit
  4332                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4333                           ;	PORTB A/D Enable bit
  4334                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4335                           ;	Low-Power Timer 1 Oscillator Enable bit
  4336                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4337                           ;	MCLR Pin Enable bit
  4338                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4339  300005                     	org	3145733
  4340  300005  01                 	db	1
  4341                           
  4342                           ;Config register CONFIG4L @ 0x300006
  4343                           ;	Stack Full/Underflow Reset Enable bit
  4344                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4345                           ;	Single-Supply ICSP Enable bit
  4346                           ;	LVP = OFF, Single-Supply ICSP disabled
  4347                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4348                           ;	ICPRT = OFF, ICPORT disabled
  4349                           ;	Extended Instruction Set Enable bit
  4350                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4351                           ;	Background Debugger Enable bit
  4352                           ;	DEBUG = 0x1, unprogrammed default
  4353  300006                     	org	3145734
  4354  300006  81                 	db	129
  4355                           
  4356                           ; Padding undefined space
  4357  300007                     	org	3145735
  4358  300007  FF                 	db	255
  4359                           
  4360                           ;Config register CONFIG5L @ 0x300008
  4361                           ;	Code Protection bit
  4362                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4363                           ;	Code Protection bit
  4364                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4365                           ;	Code Protection bit
  4366                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4367                           ;	Code Protection bit
  4368                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4369  300008                     	org	3145736
  4370  300008  0F                 	db	15
  4371                           
  4372                           ;Config register CONFIG5H @ 0x300009
  4373                           ;	Boot Block Code Protection bit
  4374                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4375                           ;	Data EEPROM Code Protection bit
  4376                           ;	CPD = OFF, Data EEPROM is not code-protected
  4377  300009                     	org	3145737
  4378  300009  C0                 	db	192
  4379                           
  4380                           ;Config register CONFIG6L @ 0x30000A
  4381                           ;	Write Protection bit
  4382                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4383                           ;	Write Protection bit
  4384                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4385                           ;	Write Protection bit
  4386                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4387                           ;	Write Protection bit
  4388                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4389  30000A                     	org	3145738
  4390  30000A  0F                 	db	15
  4391                           
  4392                           ;Config register CONFIG6H @ 0x30000B
  4393                           ;	Configuration Register Write Protection bit
  4394                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4395                           ;	Boot Block Write Protection bit
  4396                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4397                           ;	Data EEPROM Write Protection bit
  4398                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4399  30000B                     	org	3145739
  4400  30000B  E0                 	db	224
  4401                           
  4402                           ;Config register CONFIG7L @ 0x30000C
  4403                           ;	Table Read Protection bit
  4404                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4405                           ;	Table Read Protection bit
  4406                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4407                           ;	Table Read Protection bit
  4408                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4409                           ;	Table Read Protection bit
  4410                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4411  30000C                     	org	3145740
  4412  30000C  0F                 	db	15
  4413                           
  4414                           ;Config register CONFIG7H @ 0x30000D
  4415                           ;	Boot Block Table Read Protection bit
  4416                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4417  30000D                     	org	3145741
  4418  30000D  40                 	db	64
  4419                           tosu	equ	0xFFF
  4420                           tosh	equ	0xFFE
  4421                           tosl	equ	0xFFD
  4422                           stkptr	equ	0xFFC
  4423                           pclatu	equ	0xFFB
  4424                           pclath	equ	0xFFA
  4425                           pcl	equ	0xFF9
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           prodh	equ	0xFF4
  4431                           prodl	equ	0xFF3
  4432                           indf0	equ	0xFEF
  4433                           postinc0	equ	0xFEE
  4434                           postdec0	equ	0xFED
  4435                           preinc0	equ	0xFEC
  4436                           plusw0	equ	0xFEB
  4437                           fsr0h	equ	0xFEA
  4438                           fsr0l	equ	0xFE9
  4439                           wreg	equ	0xFE8
  4440                           indf1	equ	0xFE7
  4441                           postinc1	equ	0xFE6
  4442                           postdec1	equ	0xFE5
  4443                           preinc1	equ	0xFE4
  4444                           plusw1	equ	0xFE3
  4445                           fsr1h	equ	0xFE2
  4446                           fsr1l	equ	0xFE1
  4447                           bsr	equ	0xFE0
  4448                           indf2	equ	0xFDF
  4449                           postinc2	equ	0xFDE
  4450                           postdec2	equ	0xFDD
  4451                           preinc2	equ	0xFDC
  4452                           plusw2	equ	0xFDB
  4453                           fsr2h	equ	0xFDA
  4454                           fsr2l	equ	0xFD9
  4455                           status	equ	0xFD8

Data Sizes:
    Strings     54
    Constant    0
    Data        7
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     88     147
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@year(BANK0[10]), main@month(BANK0[10]), main@date(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@year(BANK0[10]), main@month(BANK0[10]), main@date(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S827_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@year(BANK0[10]), main@month(BANK0[10]), main@date(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@year(BANK0[10]), main@month(BANK0[10]), main@date(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@date(BANK0[10]), main@hours(BANK0[10]), STR_2(CODE[3]), STR_1(CODE[3]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), main@year(BANK0[10]), 
		 -> main@month(BANK0[10]), main@date(BANK0[10]), main@hours(BANK0[10]), main@mins(BANK0[10]), 
		 -> main@secs(BANK0[10]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                72    72      0   16972
                                             16 BANK0     72    72      0
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                           _MSdelay1
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7623
                                              0 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6056
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5701
                                             66 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4263
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MSdelay1                                             6     4      2     168
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    3340
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2    1777
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     668
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1292
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    1292
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     668
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     624
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Stop
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _MSdelay1
   _RTC_Read_Calendar
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Stop
     _I2C_Write
       _I2C_Ready
   _RTC_Read_Clock
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Write
       _I2C_Ready
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      93       5       91.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F2      20        0.0%
DATA                 0      0      F2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Dec 11 18:45:49 2020

                    __size_of_I2C_Ready 0012                      __size_of_I2C_Start 002E  
                          ?_LCD_Command 0001                             _SSPSTATbits 000FC7  
                    __size_of_I2C_Write 0022                                      l43 14FA  
                                    l54 146A                                      l46 1336  
                                    l95 1704                                      l98 1420  
                           ?_LCD_String 0009  RTC_Read_Calendar@read_calendar_address 0004  
                                   l101 13D4                                     l112 157E  
                                   l200 1718                                     l202 1732  
                                   l123 14B4                                     l115 17EC  
                                   l107 12DC                                     l205 1738  
                                   l222 1782                                     l214 17A0  
                                   l207 1746                                     l232 17B6  
                                   l216 17AE                                     l209 1760  
                                   l226 17CA                                     l170 15FA  
                                   l218 17B0                                     l235 17C4  
                                   l172 1608                                     l229 17D8  
                                   l181 17EE                                     l174 1628  
                                   l183 17FC                                     l175 162E  
                                   l184 17FE                                     l178 179C  
                                   l198 170A                                     l916 1388  
                                   l950 1184                                     l952 11BE  
                                   l947 1142                                     l980 0E00  
                                   l957 0BC8                                     l982 0E62  
                                   l966 0C64                                     l959 0BD0  
                                   l995 1218                                     l996 1220  
                                   l989 1032                                     l999 15BA  
                                   _PEN 007E2A                                     u700 1058  
                                   u701 1054                                     u710 1080  
                                   u711 107C                                     u720 10B6  
                                   u800 1192                                     u721 10B2  
                                   u801 118E                                     u810 1698  
                                   u730 153E                                     u811 1692  
                                   u731 153A                                     u900 17FC  
                                   u820 169A                                     u740 16C8  
                                   u901 17F8                                     u741 16C4  
                                   u830 15B4                                     u750 1660  
                                   u910 0BA0                                     u831 15AE  
                                   u751 165A                                     u911 0B9C  
                                   u840 15B6                                     u760 1662  
                                   u920 0BBC                                     u921 0BB8  
                                   u690 1046                                     u770 110C  
                                   u850 1252                                     u930 0BE6  
                                   u691 1042                                     u771 1108  
                                   u851 124C                                     u931 0BE2  
                                   u780 112E                                     u860 1254  
                                   u940 0C48                                     u781 112A  
                                   u941 0C44                                     u790 1184  
                                   u870 126A                                     u950 0C92  
                                   u791 1180                                     u871 1266  
                                   u951 0C8C                                     u880 149A  
                                   u960 0C94                                     u881 1496  
                                   u890 14B4                                     u970 0CAA  
                                   u891 14B0                                     u971 0CA6  
                                   u980 0CDE                                     u981 0CD8  
                                   u990 0CE0                                     _Day 00C4  
                       __end_of_I2C_Ack 17DA                                     _pad 10FE  
                                   _min 00C8                                     _sec 00CA  
                                   wreg 000FE8                             LCD_Char@dat 0008  
                                  l1020 10FC                                    l1005 169E  
                                  l1031 1808                                    l2000 087C  
                                  l1042 1276                                    l2010 0912  
                                  l2002 0882                                    l1028 153E  
                                  l2020 0986                                    l2012 0924  
                                  l2004 0886                                    l1037 16D4  
                                  l1053 1666                                    l2030 09D8  
                                  l2022 0998                                    l2014 092E  
                                  l2006 08C2                                    l1047 127E  
                                  l2032 09F6                                    l2040 0A2A  
                                  l2024 09A4                                    l2016 094A  
                                  l2008 08FC                                    l2106 0B4E  
                                  l2050 0A8E                                    l2042 0A30  
                                  l2034 0A14                                    l2018 0968  
                                  l2026 09B4                                    l2060 0ADC  
                                  l2052 0AA0                                    l2044 0A34  
                                  l2028 09BC                                    l2062 0AEC  
                                  l2054 0AAC                                    l2046 0A52  
                                  l1600 151A                                    l2064 0AFC  
                                  l2056 0ABC                                    l2072 0B2C  
                                  l2048 0A70                                    l1602 151E  
                                  l1610 16C8                                    l2066 0B0C  
                                  l2058 0ACC                                    l1604 16A0  
                                  l1620 110C                                    l1700 0C58  
                                  l2068 0B1C                                    l1606 16AC  
                                  l1630 1162                                    l1622 1120  
                                  l1614 1630                                    l1710 0CE4  
                                  l1640 1668                                    l1608 16B0  
                                  l1632 1166                                    l1624 112E  
                                  l1720 0D26                                    l1712 0CF6  
                                  l1704 0C98                                    l1800 0F54  
                                  l1634 1192                                    l1626 113A  
                                  l1618 10FE                                    l1730 0DF2  
                                  l1706 0CAA                                    l1714 0D0A  
                                  l1722 0D84                                    l1810 0FD6  
                                  l1660 1478                                    l1900 14CA  
                                  l1644 1580                                    l1636 11A6  
                                  l1628 114E                                    l1652 1258  
                                  l1732 0E0E                                    l1724 0DA0  
                                  l1716 0D1A                                    l1804 0F90  
                                  l1820 0FFC                                    l1670 149A  
                                  l1742 1764                                    l1910 1302  
                                  l1902 14DA                                    l1590 1080  
                                  l1582 1034                                    l1654 126A  
                                  l1734 0E14                                    l1726 0DBE  
                                  l1718 0D20                                    l1822 1020  
                                  l1806 0FB4                                    l1814 0FE2  
                                  l1672 149E                                    l1760 139C  
                                  l1920 142E                                    l1744 1768  
                                  l1840 175A                                    l1832 172C  
                                  l1912 1312                                    l1904 14EA  
                                  l1592 10B6                                    l1584 1046  
                                  l1648 1222                                    l1736 0E24  
                                  l1728 0DD8                                    l1680 0BA2  
                                  l1816 0FF0                                    l1808 0FC2  
                                  l1666 1480                                    l1658 146C  
                                  l1770 13B0                                    l1762 139E  
                                  l1930 1450                                    l1674 17EE  
                                  l1850 160C                                    l1754 1780  
                                  l1746 176C                                    l1842 1760  
                                  l1914 1322                                    l1906 12E0  
                                  l1586 1058                                    l1738 0E3A  
                                  l1690 0C16                                    l1682 0BBC  
                                  l1940 179A                                    l1668 1484  
                                  l1772 13C2                                    l1764 13A0  
                                  l1932 1454                                    l1780 17B2  
                                  l1852 161C                                    l1748 177A  
                                  l1836 1736                                    l1828 1708  
                                  l1860 179E                                    l1916 1332  
                                  l1908 12F2                                    l1588 1062  
                                  l1596 14FC                                    l1692 0C1E  
                                  l1684 0BE6                                    l1676 0B90  
                                  l1934 1784                                    l1870 13D8  
                                  l1950 16F2                                    l1942 16D6  
                                  l1774 13C4                                    l1766 13A2  
                                  l1758 138C                                    l1862 1280  
                                  l1926 1436                                    l1918 1422  
                                  l1854 1624                                    l1598 1508  
                                  l1694 0C24                                    l1686 0BEE  
                                  l1678 0BA0                                    l1790 0EAC  
                                  l1782 0E64                                    l1936 1788  
                                  l1880 13F0                                    l1872 13E8  
                                  l1952 16F8                                    l1944 16DA  
                                  l1776 13C6                                    l1768 13A4  
                                  l1864 1284                                    l1960 1542  
                                  l1928 143A                                    l1856 162C  
                                  l1848 15F8                                    l1696 0C2C  
                                  l1688 0C0E                                    l1792 0ED0  
                                  l1784 0E88                                    l1938 1798  
                                  l1882 13FC                                    l1874 13EA  
                                  l1954 16FE                                    l1946 16E6  
                                  l1866 12A8                                    l1970 1572  
                                  l1962 1552                                    l1778 17C6  
                                  l1698 0C48                                    l1794 0EF4  
                                  l1786 0E96                                    l1890 11C0  
                                  l1884 140E                                    l1876 13EC  
                                  l1956 17DA                                    l1948 16EC  
                                  l1868 12AC                                    l1964 155A  
                                  l1796 0F0A                                    l1788 0EA8  
                                  l1892 11C8                                    l1980 1376  
                                  l1972 1338                                    l1886 1410  
                                  l1878 13EE                                    l1966 1564  
                                  l1958 1542                                    l1798 0F18  
                                  l1894 11D6                                    l1974 134A  
                                  l1990 0858                                    ?_pad 0011  
                                  l1888 1412                                    l1968 156C  
                                  l1896 11FC                                    l1976 1352  
                                  l1992 085C                                    l1984 0838  
                                  l1898 14B8                                    l1978 135A  
                                  l1994 0860                                    l1986 0842  
                                  l1996 0864                                    l1988 0854  
                                  l1998 0870                                    STR_1 0834  
                                  STR_2 0831                                    STR_3 0811  
                                  STR_4 080D                                    STR_5 0809  
                                  STR_6 0811                                    STR_7 080D  
                                  STR_8 0809                                    STR_9 0801  
                                  u1000 0CF6                                    u1001 0CF2  
                                  u1010 0D5E                                    u1100 17C4  
                                  u1020 0DA0                                    u1101 17C0  
                                  u1021 0D9C                                    u1030 0DBE  
                                  u1110 0E88                                    u1031 0DBA  
                                  u1015 0D4C                                    u1111 0E84  
                                  u1200 161C                                    u1040 0DD8  
                                  u1120 0ED0                                    u1201 1618  
                                  u1041 0DD4                                    u1121 0ECC  
                                  u1210 17AE                                    u1050 0DF2  
                                  u1130 0EF4                                    u1211 17AA  
                                  u1051 0DEE                                    u1131 0EF0  
                                  u1220 12A4                                    u1060 0E00  
                                  u1140 0FB4                                    u1061 0DFC  
                                  u1141 0FB0                                    u1230 12CC  
                                  u1150 1718                                    u1070 0E0E  
                                  u1310 08C2                                    u1151 1714  
                                  u1071 0E0A                                    u1311 08BE  
                                  u1240 12DC                                    u1080 177A  
                                  u1160 1728                                    u1304 08A0  
                                  u1241 12D8                                    u1081 1776  
                                  u1161 1724                                    u1305 089A  
                                  u1090 17D8                                    u1170 1746  
                                  u1250 1218                                    u1330 08FC  
                                  u1227 129A                                    u1091 17D4  
                                  u1171 1742                                    u1251 1214  
                                  u1331 08F8                                    u1260 1450  
                                  u1180 1756                                    u1324 08DA  
                                  u1237 12C2                                    u1261 144C  
                                  u1181 1752                                    u1325 08D4  
                                  u1270 146A                                    u1190 1608  
                                  u1271 1466                                    u1191 1604  
                                  u1280 1552                                    _LATD 000F8C  
                                  u1281 154E                                    u1291 084C  
                                  _RCEN 007E2B                                    _RSEN 007E29  
                                  _Date 00C2                                    _Year 00BE  
                        main@Clock_type 00B6                                    _dbuf 00CC  
                                  _main 0838                         ?_RTC_Read_Clock 0001  
                                  _hour 00C6                        __end_of_I2C_Nack 17C6  
                    __size_of_LCD_Clear 0014                                    _prec 00BC  
                      __end_of_I2C_Init 179E                        __end_of_I2C_Read 1630  
                                  _nout 00B8                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  _xtoa 0B90                        __end_of_I2C_Stop 17B2  
                                  start 0000                         __end_of_MSdelay 14B6  
                         _LCD_String_xy 1540                             _toupper$994 000D  
                          ___param_bank 000000        RTC_Read_Clock@read_clock_address 0004  
                                 ??_pad 0017                        __end_of_LCD_Char 13D6  
                      __end_of_LCD_Init 1706                                   ?_main 0001  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                                 STR_10 0805                                   STR_11 0811  
                                 STR_12 0825                                   STR_13 0821  
                                 STR_14 0819                                   STR_15 0815  
                                 STR_16 082D                                   STR_17 081D  
                                 STR_18 0829                                   ?_xtoa 001C  
                                 _LATD0 007C60                                   _LATD2 007C62  
                          vfpfcnvrt@fmt 0045                            vfpfcnvrt@llu 004D  
                                 _TRISD 000F95                                   _SSPIE 007CEB  
                                 _SSPIF 007CF3                                   _Month 00C0  
                                 _flags 005E                                   _fputc 1034  
                       __end_of_isalpha 15BC                                   _fputs 14FC  
                     __end_of_I2C_Ready 1800                                   pad@fp 0011  
                                 _width 00BA                                   _putch 1808  
                       __end_of_islower 1668                       __end_of_I2C_Start 1734  
                     __end_of_I2C_Write 1784                         __end_of_isupper 16A0  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                      __end_of_MSdelay1 146C                     __size_of_LCD_String 005E  
                       __end_of_sprintf 138A                                   xtoa@c 0041  
                                 xtoa@d 001E                                   xtoa@i 003F  
                                 xtoa@n 0037                                   xtoa@p 0033  
                                 xtoa@w 0035                                   xtoa@x 0026  
                       __end_of_toupper 1280                          ?_LCD_String_xy 000B  
                       __initialization 15BC                            __end_of_main 0B90  
                          __end_of_xtoa 0E64                               ??_I2C_Ack 0001  
                                ??_main 0070                                  ??_xtoa 0027  
                     __end_of_LCD_Clear 17EE                           __activetblptr 000002  
                                ?_fputc 0001                                  ?_fputs 000A  
                                ?_putch 0001                        LCD_String_xy@msg 000C  
                      LCD_String_xy@pos 000B                        LCD_String_xy@row 000E  
                             ??_MSdelay 0003                                  _OSCCON 000FD3  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                          vfprintf@cfmt 005C                                  clear_0 15E2  
                    _I2C_Repeated_Start 1734                                  pad@buf 0013  
                  __size_of_LCD_Command 004C                                  _strlen 16A0  
                                fputc@c 0001                                  fputs@c 000E  
                                fputs@i 000F                               ?_I2C_Nack 0001  
                                fputs@s 000A                               ??_isalpha 0003  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                             ?_I2C_Stop 0001                               ??_islower 0003  
                          __mediumconst 0000                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 1222  
                             ??_sprintf 005E                                  xtoa@fp 001C  
                             ??_toupper 0009                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 15EC  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000E  
                         ___rparam_used 000001                    ??_I2C_Repeated_Start 0002  
                        __pcstackCOMRAM 0001                            __pidataBANK0 1800  
                         __end_of_fputc 10FE                           __end_of_fputs 1540  
                         __end_of_putch 180A                            ??_LCD_String 000B  
                             ?_MSdelay1 0001                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                        ??_RTC_Read_Clock 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00B8  
                            ??_LCD_Char 0007                              ??_LCD_Init 0009  
                    __end_of_LCD_String 12DE                            I2C_Read@flag 0001  
                        I2C_Read@buffer 0002                                 _I2C_Ack 17C6  
                               _ACKSTAT 007E2E                                 ?_strlen 0001  
                            ??_MSdelay1 0003                      __size_of_vfpfcnvrt 01D0  
                               _SSPCON1 000FC6                                 _SSPCON2 000FC5  
                               _SSPSTAT 000FC7                                 _MSdelay 146C  
                             _I2C_Ready 17EE                               _I2C_Start 1706  
                             _I2C_Write 1762                           LCD_String@msg 0009  
                               __Hparam 0000                                 __Lparam 0000  
                     _RTC_Read_Calendar 12DE                               ?_vfprintf 0056  
                          __psmallconst 0800                      ?_RTC_Read_Calendar 0001  
                               __pcinit 15BC                                 __ramtop 0800  
                               __ptext0 0838                                 __ptext1 1338  
                               __ptext2 11C0                                 __ptext3 0E64  
                               __ptext4 0B90                                 __ptext5 1222  
                               __ptext6 1630                                 __ptext7 10FE  
                               __ptext8 16A0                                 __ptext9 14FC  
                       __size_of_strlen 0036                            __size_of_pad 00C2  
                               _isalpha 1580                               MSdelay1@i 0003  
                             MSdelay1@j 0005                     ??_RTC_Read_Calendar 0003  
                               _islower 1630                                 _isupper 1668  
                             _LCD_Clear 17DA                                 _sprintf 1338  
                               _toupper 1222                    end_of_initialization 15EC  
                               fputc@fp 0003                          LCD_Command@cmd 0008  
                         __Lmediumconst 0000                                 fputs@fp 000C  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 1338  
                     __end_of_vfpfcnvrt 1034                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005C                                 strlen@a 0003  
                               strlen@s 0001                              ?_LCD_Clear 0001  
                     __size_of_I2C_Nack 0014                       __size_of_I2C_Init 001A  
                     __size_of_I2C_Read 003A                       __size_of_I2C_Stop 0014  
                     __size_of_LCD_Char 004C                       __size_of_LCD_Init 0030  
                         ??_LCD_Command 0007                             vfpfcnvrt@ap 0047  
                           vfpfcnvrt@fp 0043                          __end_of_strlen 16D6  
                   start_initialization 15BC                       __size_of_MSdelay1 004A  
                           __end_of_pad 11C0    I2C_Repeated_Start@slave_read_address 0002  
                           ??_I2C_Ready 0001                             ??_I2C_Start 0002  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 1580  
            __size_of_RTC_Read_Calendar 005A                             vfprintf@fmt 0058  
           __size_of_I2C_Repeated_Start 002E                             __pdataBANK0 00EC  
                              ?_I2C_Ack 0001                                ??_strlen 0003  
                   __end_of_LCD_Command 1422                             __pbssCOMRAM 005E  
                         __pcstackBANK0 0060                             ??_LCD_Clear 0009  
                              ?_MSdelay 0001                       __size_of_vfprintf 0062  
                           __smallconst 0800                                _I2C_Nack 17B2  
                              ?_isalpha 0001                                _I2C_Init 1784  
                              _I2C_Read 15F6                                _I2C_Stop 179E  
                              ?_islower 0001                                ?_isupper 0001  
                 LCD_String_xy@location 000F                                ?_sprintf 0060  
                        __size_of_fputc 00CA                          __size_of_fputs 0044  
                              ?_toupper 0007                          __size_of_putch 0002  
                              MSdelay@i 0003                                MSdelay@j 0005  
                           MSdelay1@val 0001                                _LCD_Char 138A  
                              _LCD_Init 16D6                 __size_of_RTC_Read_Clock 0046  
                             main@F3531 00EC                               main@AM_PM 00B7  
                           _LCD_Command 13D6                               _vfpfcnvrt 0E64  
                      __size_of_I2C_Ack 0014                                _MSdelay1 1422  
                             main@hours 00AC                               main@month 0084  
                            vfpfcnvrt@c 0055                               copy_data0 15D0  
          I2C_Start@slave_write_address 0002                        __size_of_MSdelay 004A  
                              __Hrparam 0000                              vfprintf@ap 005A  
                              __Lrparam 0000                              vfprintf@fp 0056  
                         I2C_Write@data 0001                              ?_vfpfcnvrt 0043  
                            sprintf@fmt 0062                        __size_of_isalpha 003C  
                      __size_of_islower 0038                                __ptext10 1034  
                              __ptext11 1808                                __ptext20 15F6  
                              __ptext12 1668                                __ptext21 17EE  
                              __ptext13 1580                                __ptext30 13D6  
                              __ptext22 17B2                                __ptext14 14B6  
                              __ptext31 146C                                __ptext23 17C6  
                              __ptext15 12DE                                __ptext32 1784  
                              __ptext24 1422                                __ptext16 179E  
                              __ptext25 1540                                __ptext17 1706  
                              __ptext26 1280                                __ptext18 1734  
                              __ptext27 138A                                __ptext19 1762  
                              __ptext28 16D6                                __ptext29 17DA  
                      __size_of_isupper 0038                        __size_of_sprintf 0052  
                      __size_of_toupper 005E                           __size_of_main 0358  
                         __size_of_xtoa 02D4                              MSdelay@val 0001  
                              _xtoa$911 002F                                _xtoa$912 0031  
                              _vfprintf 11C0                                main@date 007A  
                              main@days 0073                                main@mins 00A2  
                              main@secs 0098                                main@year 008E  
                            _LCD_String 1280                                isalpha@c 0001  
                             sprintf@ap 0068                                islower@c 0001  
            __end_of_I2C_Repeated_Start 1762                                isupper@c 0001  
                        _RTC_Read_Clock 14B6                             ??_vfpfcnvrt 0049  
                              sprintf@f 006A                                sprintf@s 0060  
                              toupper@c 0007                  __size_of_LCD_String_xy 0040  
                           _SSPCON2bits 000FC5                  __end_of_RTC_Read_Clock 14FC  
