

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 14 21:28:27 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4550 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     _SSPCON2bits	set	4037
    88  0000                     _SSPADD	set	4040
    89  0000                     _SSPCON2	set	4037
    90  0000                     _SSPCON1	set	4038
    91  0000                     _SSPSTAT	set	4039
    92  0000                     _SSPBUF	set	4041
    93  0000                     _SSPSTATbits	set	4039
    94  0000                     _LATD	set	3980
    95  0000                     _TRISD	set	3989
    96  0000                     _LATDbits	set	3980
    97  0000                     _PORTBbits	set	3969
    98  0000                     _OSCCON	set	4051
    99  0000                     _TRISBbits	set	3987
   100  0000                     _TRISDbits	set	3989
   101  0000                     _ACKEN	set	32300
   102  0000                     _ACKDT	set	32301
   103  0000                     _PEN	set	32298
   104  0000                     _RSEN	set	32297
   105  0000                     _ACKSTAT	set	32302
   106  0000                     _SSPIF	set	31987
   107  0000                     _SSPIE	set	31979
   108  0000                     _TRISB1	set	31897
   109  0000                     _TRISB0	set	31896
   110  0000                     _RCEN	set	32299
   111  0000                     _LATD3	set	31843
   112  0000                     _LATD2	set	31842
   113                           
   114                           	psect	smallconst
   115  000800                     __psmallconst:
   116                           	callstack 0
   117  000800  00                 	db	0
   118  000801                     STR_9:
   119  000801  2D                 	db	45
   120  000802  2D                 	db	45
   121  000803  2D                 	db	45
   122  000804  2D                 	db	45
   123  000805  44                 	db	68	;'D'
   124  000806  65                 	db	101	;'e'
   125  000807  73                 	db	115	;'s'
   126  000808  63                 	db	99	;'c'
   127  000809  61                 	db	97	;'a'
   128  00080A  6E                 	db	110	;'n'
   129  00080B  73                 	db	115	;'s'
   130  00080C  6F                 	db	111	;'o'
   131  00080D  2D                 	db	45
   132  00080E  2D                 	db	45
   133  00080F  2D                 	db	45
   134  000810  00                 	db	0
   135  000811                     STR_10:
   136  000811  54                 	db	84	;'T'
   137  000812  65                 	db	101	;'e'
   138  000813  6D                 	db	109	;'m'
   139  000814  70                 	db	112	;'p'
   140  000815  6F                 	db	111	;'o'
   141  000816  6D                 	db	109	;'m'
   142  000817  3A                 	db	58	;':'
   143  000818  25                 	db	37
   144  000819  78                 	db	120	;'x'
   145  00081A  00                 	db	0
   146  00081B                     STR_12:
   147  00081B  20                 	db	32
   148  00081C  45                 	db	69	;'E'
   149  00081D  25                 	db	37
   150  00081E  78                 	db	120	;'x'
   151  00081F  20                 	db	32
   152  000820  46                 	db	70	;'F'
   153  000821  25                 	db	37
   154  000822  78                 	db	120	;'x'
   155  000823  00                 	db	0
   156  000824                     STR_5:
   157  000824  54                 	db	84	;'T'
   158  000825  69                 	db	105	;'i'
   159  000826  6D                 	db	109	;'m'
   160  000827  3A                 	db	58	;':'
   161  000828  25                 	db	37
   162  000829  78                 	db	120	;'x'
   163  00082A  3A                 	db	58	;':'
   164  00082B  00                 	db	0
   165  00082C                     STR_3:
   166  00082C  25                 	db	37
   167  00082D  78                 	db	120	;'x'
   168  00082E  20                 	db	32
   169  00082F  00                 	db	0
   170  000830                     STR_11:
   171  000830  2D                 	db	45
   172  000831  25                 	db	37
   173  000832  78                 	db	120	;'x'
   174  000833  00                 	db	0
   175  000834                     STR_2:
   176  000834  41                 	db	65	;'A'
   177  000835  4D                 	db	77	;'M'
   178  000836  00                 	db	0
   179  000837                     STR_1:
   180  000837  50                 	db	80	;'P'
   181  000838  4D                 	db	77	;'M'
   182  000839  00                 	db	0
   183  00083A  00                 	db	0	; dummy byte at the end
   184  0000                     
   185                           ; #config settings
   186                           
   187                           	psect	cinit
   188  001A90                     __pcinit:
   189                           	callstack 0
   190  001A90                     start_initialization:
   191                           	callstack 0
   192  001A90                     __initialization:
   193                           	callstack 0
   194                           
   195                           ; Clear objects allocated to BANK0 (64 bytes)
   196  001A90  EE00  F0BD         	lfsr	0,__pbssBANK0
   197  001A94  0E40               	movlw	64
   198  001A96                     clear_0:
   199  001A96  6AEE               	clrf	postinc0,c
   200  001A98  06E8               	decf	wreg,f,c
   201  001A9A  E1FD               	bnz	clear_0
   202                           
   203                           ; Clear objects allocated to COMRAM (2 bytes)
   204  001A9C  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   205  001A9E  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   206  001AA0                     end_of_initialization:
   207                           	callstack 0
   208  001AA0                     __end_of__initialization:
   209                           	callstack 0
   210  001AA0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   211  001AA2  6EF8               	movwf	tblptru,c
   212  001AA4  0100               	movlb	0
   213  001AA6  EF1E  F004         	goto	_main	;jump to C main() function
   214                           
   215                           	psect	bssCOMRAM
   216  00005E                     __pbssCOMRAM:
   217                           	callstack 0
   218  00005E                     _flags:
   219                           	callstack 0
   220  00005E                     	ds	2
   221                           
   222                           	psect	bssBANK0
   223  0000BD                     __pbssBANK0:
   224                           	callstack 0
   225  0000BD                     _nout:
   226                           	callstack 0
   227  0000BD                     	ds	2
   228  0000BF                     _width:
   229                           	callstack 0
   230  0000BF                     	ds	2
   231  0000C1                     _prec:
   232                           	callstack 0
   233  0000C1                     	ds	2
   234  0000C3                     _count_pomo_fail:
   235                           	callstack 0
   236  0000C3                     	ds	2
   237  0000C5                     _count_pomo:
   238                           	callstack 0
   239  0000C5                     	ds	2
   240  0000C7                     _run:
   241                           	callstack 0
   242  0000C7                     	ds	2
   243  0000C9                     _counter_min:
   244                           	callstack 0
   245  0000C9                     	ds	2
   246  0000CB                     _counter_sec:
   247                           	callstack 0
   248  0000CB                     	ds	2
   249  0000CD                     _alarma:
   250                           	callstack 0
   251  0000CD                     	ds	2
   252  0000CF                     _Year:
   253                           	callstack 0
   254  0000CF                     	ds	2
   255  0000D1                     _Month:
   256                           	callstack 0
   257  0000D1                     	ds	2
   258  0000D3                     _Date:
   259                           	callstack 0
   260  0000D3                     	ds	2
   261  0000D5                     _Day:
   262                           	callstack 0
   263  0000D5                     	ds	2
   264  0000D7                     _hour:
   265                           	callstack 0
   266  0000D7                     	ds	2
   267  0000D9                     _min:
   268                           	callstack 0
   269  0000D9                     	ds	2
   270  0000DB                     _sec:
   271                           	callstack 0
   272  0000DB                     	ds	2
   273  0000DD                     _dbuf:
   274                           	callstack 0
   275  0000DD                     	ds	32
   276                           
   277                           	psect	cstackBANK0
   278  000060                     __pcstackBANK0:
   279                           	callstack 0
   280  000060                     ?_sprintf:
   281                           	callstack 0
   282  000060                     sprintf@s:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x0
   286  000060                     	ds	2
   287  000062                     sprintf@fmt:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x2
   291  000062                     	ds	8
   292  00006A                     sprintf@ap:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0xA
   296  00006A                     	ds	2
   297  00006C                     sprintf@f:
   298                           	callstack 0
   299                           
   300                           ; 6 bytes @ 0xC
   301  00006C                     	ds	6
   302  000072                     ??_main:
   303                           
   304                           ; 1 bytes @ 0x12
   305  000072                     	ds	3
   306  000075                     main@counters_sec:
   307                           	callstack 0
   308                           
   309                           ; 10 bytes @ 0x15
   310  000075                     	ds	10
   311  00007F                     main@counters_pomos:
   312                           	callstack 0
   313                           
   314                           ; 10 bytes @ 0x1F
   315  00007F                     	ds	10
   316  000089                     main@secs:
   317                           	callstack 0
   318                           
   319                           ; 10 bytes @ 0x29
   320  000089                     	ds	10
   321  000093                     main@mins:
   322                           	callstack 0
   323                           
   324                           ; 10 bytes @ 0x33
   325  000093                     	ds	10
   326  00009D                     main@hours:
   327                           	callstack 0
   328                           
   329                           ; 10 bytes @ 0x3D
   330  00009D                     	ds	10
   331  0000A7                     main@counters_min:
   332                           	callstack 0
   333                           
   334                           ; 10 bytes @ 0x47
   335  0000A7                     	ds	10
   336  0000B1                     main@aux:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x51
   340  0000B1                     	ds	2
   341  0000B3                     main@print_sec:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x53
   345  0000B3                     	ds	2
   346  0000B5                     main@print_min:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x55
   350  0000B5                     	ds	2
   351  0000B7                     main@print_pomo:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x57
   355  0000B7                     	ds	2
   356  0000B9                     main@print_fail:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x59
   360  0000B9                     	ds	2
   361  0000BB                     main@Clock_type:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x5B
   365  0000BB                     	ds	1
   366  0000BC                     main@AM_PM:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x5C
   370  0000BC                     	ds	1
   371                           
   372                           	psect	cstackCOMRAM
   373  000001                     __pcstackCOMRAM:
   374                           	callstack 0
   375  000001                     ?_strlen:
   376                           	callstack 0
   377  000001                     ?_isupper:
   378                           	callstack 0
   379  000001                     ?_isalpha:
   380                           	callstack 0
   381  000001                     ?_islower:
   382                           	callstack 0
   383  000001                     ?___wmul:
   384                           	callstack 0
   385  000001                     ?___awdiv:
   386                           	callstack 0
   387  000001                     ?___awmod:
   388                           	callstack 0
   389  000001                     I2C_Read@flag:
   390                           	callstack 0
   391  000001                     I2C_Write@data:
   392                           	callstack 0
   393  000001                     MSdelay@val:
   394                           	callstack 0
   395  000001                     ___wmul@multiplier:
   396                           	callstack 0
   397  000001                     ___awdiv@dividend:
   398                           	callstack 0
   399  000001                     ___awmod@dividend:
   400                           	callstack 0
   401  000001                     isalpha@c:
   402                           	callstack 0
   403  000001                     isupper@c:
   404                           	callstack 0
   405  000001                     fputc@c:
   406                           	callstack 0
   407  000001                     strlen@s:
   408                           	callstack 0
   409  000001                     islower@c:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x0
   413  000001                     	ds	1
   414  000002                     I2C_Read@buffer:
   415                           	callstack 0
   416  000002                     I2C_Start@slave_write_address:
   417                           	callstack 0
   418  000002                     I2C_Repeated_Start@slave_read_address:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x1
   422  000002                     	ds	1
   423  000003                     ??_isupper:
   424  000003                     ??_isalpha:
   425  000003                     ??_islower:
   426  000003                     ??_RTC_Read_Clock:
   427  000003                     MSdelay@i:
   428                           	callstack 0
   429  000003                     ___wmul@multiplicand:
   430                           	callstack 0
   431  000003                     ___awdiv@divisor:
   432                           	callstack 0
   433  000003                     ___awmod@divisor:
   434                           	callstack 0
   435  000003                     fputc@fp:
   436                           	callstack 0
   437  000003                     strlen@a:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x2
   441  000003                     	ds	1
   442  000004                     RTC_Read_Clock@read_clock_address:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x3
   446  000004                     	ds	1
   447  000005                     ??_fputc:
   448  000005                     ___awdiv@counter:
   449                           	callstack 0
   450  000005                     ___awmod@counter:
   451                           	callstack 0
   452  000005                     MSdelay@j:
   453                           	callstack 0
   454  000005                     ___wmul@product:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x4
   458  000005                     	ds	1
   459  000006                     ___awdiv@sign:
   460                           	callstack 0
   461  000006                     ___awmod@sign:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x5
   465  000006                     	ds	1
   466  000007                     ??_LCD_Command:
   467  000007                     ??_LCD_Char:
   468  000007                     ?_Bcd2Dec:
   469                           	callstack 0
   470  000007                     ?_toupper:
   471                           	callstack 0
   472  000007                     Bcd2Dec@bcd:
   473                           	callstack 0
   474  000007                     ___awdiv@quotient:
   475                           	callstack 0
   476  000007                     toupper@c:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x6
   480  000007                     	ds	1
   481  000008                     LCD_Command@cmd:
   482                           	callstack 0
   483  000008                     LCD_Char@dat:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x7
   487  000008                     	ds	1
   488  000009                     ??_Bcd2Dec:
   489  000009                     ??_toupper:
   490  000009                     ?_Dec2Bcd:
   491                           	callstack 0
   492  000009                     LCD_String@msg:
   493                           	callstack 0
   494  000009                     Dec2Bcd@dec:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x8
   498  000009                     	ds	1
   499  00000A                     fputs@s:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x9
   503  00000A                     	ds	1
   504  00000B                     ??_Dec2Bcd:
   505  00000B                     LCD_String_xy@pos:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0xA
   509  00000B                     	ds	1
   510  00000C                     LCD_String_xy@msg:
   511                           	callstack 0
   512  00000C                     Bcd2Dec@dec:
   513                           	callstack 0
   514  00000C                     fputs@fp:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0xB
   518  00000C                     	ds	1
   519  00000D                     Dec2Bcd@bdc:
   520                           	callstack 0
   521  00000D                     _toupper$1207:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xC
   525  00000D                     	ds	1
   526  00000E                     LCD_String_xy@row:
   527                           	callstack 0
   528  00000E                     fputs@c:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0xD
   532  00000E                     	ds	1
   533  00000F                     LCD_String_xy@location:
   534                           	callstack 0
   535  00000F                     fputs@i:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0xE
   539  00000F                     	ds	2
   540  000011                     ?_pad:
   541                           	callstack 0
   542  000011                     pad@fp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x10
   546  000011                     	ds	2
   547  000013                     pad@buf:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x12
   551  000013                     	ds	2
   552  000015                     pad@p:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x14
   556  000015                     	ds	2
   557  000017                     ??_pad:
   558                           
   559                           ; 1 bytes @ 0x16
   560  000017                     	ds	1
   561  000018                     pad@i:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x17
   565  000018                     	ds	2
   566  00001A                     pad@w:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x19
   570  00001A                     	ds	2
   571  00001C                     ?_xtoa:
   572                           	callstack 0
   573  00001C                     xtoa@fp:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x1B
   577  00001C                     	ds	2
   578  00001E                     xtoa@d:
   579                           	callstack 0
   580                           
   581                           ; 8 bytes @ 0x1D
   582  00001E                     	ds	8
   583  000026                     xtoa@x:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x25
   587  000026                     	ds	1
   588  000027                     ??_xtoa:
   589                           
   590                           ; 1 bytes @ 0x26
   591  000027                     	ds	8
   592  00002F                     _xtoa$1124:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x2E
   596  00002F                     	ds	2
   597  000031                     _xtoa$1125:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x30
   601  000031                     	ds	2
   602  000033                     xtoa@p:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x32
   606  000033                     	ds	2
   607  000035                     xtoa@w:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x34
   611  000035                     	ds	2
   612  000037                     xtoa@n:
   613                           	callstack 0
   614                           
   615                           ; 8 bytes @ 0x36
   616  000037                     	ds	8
   617  00003F                     xtoa@i:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x3E
   621  00003F                     	ds	2
   622  000041                     xtoa@c:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x40
   626  000041                     	ds	2
   627  000043                     ?_vfpfcnvrt:
   628                           	callstack 0
   629  000043                     vfpfcnvrt@fp:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x42
   633  000043                     	ds	2
   634  000045                     vfpfcnvrt@fmt:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x44
   638  000045                     	ds	2
   639  000047                     vfpfcnvrt@ap:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x46
   643  000047                     	ds	2
   644  000049                     ??_vfpfcnvrt:
   645                           
   646                           ; 1 bytes @ 0x48
   647  000049                     	ds	4
   648  00004D                     vfpfcnvrt@llu:
   649                           	callstack 0
   650                           
   651                           ; 8 bytes @ 0x4C
   652  00004D                     	ds	8
   653  000055                     vfpfcnvrt@c:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x54
   657  000055                     	ds	1
   658  000056                     ?_vfprintf:
   659                           	callstack 0
   660  000056                     vfprintf@fp:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x55
   664  000056                     	ds	2
   665  000058                     vfprintf@fmt:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x57
   669  000058                     	ds	2
   670  00005A                     vfprintf@ap:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x59
   674  00005A                     	ds	2
   675  00005C                     vfprintf@cfmt:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x5B
   679  00005C                     	ds	2
   680  00005E                     
   681                           ; 1 bytes @ 0x5D
   682 ;;
   683 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   684 ;;
   685 ;; *************** function _main *****************
   686 ;; Defined at:
   687 ;;		line 69 in file "RTC.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  print_fail      2   89[BANK0 ] int 
   692 ;;  print_pomo      2   87[BANK0 ] int 
   693 ;;  print_min       2   85[BANK0 ] int 
   694 ;;  print_sec       2   83[BANK0 ] int 
   695 ;;  aux             2   81[BANK0 ] int 
   696 ;;  counters_min   10   71[BANK0 ] unsigned char [10]
   697 ;;  hours          10   61[BANK0 ] unsigned char [10]
   698 ;;  mins           10   51[BANK0 ] unsigned char [10]
   699 ;;  secs           10   41[BANK0 ] unsigned char [10]
   700 ;;  counters_pom   10   31[BANK0 ] unsigned char [10]
   701 ;;  counters_sec   10   21[BANK0 ] unsigned char [10]
   702 ;;  AM_PM           1   92[BANK0 ] unsigned char 
   703 ;;  Clock_type      1   91[BANK0 ] unsigned char 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   713 ;;      Params:         0       0       0       0       0       0       0       0       0
   714 ;;      Locals:         0      72       0       0       0       0       0       0       0
   715 ;;      Temps:          0       3       0       0       0       0       0       0       0
   716 ;;      Totals:         0      75       0       0       0       0       0       0       0
   717 ;;Total ram usage:       75 bytes
   718 ;; Hardware stack levels required when called:    8
   719 ;; This function calls:
   720 ;;		_Bcd2Dec
   721 ;;		_Dec2Bcd
   722 ;;		_I2C_Init
   723 ;;		_I2C_Stop
   724 ;;		_LCD_Clear
   725 ;;		_LCD_Init
   726 ;;		_LCD_String
   727 ;;		_LCD_String_xy
   728 ;;		_MSdelay
   729 ;;		_RTC_Read_Clock
   730 ;;		___awmod
   731 ;;		_init_leds_botons
   732 ;;		_sprintf
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text0
   739  00083C                     __ptext0:
   740                           	callstack 0
   741  00083C                     _main:
   742                           	callstack 23
   743  00083C                     
   744                           ;RTC.c: 71:     init_leds_botons();
   745  00083C  EC93  F00D         	call	_init_leds_botons	;wreg free
   746  000840                     
   747                           ;RTC.c: 73:     char secs[10],mins[10],hours[10];;RTC.c: 74:     char counters_sec[10], 
      +                          counters_min[10], counters_pomos[10];;RTC.c: 75:     char Clock_type = 0x06;
   748  000840  0E06               	movlw	6
   749  000842  0100               	movlb	0	; () banked
   750  000844  6FBB               	movwf	main@Clock_type& (0+255),b
   751  000846                     
   752                           ; BSR set to: 0
   753                           ;RTC.c: 76:     char AM_PM = 0x05;
   754  000846  0E05               	movlw	5
   755  000848  6FBC               	movwf	main@AM_PM& (0+255),b
   756  00084A                     
   757                           ; BSR set to: 0
   758                           ;RTC.c: 78:     OSCCON=0x72;
   759  00084A  0E72               	movlw	114
   760  00084C  6ED3               	movwf	211,c	;volatile
   761                           
   762                           ;RTC.c: 80:     I2C_Init();
   763  00084E  EC55  F00D         	call	_I2C_Init	;wreg free
   764  000852                     
   765                           ;RTC.c: 81:     LCD_Init();
   766  000852  ECDE  F00C         	call	_LCD_Init	;wreg free
   767  000856                     
   768                           ;RTC.c: 82:     LCD_Clear();
   769  000856  EC76  F00D         	call	_LCD_Clear	;wreg free
   770  00085A                     
   771                           ;RTC.c: 83:     MSdelay(10);
   772  00085A  0E00               	movlw	0
   773  00085C  6E02               	movwf	(MSdelay@val+1)^0,c
   774  00085E  0E0A               	movlw	10
   775  000860  6E01               	movwf	MSdelay@val^0,c
   776  000862  ECA5  F00B         	call	_MSdelay	;wreg free
   777  000866                     
   778                           ;RTC.c: 85:     alarma=1 , counter_sec=0, counter_min=0, run = 1;
   779  000866  0E00               	movlw	0
   780  000868  0100               	movlb	0	; () banked
   781  00086A  6FCE               	movwf	(_alarma+1)& (0+255),b
   782  00086C  0E01               	movlw	1
   783  00086E  6FCD               	movwf	_alarma& (0+255),b
   784  000870                     
   785                           ; BSR set to: 0
   786  000870  0E00               	movlw	0
   787  000872  6FCC               	movwf	(_counter_sec+1)& (0+255),b
   788  000874  0E00               	movlw	0
   789  000876  6FCB               	movwf	_counter_sec& (0+255),b
   790  000878                     
   791                           ; BSR set to: 0
   792  000878  0E00               	movlw	0
   793  00087A  6FCA               	movwf	(_counter_min+1)& (0+255),b
   794  00087C  0E00               	movlw	0
   795  00087E  6FC9               	movwf	_counter_min& (0+255),b
   796  000880                     
   797                           ; BSR set to: 0
   798  000880  0E00               	movlw	0
   799  000882  6FC8               	movwf	(_run+1)& (0+255),b
   800  000884  0E01               	movlw	1
   801  000886  6FC7               	movwf	_run& (0+255),b
   802  000888                     
   803                           ; BSR set to: 0
   804                           ;RTC.c: 86:     count_pomo=0, count_pomo_fail=0;
   805  000888  0E00               	movlw	0
   806  00088A  6FC6               	movwf	(_count_pomo+1)& (0+255),b
   807  00088C  0E00               	movlw	0
   808  00088E  6FC5               	movwf	_count_pomo& (0+255),b
   809  000890                     
   810                           ; BSR set to: 0
   811  000890  0E00               	movlw	0
   812  000892  6FC4               	movwf	(_count_pomo_fail+1)& (0+255),b
   813  000894  0E00               	movlw	0
   814  000896  6FC3               	movwf	_count_pomo_fail& (0+255),b
   815  000898                     l2261:
   816                           
   817                           ; BSR set to: 0
   818                           ;RTC.c: 88:     {;RTC.c: 89:         if(alarma) {
   819  000898  51CD               	movf	_alarma& (0+255),w,b
   820  00089A  11CE               	iorwf	(_alarma+1)& (0+255),w,b
   821  00089C  B4D8               	btfsc	status,2,c
   822  00089E  EF53  F004         	goto	u1611
   823  0008A2  EF55  F004         	goto	u1610
   824  0008A6                     u1611:
   825  0008A6  EF31  F005         	goto	l2305
   826  0008AA                     u1610:
   827  0008AA                     
   828                           ; BSR set to: 0
   829                           ;RTC.c: 90:         RTC_Read_Clock(0);
   830  0008AA  0E00               	movlw	0
   831  0008AC  ECCA  F00B         	call	_RTC_Read_Clock
   832  0008B0                     
   833                           ;RTC.c: 91:         I2C_Stop();
   834  0008B0  EC80  F00D         	call	_I2C_Stop	;wreg free
   835  0008B4                     
   836                           ;RTC.c: 92:         if(hour & (1<<Clock_type)){
   837  0008B4  C0BB  F072         	movff	main@Clock_type,??_main
   838  0008B8  0E01               	movlw	1
   839  0008BA  0100               	movlb	0	; () banked
   840  0008BC  6F73               	movwf	(??_main+1)& (0+255),b
   841  0008BE  0E00               	movlw	0
   842  0008C0  6F74               	movwf	(??_main+2)& (0+255),b
   843  0008C2  2B72               	incf	??_main& (0+255),f,b
   844  0008C4  EF67  F004         	goto	u1624
   845  0008C8                     u1625:
   846  0008C8  90D8               	bcf	status,0,c
   847  0008CA  3773               	rlcf	(??_main+1)& (0+255),f,b
   848  0008CC  3774               	rlcf	(??_main+2)& (0+255),f,b
   849  0008CE                     u1624:
   850  0008CE  2F72               	decfsz	??_main& (0+255),f,b
   851  0008D0  EF64  F004         	goto	u1625
   852  0008D4  0100               	movlb	0	; () banked
   853  0008D6  51D7               	movf	_hour& (0+255),w,b
   854  0008D8  1773               	andwf	(??_main+1)& (0+255),f,b
   855  0008DA  51D8               	movf	(_hour+1)& (0+255),w,b
   856  0008DC  1774               	andwf	(??_main+2)& (0+255),f,b
   857  0008DE  5173               	movf	(??_main+1)& (0+255),w,b
   858  0008E0  1174               	iorwf	(??_main+2)& (0+255),w,b
   859  0008E2  B4D8               	btfsc	status,2,c
   860  0008E4  EF76  F004         	goto	u1631
   861  0008E8  EF78  F004         	goto	u1630
   862  0008EC                     u1631:
   863  0008EC  EFF1  F004         	goto	l2289
   864  0008F0                     u1630:
   865  0008F0                     
   866                           ; BSR set to: 0
   867                           ;RTC.c: 94:             if(hour & (1<<AM_PM)){
   868  0008F0  C0BC  F072         	movff	main@AM_PM,??_main
   869  0008F4  0E01               	movlw	1
   870  0008F6  6F73               	movwf	(??_main+1)& (0+255),b
   871  0008F8  0E00               	movlw	0
   872  0008FA  6F74               	movwf	(??_main+2)& (0+255),b
   873  0008FC  2B72               	incf	??_main& (0+255),f,b
   874  0008FE  EF84  F004         	goto	u1644
   875  000902                     u1645:
   876  000902  90D8               	bcf	status,0,c
   877  000904  3773               	rlcf	(??_main+1)& (0+255),f,b
   878  000906  3774               	rlcf	(??_main+2)& (0+255),f,b
   879  000908                     u1644:
   880  000908  2F72               	decfsz	??_main& (0+255),f,b
   881  00090A  EF81  F004         	goto	u1645
   882  00090E  0100               	movlb	0	; () banked
   883  000910  51D7               	movf	_hour& (0+255),w,b
   884  000912  1773               	andwf	(??_main+1)& (0+255),f,b
   885  000914  51D8               	movf	(_hour+1)& (0+255),w,b
   886  000916  1774               	andwf	(??_main+2)& (0+255),f,b
   887  000918  5173               	movf	(??_main+1)& (0+255),w,b
   888  00091A  1174               	iorwf	(??_main+2)& (0+255),w,b
   889  00091C  B4D8               	btfsc	status,2,c
   890  00091E  EF93  F004         	goto	u1651
   891  000922  EF95  F004         	goto	u1650
   892  000926                     u1651:
   893  000926  EFA0  F004         	goto	l2273
   894  00092A                     u1650:
   895  00092A                     
   896                           ; BSR set to: 0
   897                           ;RTC.c: 95:                 LCD_String_xy(1,14,"PM");
   898  00092A  0E0E               	movlw	14
   899  00092C  6E0B               	movwf	LCD_String_xy@pos^0,c
   900  00092E  0E37               	movlw	low STR_1
   901  000930  6E0C               	movwf	LCD_String_xy@msg^0,c
   902  000932  0E08               	movlw	high STR_1
   903  000934  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   904  000936  0E01               	movlw	1
   905  000938  EC30  F00C         	call	_LCD_String_xy
   906                           
   907                           ;RTC.c: 96:             }
   908  00093C  EFA9  F004         	goto	l2275
   909  000940                     l2273:
   910                           
   911                           ; BSR set to: 0
   912                           ;RTC.c: 98:                 LCD_String_xy(1,14,"AM");
   913  000940  0E0E               	movlw	14
   914  000942  6E0B               	movwf	LCD_String_xy@pos^0,c
   915  000944  0E34               	movlw	low STR_2
   916  000946  6E0C               	movwf	LCD_String_xy@msg^0,c
   917  000948  0E08               	movlw	high STR_2
   918  00094A  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   919  00094C  0E01               	movlw	1
   920  00094E  EC30  F00C         	call	_LCD_String_xy
   921  000952                     l2275:
   922                           
   923                           ;RTC.c: 101:             hour = hour & (0x1f);
   924  000952  0E1F               	movlw	31
   925  000954  0100               	movlb	0	; () banked
   926  000956  15D7               	andwf	_hour& (0+255),w,b
   927  000958  6FD7               	movwf	_hour& (0+255),b
   928  00095A  6BD8               	clrf	(_hour+1)& (0+255),b
   929  00095C                     
   930                           ; BSR set to: 0
   931                           ;RTC.c: 102:             sprintf(secs,"%x ",sec);
   932  00095C  0E89               	movlw	low main@secs
   933  00095E  6F60               	movwf	sprintf@s& (0+255),b
   934  000960  0E00               	movlw	high main@secs
   935  000962  6F61               	movwf	(sprintf@s+1)& (0+255),b
   936  000964  0E2C               	movlw	low STR_3
   937  000966  6F62               	movwf	sprintf@fmt& (0+255),b
   938  000968  0E08               	movlw	high STR_3
   939  00096A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   940  00096C  C0DB  F064         	movff	_sec,?_sprintf+4
   941  000970  C0DC  F065         	movff	_sec+1,?_sprintf+5
   942  000974  EC30  F00B         	call	_sprintf	;wreg free
   943  000978                     
   944                           ;RTC.c: 103:             sprintf(mins,"%x:",min);
   945  000978  0E93               	movlw	low main@mins
   946  00097A  0100               	movlb	0	; () banked
   947  00097C  6F60               	movwf	sprintf@s& (0+255),b
   948  00097E  0E00               	movlw	high main@mins
   949  000980  6F61               	movwf	(sprintf@s+1)& (0+255),b
   950  000982  0E28               	movlw	low (STR_5+4)
   951  000984  6F62               	movwf	sprintf@fmt& (0+255),b
   952  000986  0E08               	movlw	high (STR_5+4)
   953  000988  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   954  00098A  C0D9  F064         	movff	_min,?_sprintf+4
   955  00098E  C0DA  F065         	movff	_min+1,?_sprintf+5
   956  000992  EC30  F00B         	call	_sprintf	;wreg free
   957  000996                     
   958                           ;RTC.c: 104:             sprintf(hours,"Tim:%x:",hour);
   959  000996  0E9D               	movlw	low main@hours
   960  000998  0100               	movlb	0	; () banked
   961  00099A  6F60               	movwf	sprintf@s& (0+255),b
   962  00099C  0E00               	movlw	high main@hours
   963  00099E  6F61               	movwf	(sprintf@s+1)& (0+255),b
   964  0009A0  0E24               	movlw	low STR_5
   965  0009A2  6F62               	movwf	sprintf@fmt& (0+255),b
   966  0009A4  0E08               	movlw	high STR_5
   967  0009A6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   968  0009A8  C0D7  F064         	movff	_hour,?_sprintf+4
   969  0009AC  C0D8  F065         	movff	_hour+1,?_sprintf+5
   970  0009B0  EC30  F00B         	call	_sprintf	;wreg free
   971  0009B4                     
   972                           ;RTC.c: 105:             LCD_String_xy(0,0,hours);
   973  0009B4  0E00               	movlw	0
   974  0009B6  6E0B               	movwf	LCD_String_xy@pos^0,c
   975  0009B8  0E9D               	movlw	low main@hours
   976  0009BA  6E0C               	movwf	LCD_String_xy@msg^0,c
   977  0009BC  0E00               	movlw	high main@hours
   978  0009BE  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   979  0009C0  0E00               	movlw	0
   980  0009C2  EC30  F00C         	call	_LCD_String_xy
   981  0009C6                     l2285:
   982                           
   983                           ;RTC.c: 106:             LCD_String(mins);
   984  0009C6  0E93               	movlw	low main@mins
   985  0009C8  6E09               	movwf	LCD_String@msg^0,c
   986  0009CA  0E00               	movlw	high main@mins
   987  0009CC  6E0A               	movwf	(LCD_String@msg+1)^0,c
   988  0009CE  ECD5  F00A         	call	_LCD_String	;wreg free
   989  0009D2                     
   990                           ;RTC.c: 107:             LCD_String(secs);
   991  0009D2  0E89               	movlw	low main@secs
   992  0009D4  6E09               	movwf	LCD_String@msg^0,c
   993  0009D6  0E00               	movlw	high main@secs
   994  0009D8  6E0A               	movwf	(LCD_String@msg+1)^0,c
   995  0009DA  ECD5  F00A         	call	_LCD_String	;wreg free
   996                           
   997                           ;RTC.c: 108:         }
   998  0009DE  EF2C  F005         	goto	l2303
   999  0009E2                     l2289:
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;RTC.c: 111:             hour = hour & (0x3f);
  1003  0009E2  0E3F               	movlw	63
  1004  0009E4  15D7               	andwf	_hour& (0+255),w,b
  1005  0009E6  6FD7               	movwf	_hour& (0+255),b
  1006  0009E8  6BD8               	clrf	(_hour+1)& (0+255),b
  1007  0009EA                     
  1008                           ; BSR set to: 0
  1009                           ;RTC.c: 112:             sprintf(secs,"%x ",sec);
  1010  0009EA  0E89               	movlw	low main@secs
  1011  0009EC  6F60               	movwf	sprintf@s& (0+255),b
  1012  0009EE  0E00               	movlw	high main@secs
  1013  0009F0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1014  0009F2  0E2C               	movlw	low STR_3
  1015  0009F4  6F62               	movwf	sprintf@fmt& (0+255),b
  1016  0009F6  0E08               	movlw	high STR_3
  1017  0009F8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1018  0009FA  C0DB  F064         	movff	_sec,?_sprintf+4
  1019  0009FE  C0DC  F065         	movff	_sec+1,?_sprintf+5
  1020  000A02  EC30  F00B         	call	_sprintf	;wreg free
  1021  000A06                     
  1022                           ;RTC.c: 113:             sprintf(mins,"%x:",min);
  1023  000A06  0E93               	movlw	low main@mins
  1024  000A08  0100               	movlb	0	; () banked
  1025  000A0A  6F60               	movwf	sprintf@s& (0+255),b
  1026  000A0C  0E00               	movlw	high main@mins
  1027  000A0E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1028  000A10  0E28               	movlw	low (STR_5+4)
  1029  000A12  6F62               	movwf	sprintf@fmt& (0+255),b
  1030  000A14  0E08               	movlw	high (STR_5+4)
  1031  000A16  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1032  000A18  C0D9  F064         	movff	_min,?_sprintf+4
  1033  000A1C  C0DA  F065         	movff	_min+1,?_sprintf+5
  1034  000A20  EC30  F00B         	call	_sprintf	;wreg free
  1035  000A24                     
  1036                           ;RTC.c: 114:             sprintf(hours,"Tim:%x:",hour);
  1037  000A24  0E9D               	movlw	low main@hours
  1038  000A26  0100               	movlb	0	; () banked
  1039  000A28  6F60               	movwf	sprintf@s& (0+255),b
  1040  000A2A  0E00               	movlw	high main@hours
  1041  000A2C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1042  000A2E  0E24               	movlw	low STR_5
  1043  000A30  6F62               	movwf	sprintf@fmt& (0+255),b
  1044  000A32  0E08               	movlw	high STR_5
  1045  000A34  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1046  000A36  C0D7  F064         	movff	_hour,?_sprintf+4
  1047  000A3A  C0D8  F065         	movff	_hour+1,?_sprintf+5
  1048  000A3E  EC30  F00B         	call	_sprintf	;wreg free
  1049  000A42                     
  1050                           ;RTC.c: 115:             LCD_String_xy(0,0,hours);
  1051  000A42  0E00               	movlw	0
  1052  000A44  6E0B               	movwf	LCD_String_xy@pos^0,c
  1053  000A46  0E9D               	movlw	low main@hours
  1054  000A48  6E0C               	movwf	LCD_String_xy@msg^0,c
  1055  000A4A  0E00               	movlw	high main@hours
  1056  000A4C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1057  000A4E  0E00               	movlw	0
  1058  000A50  EC30  F00C         	call	_LCD_String_xy
  1059  000A54  EFE3  F004         	goto	l2285
  1060  000A58                     l2303:
  1061                           
  1062                           ;RTC.c: 119:         alarma=0;
  1063  000A58  0E00               	movlw	0
  1064  000A5A  0100               	movlb	0	; () banked
  1065  000A5C  6FCE               	movwf	(_alarma+1)& (0+255),b
  1066  000A5E  0E00               	movlw	0
  1067  000A60  6FCD               	movwf	_alarma& (0+255),b
  1068  000A62                     l2305:
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;RTC.c: 122:         MSdelay(1000);
  1072  000A62  0E03               	movlw	3
  1073  000A64  6E02               	movwf	(MSdelay@val+1)^0,c
  1074  000A66  0EE8               	movlw	232
  1075  000A68  6E01               	movwf	MSdelay@val^0,c
  1076  000A6A  ECA5  F00B         	call	_MSdelay	;wreg free
  1077  000A6E                     
  1078                           ;RTC.c: 124:         if (!alarma) {
  1079  000A6E  0100               	movlb	0	; () banked
  1080  000A70  51CD               	movf	_alarma& (0+255),w,b
  1081  000A72  11CE               	iorwf	(_alarma+1)& (0+255),w,b
  1082  000A74  A4D8               	btfss	status,2,c
  1083  000A76  EF3F  F005         	goto	u1661
  1084  000A7A  EF41  F005         	goto	u1660
  1085  000A7E                     u1661:
  1086  000A7E  EF4C  F004         	goto	l2261
  1087  000A82                     u1660:
  1088  000A82                     
  1089                           ; BSR set to: 0
  1090                           ;RTC.c: 126:             if (!PORTBbits.RB7) {
  1091  000A82  BE81               	btfsc	129,7,c	;volatile
  1092  000A84  EF46  F005         	goto	u1671
  1093  000A88  EF48  F005         	goto	u1670
  1094  000A8C                     u1671:
  1095  000A8C  EF59  F005         	goto	l2319
  1096  000A90                     u1670:
  1097  000A90                     
  1098                           ; BSR set to: 0
  1099                           ;RTC.c: 127:                 MSdelay(50);
  1100  000A90  0E00               	movlw	0
  1101  000A92  6E02               	movwf	(MSdelay@val+1)^0,c
  1102  000A94  0E32               	movlw	50
  1103  000A96  6E01               	movwf	MSdelay@val^0,c
  1104  000A98  ECA5  F00B         	call	_MSdelay	;wreg free
  1105  000A9C                     
  1106                           ;RTC.c: 128:                 counter_min = 0;
  1107  000A9C  0E00               	movlw	0
  1108  000A9E  0100               	movlb	0	; () banked
  1109  000AA0  6FCA               	movwf	(_counter_min+1)& (0+255),b
  1110  000AA2  0E00               	movlw	0
  1111  000AA4  6FC9               	movwf	_counter_min& (0+255),b
  1112  000AA6                     
  1113                           ; BSR set to: 0
  1114                           ;RTC.c: 129:                 counter_sec = 0;
  1115  000AA6  0E00               	movlw	0
  1116  000AA8  6FCC               	movwf	(_counter_sec+1)& (0+255),b
  1117  000AAA  0E00               	movlw	0
  1118  000AAC  6FCB               	movwf	_counter_sec& (0+255),b
  1119  000AAE                     
  1120                           ; BSR set to: 0
  1121                           ;RTC.c: 130:                 count_pomo_fail++;
  1122  000AAE  4BC3               	infsnz	_count_pomo_fail& (0+255),f,b
  1123  000AB0  2BC4               	incf	(_count_pomo_fail+1)& (0+255),f,b
  1124  000AB2                     l2319:
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;RTC.c: 133:             if (run) {
  1128  000AB2  51C7               	movf	_run& (0+255),w,b
  1129  000AB4  11C8               	iorwf	(_run+1)& (0+255),w,b
  1130  000AB6  B4D8               	btfsc	status,2,c
  1131  000AB8  EF60  F005         	goto	u1681
  1132  000ABC  EF62  F005         	goto	u1680
  1133  000AC0                     u1681:
  1134  000AC0  EF65  F005         	goto	l86
  1135  000AC4                     u1680:
  1136  000AC4                     
  1137                           ; BSR set to: 0
  1138                           ;RTC.c: 134:                 LATDbits.LATD0 = 1;
  1139  000AC4  808C               	bsf	140,0,c	;volatile
  1140                           
  1141                           ;RTC.c: 135:             } else {
  1142  000AC6  EF66  F005         	goto	l2323
  1143  000ACA                     l86:
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;RTC.c: 136:                 LATDbits.LATD1 = 1;
  1147  000ACA  828C               	bsf	140,1,c	;volatile
  1148  000ACC                     l2323:
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;RTC.c: 139:             int aux = Bcd2Dec(sec);
  1152  000ACC  C0DB  F007         	movff	_sec,Bcd2Dec@bcd
  1153  000AD0  C0DC  F008         	movff	_sec+1,Bcd2Dec@bcd+1
  1154  000AD4  EC0F  F00C         	call	_Bcd2Dec	;wreg free
  1155  000AD8  C007  F0B1         	movff	?_Bcd2Dec,main@aux
  1156  000ADC  C008  F0B2         	movff	?_Bcd2Dec+1,main@aux+1
  1157  000AE0                     
  1158                           ;RTC.c: 140:             RTC_Read_Clock(0);
  1159  000AE0  0E00               	movlw	0
  1160  000AE2  ECCA  F00B         	call	_RTC_Read_Clock
  1161  000AE6                     
  1162                           ;RTC.c: 141:             I2C_Stop();
  1163  000AE6  EC80  F00D         	call	_I2C_Stop	;wreg free
  1164  000AEA                     
  1165                           ;RTC.c: 142:             if (aux < Bcd2Dec(sec)) {
  1166  000AEA  C0DB  F007         	movff	_sec,Bcd2Dec@bcd
  1167  000AEE  C0DC  F008         	movff	_sec+1,Bcd2Dec@bcd+1
  1168  000AF2  EC0F  F00C         	call	_Bcd2Dec	;wreg free
  1169  000AF6  5007               	movf	?_Bcd2Dec^0,w,c
  1170  000AF8  0100               	movlb	0	; () banked
  1171  000AFA  5DB1               	subwf	main@aux& (0+255),w,b
  1172  000AFC  51B2               	movf	(main@aux+1)& (0+255),w,b
  1173  000AFE  0A80               	xorlw	128
  1174  000B00  6F72               	movwf	??_main& (0+255),b
  1175  000B02  5008               	movf	(?_Bcd2Dec+1)^0,w,c
  1176  000B04  0A80               	xorlw	128
  1177  000B06  5972               	subwfb	??_main& (0+255),w,b
  1178  000B08  B0D8               	btfsc	status,0,c
  1179  000B0A  EF89  F005         	goto	u1691
  1180  000B0E  EF8B  F005         	goto	u1690
  1181  000B12                     u1691:
  1182  000B12  EF9A  F006         	goto	l2401
  1183  000B16                     u1690:
  1184  000B16                     
  1185                           ; BSR set to: 0
  1186                           ;RTC.c: 143:                 if(counter_sec >= 59) {
  1187  000B16  BFCC               	btfsc	(_counter_sec+1)& (0+255),7,b
  1188  000B18  EF97  F005         	goto	u1701
  1189  000B1C  51CC               	movf	(_counter_sec+1)& (0+255),w,b
  1190  000B1E  E109               	bnz	u1700
  1191  000B20  0E3B               	movlw	59
  1192  000B22  5DCB               	subwf	_counter_sec& (0+255),w,b
  1193  000B24  A0D8               	btfss	status,0,c
  1194  000B26  EF97  F005         	goto	u1701
  1195  000B2A  EF99  F005         	goto	u1700
  1196  000B2E                     u1701:
  1197  000B2E  EFAE  F005         	goto	l2339
  1198  000B32                     u1700:
  1199  000B32                     
  1200                           ; BSR set to: 0
  1201                           ;RTC.c: 144:                     counter_sec = (counter_sec % 59) - 1;
  1202  000B32  C0CB  F001         	movff	_counter_sec,___awmod@dividend
  1203  000B36  C0CC  F002         	movff	_counter_sec+1,___awmod@dividend+1
  1204  000B3A  0E00               	movlw	0
  1205  000B3C  6E04               	movwf	(___awmod@divisor+1)^0,c
  1206  000B3E  0E3B               	movlw	59
  1207  000B40  6E03               	movwf	___awmod@divisor^0,c
  1208  000B42  EC1D  F00A         	call	___awmod	;wreg free
  1209  000B46  0EFF               	movlw	255
  1210  000B48  2401               	addwf	?___awmod^0,w,c
  1211  000B4A  0100               	movlb	0	; () banked
  1212  000B4C  6FCB               	movwf	_counter_sec& (0+255),b
  1213  000B4E  0EFF               	movlw	255
  1214  000B50  2002               	addwfc	(?___awmod+1)^0,w,c
  1215  000B52  6FCC               	movwf	(_counter_sec+1)& (0+255),b
  1216  000B54                     
  1217                           ; BSR set to: 0
  1218                           ;RTC.c: 145:                     counter_min++;
  1219  000B54  4BC9               	infsnz	_counter_min& (0+255),f,b
  1220  000B56  2BCA               	incf	(_counter_min+1)& (0+255),f,b
  1221  000B58                     
  1222                           ; BSR set to: 0
  1223                           ;RTC.c: 146:                     LCD_Clear();
  1224  000B58  EC76  F00D         	call	_LCD_Clear	;wreg free
  1225  000B5C                     l2339:
  1226                           
  1227                           ;RTC.c: 148:                 if(run) {
  1228  000B5C  0100               	movlb	0	; () banked
  1229  000B5E  51C7               	movf	_run& (0+255),w,b
  1230  000B60  11C8               	iorwf	(_run+1)& (0+255),w,b
  1231  000B62  B4D8               	btfsc	status,2,c
  1232  000B64  EFB6  F005         	goto	u1711
  1233  000B68  EFB8  F005         	goto	u1710
  1234  000B6C                     u1711:
  1235  000B6C  EFCE  F005         	goto	l2349
  1236  000B70                     u1710:
  1237  000B70                     
  1238                           ; BSR set to: 0
  1239                           ;RTC.c: 149:                     if (counter_sec == 5) {
  1240  000B70  0E05               	movlw	5
  1241  000B72  19CB               	xorwf	_counter_sec& (0+255),w,b
  1242  000B74  11CC               	iorwf	(_counter_sec+1)& (0+255),w,b
  1243  000B76  A4D8               	btfss	status,2,c
  1244  000B78  EFC0  F005         	goto	u1721
  1245  000B7C  EFC2  F005         	goto	u1720
  1246  000B80                     u1721:
  1247  000B80  EFE4  F005         	goto	l2359
  1248  000B84                     u1720:
  1249  000B84                     
  1250                           ; BSR set to: 0
  1251                           ;RTC.c: 150:                         counter_sec = 0;
  1252  000B84  0E00               	movlw	0
  1253  000B86  6FCC               	movwf	(_counter_sec+1)& (0+255),b
  1254  000B88  0E00               	movlw	0
  1255  000B8A  6FCB               	movwf	_counter_sec& (0+255),b
  1256                           
  1257                           ;RTC.c: 151:                         run = 0;
  1258  000B8C  0E00               	movlw	0
  1259  000B8E  6FC8               	movwf	(_run+1)& (0+255),b
  1260  000B90  0E00               	movlw	0
  1261  000B92  6FC7               	movwf	_run& (0+255),b
  1262  000B94                     
  1263                           ; BSR set to: 0
  1264                           ;RTC.c: 152:                         LATDbits.LATD0 = 0;
  1265  000B94  908C               	bcf	140,0,c	;volatile
  1266  000B96                     
  1267                           ; BSR set to: 0
  1268                           ;RTC.c: 153:                         LATDbits.LATD1 = 1;
  1269  000B96  828C               	bsf	140,1,c	;volatile
  1270  000B98  EFE4  F005         	goto	l2359
  1271  000B9C                     l2349:
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;RTC.c: 156:                     if (counter_sec == 3) {
  1275  000B9C  0E03               	movlw	3
  1276  000B9E  19CB               	xorwf	_counter_sec& (0+255),w,b
  1277  000BA0  11CC               	iorwf	(_counter_sec+1)& (0+255),w,b
  1278  000BA2  A4D8               	btfss	status,2,c
  1279  000BA4  EFD6  F005         	goto	u1731
  1280  000BA8  EFD8  F005         	goto	u1730
  1281  000BAC                     u1731:
  1282  000BAC  EFE4  F005         	goto	l2359
  1283  000BB0                     u1730:
  1284  000BB0                     
  1285                           ; BSR set to: 0
  1286                           ;RTC.c: 157:                         counter_sec = 0;
  1287  000BB0  0E00               	movlw	0
  1288  000BB2  6FCC               	movwf	(_counter_sec+1)& (0+255),b
  1289  000BB4  0E00               	movlw	0
  1290  000BB6  6FCB               	movwf	_counter_sec& (0+255),b
  1291                           
  1292                           ;RTC.c: 158:                         run = 1;
  1293  000BB8  0E00               	movlw	0
  1294  000BBA  6FC8               	movwf	(_run+1)& (0+255),b
  1295  000BBC  0E01               	movlw	1
  1296  000BBE  6FC7               	movwf	_run& (0+255),b
  1297  000BC0                     
  1298                           ; BSR set to: 0
  1299                           ;RTC.c: 159:                         LATDbits.LATD1 = 0;
  1300  000BC0  928C               	bcf	140,1,c	;volatile
  1301  000BC2                     
  1302                           ; BSR set to: 0
  1303                           ;RTC.c: 160:                         LATDbits.LATD0 = 1;
  1304  000BC2  808C               	bsf	140,0,c	;volatile
  1305  000BC4                     
  1306                           ; BSR set to: 0
  1307                           ;RTC.c: 161:                         count_pomo++;
  1308  000BC4  4BC5               	infsnz	_count_pomo& (0+255),f,b
  1309  000BC6  2BC6               	incf	(_count_pomo+1)& (0+255),f,b
  1310  000BC8                     l2359:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;RTC.c: 164:                 if (counter_sec == 0 && run == 0) {
  1314  000BC8  51CB               	movf	_counter_sec& (0+255),w,b
  1315  000BCA  11CC               	iorwf	(_counter_sec+1)& (0+255),w,b
  1316  000BCC  A4D8               	btfss	status,2,c
  1317  000BCE  EFEB  F005         	goto	u1741
  1318  000BD2  EFED  F005         	goto	u1740
  1319  000BD6                     u1741:
  1320  000BD6  EF29  F006         	goto	l2379
  1321  000BDA                     u1740:
  1322  000BDA                     
  1323                           ; BSR set to: 0
  1324  000BDA  51C7               	movf	_run& (0+255),w,b
  1325  000BDC  11C8               	iorwf	(_run+1)& (0+255),w,b
  1326  000BDE  A4D8               	btfss	status,2,c
  1327  000BE0  EFF4  F005         	goto	u1751
  1328  000BE4  EFF6  F005         	goto	u1750
  1329  000BE8                     u1751:
  1330  000BE8  EF29  F006         	goto	l2379
  1331  000BEC                     u1750:
  1332  000BEC                     
  1333                           ; BSR set to: 0
  1334                           ;RTC.c: 165:                     LCD_Clear();
  1335  000BEC  EC76  F00D         	call	_LCD_Clear	;wreg free
  1336  000BF0                     
  1337                           ;RTC.c: 166:                     sprintf(counters_min, "----Descanso---");
  1338  000BF0  0EA7               	movlw	low main@counters_min
  1339  000BF2  0100               	movlb	0	; () banked
  1340  000BF4  6F60               	movwf	sprintf@s& (0+255),b
  1341  000BF6  0E00               	movlw	high main@counters_min
  1342  000BF8  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1343  000BFA  0E01               	movlw	low STR_9
  1344  000BFC  6F62               	movwf	sprintf@fmt& (0+255),b
  1345  000BFE  0E08               	movlw	high STR_9
  1346  000C00  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1347  000C02  EC30  F00B         	call	_sprintf	;wreg free
  1348  000C06                     
  1349                           ;RTC.c: 167:                     LCD_String_xy(0, 0, counters_min);
  1350  000C06  0E00               	movlw	0
  1351  000C08  6E0B               	movwf	LCD_String_xy@pos^0,c
  1352  000C0A  0EA7               	movlw	low main@counters_min
  1353  000C0C  6E0C               	movwf	LCD_String_xy@msg^0,c
  1354  000C0E  0E00               	movlw	high main@counters_min
  1355  000C10  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1356  000C12  0E00               	movlw	0
  1357  000C14  EC30  F00C         	call	_LCD_String_xy
  1358  000C18                     
  1359                           ;RTC.c: 168:                     MSdelay(1000);
  1360  000C18  0E03               	movlw	3
  1361  000C1A  6E02               	movwf	(MSdelay@val+1)^0,c
  1362  000C1C  0EE8               	movlw	232
  1363  000C1E  6E01               	movwf	MSdelay@val^0,c
  1364  000C20  ECA5  F00B         	call	_MSdelay	;wreg free
  1365  000C24                     
  1366                           ;RTC.c: 169:                     LCD_Clear();
  1367  000C24  EC76  F00D         	call	_LCD_Clear	;wreg free
  1368  000C28                     
  1369                           ;RTC.c: 170:                     MSdelay(1000);
  1370  000C28  0E03               	movlw	3
  1371  000C2A  6E02               	movwf	(MSdelay@val+1)^0,c
  1372  000C2C  0EE8               	movlw	232
  1373  000C2E  6E01               	movwf	MSdelay@val^0,c
  1374  000C30  ECA5  F00B         	call	_MSdelay	;wreg free
  1375  000C34                     
  1376                           ;RTC.c: 171:                     LCD_String_xy(0, 0, counters_min);
  1377  000C34  0E00               	movlw	0
  1378  000C36  6E0B               	movwf	LCD_String_xy@pos^0,c
  1379  000C38  0EA7               	movlw	low main@counters_min
  1380  000C3A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1381  000C3C  0E00               	movlw	high main@counters_min
  1382  000C3E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1383  000C40  0E00               	movlw	0
  1384  000C42  EC30  F00C         	call	_LCD_String_xy
  1385  000C46                     
  1386                           ;RTC.c: 172:                     MSdelay(1000);
  1387  000C46  0E03               	movlw	3
  1388  000C48  6E02               	movwf	(MSdelay@val+1)^0,c
  1389  000C4A  0EE8               	movlw	232
  1390  000C4C  6E01               	movwf	MSdelay@val^0,c
  1391  000C4E  ECA5  F00B         	call	_MSdelay	;wreg free
  1392  000C52                     l2379:
  1393                           
  1394                           ;RTC.c: 175:                 int print_sec = Dec2Bcd(counter_sec++);
  1395  000C52  C0CB  F009         	movff	_counter_sec,Dec2Bcd@dec
  1396  000C56  C0CC  F00A         	movff	_counter_sec+1,Dec2Bcd@dec+1
  1397  000C5A  EC04  F00B         	call	_Dec2Bcd	;wreg free
  1398  000C5E  C009  F0B3         	movff	?_Dec2Bcd,main@print_sec
  1399  000C62  C00A  F0B4         	movff	?_Dec2Bcd+1,main@print_sec+1
  1400  000C66  0100               	movlb	0	; () banked
  1401  000C68  4BCB               	infsnz	_counter_sec& (0+255),f,b
  1402  000C6A  2BCC               	incf	(_counter_sec+1)& (0+255),f,b
  1403  000C6C                     
  1404                           ; BSR set to: 0
  1405                           ;RTC.c: 176:                 int print_min = Dec2Bcd(counter_min);
  1406  000C6C  C0C9  F009         	movff	_counter_min,Dec2Bcd@dec
  1407  000C70  C0CA  F00A         	movff	_counter_min+1,Dec2Bcd@dec+1
  1408  000C74  EC04  F00B         	call	_Dec2Bcd	;wreg free
  1409  000C78  C009  F0B5         	movff	?_Dec2Bcd,main@print_min
  1410  000C7C  C00A  F0B6         	movff	?_Dec2Bcd+1,main@print_min+1
  1411  000C80                     
  1412                           ;RTC.c: 177:                 int print_pomo = Dec2Bcd(count_pomo);
  1413  000C80  C0C5  F009         	movff	_count_pomo,Dec2Bcd@dec
  1414  000C84  C0C6  F00A         	movff	_count_pomo+1,Dec2Bcd@dec+1
  1415  000C88  EC04  F00B         	call	_Dec2Bcd	;wreg free
  1416  000C8C  C009  F0B7         	movff	?_Dec2Bcd,main@print_pomo
  1417  000C90  C00A  F0B8         	movff	?_Dec2Bcd+1,main@print_pomo+1
  1418  000C94                     
  1419                           ;RTC.c: 178:                 int print_fail = Dec2Bcd(count_pomo_fail);
  1420  000C94  C0C3  F009         	movff	_count_pomo_fail,Dec2Bcd@dec
  1421  000C98  C0C4  F00A         	movff	_count_pomo_fail+1,Dec2Bcd@dec+1
  1422  000C9C  EC04  F00B         	call	_Dec2Bcd	;wreg free
  1423  000CA0  C009  F0B9         	movff	?_Dec2Bcd,main@print_fail
  1424  000CA4  C00A  F0BA         	movff	?_Dec2Bcd+1,main@print_fail+1
  1425  000CA8                     
  1426                           ;RTC.c: 180:                 sprintf(counters_min,"Tempom:%x",print_min);
  1427  000CA8  0EA7               	movlw	low main@counters_min
  1428  000CAA  0100               	movlb	0	; () banked
  1429  000CAC  6F60               	movwf	sprintf@s& (0+255),b
  1430  000CAE  0E00               	movlw	high main@counters_min
  1431  000CB0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1432  000CB2  0E11               	movlw	low STR_10
  1433  000CB4  6F62               	movwf	sprintf@fmt& (0+255),b
  1434  000CB6  0E08               	movlw	high STR_10
  1435  000CB8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1436  000CBA  C0B5  F064         	movff	main@print_min,?_sprintf+4
  1437  000CBE  C0B6  F065         	movff	main@print_min+1,?_sprintf+5
  1438  000CC2  EC30  F00B         	call	_sprintf	;wreg free
  1439  000CC6                     
  1440                           ;RTC.c: 181:                 sprintf(counters_sec,"-%x",print_sec);
  1441  000CC6  0E75               	movlw	low main@counters_sec
  1442  000CC8  0100               	movlb	0	; () banked
  1443  000CCA  6F60               	movwf	sprintf@s& (0+255),b
  1444  000CCC  0E00               	movlw	high main@counters_sec
  1445  000CCE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1446  000CD0  0E30               	movlw	low STR_11
  1447  000CD2  6F62               	movwf	sprintf@fmt& (0+255),b
  1448  000CD4  0E08               	movlw	high STR_11
  1449  000CD6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1450  000CD8  C0B3  F064         	movff	main@print_sec,?_sprintf+4
  1451  000CDC  C0B4  F065         	movff	main@print_sec+1,?_sprintf+5
  1452  000CE0  EC30  F00B         	call	_sprintf	;wreg free
  1453  000CE4                     
  1454                           ;RTC.c: 182:                 sprintf(counters_pomos," E%x F%x", print_pomo, print_fail);
  1455  000CE4  0E7F               	movlw	low main@counters_pomos
  1456  000CE6  0100               	movlb	0	; () banked
  1457  000CE8  6F60               	movwf	sprintf@s& (0+255),b
  1458  000CEA  0E00               	movlw	high main@counters_pomos
  1459  000CEC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1460  000CEE  0E1B               	movlw	low STR_12
  1461  000CF0  6F62               	movwf	sprintf@fmt& (0+255),b
  1462  000CF2  0E08               	movlw	high STR_12
  1463  000CF4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1464  000CF6  C0B7  F064         	movff	main@print_pomo,?_sprintf+4
  1465  000CFA  C0B8  F065         	movff	main@print_pomo+1,?_sprintf+5
  1466  000CFE  C0B9  F066         	movff	main@print_fail,?_sprintf+6
  1467  000D02  C0BA  F067         	movff	main@print_fail+1,?_sprintf+7
  1468  000D06  EC30  F00B         	call	_sprintf	;wreg free
  1469  000D0A                     
  1470                           ;RTC.c: 183:                 LCD_String_xy(2,0,counters_min);
  1471  000D0A  0E00               	movlw	0
  1472  000D0C  6E0B               	movwf	LCD_String_xy@pos^0,c
  1473  000D0E  0EA7               	movlw	low main@counters_min
  1474  000D10  6E0C               	movwf	LCD_String_xy@msg^0,c
  1475  000D12  0E00               	movlw	high main@counters_min
  1476  000D14  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1477  000D16  0E02               	movlw	2
  1478  000D18  EC30  F00C         	call	_LCD_String_xy
  1479  000D1C                     
  1480                           ;RTC.c: 184:                 LCD_String(counters_sec);
  1481  000D1C  0E75               	movlw	low main@counters_sec
  1482  000D1E  6E09               	movwf	LCD_String@msg^0,c
  1483  000D20  0E00               	movlw	high main@counters_sec
  1484  000D22  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1485  000D24  ECD5  F00A         	call	_LCD_String	;wreg free
  1486  000D28                     
  1487                           ;RTC.c: 185:                 LCD_String(counters_pomos);
  1488  000D28  0E7F               	movlw	low main@counters_pomos
  1489  000D2A  6E09               	movwf	LCD_String@msg^0,c
  1490  000D2C  0E00               	movlw	high main@counters_pomos
  1491  000D2E  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1492  000D30  ECD5  F00A         	call	_LCD_String	;wreg free
  1493  000D34                     l2401:
  1494                           
  1495                           ;RTC.c: 187:             alarma=1;
  1496  000D34  0E00               	movlw	0
  1497  000D36  0100               	movlb	0	; () banked
  1498  000D38  6FCE               	movwf	(_alarma+1)& (0+255),b
  1499  000D3A  0E01               	movlw	1
  1500  000D3C  6FCD               	movwf	_alarma& (0+255),b
  1501  000D3E  EF4C  F004         	goto	l2261
  1502  000D42  EF00  F000         	goto	start
  1503  000D46                     __end_of_main:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _sprintf *****************
  1507 ;; Defined at:
  1508 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1511 ;;		 -> main@counters_pomos(10), main@counters_sec(10), main@counters_min(10), main@hours(10), 
  1512 ;;		 -> main@mins(10), main@secs(10), 
  1513 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1514 ;;		 -> STR_12(9), STR_11(4), STR_10(10), STR_9(16), 
  1515 ;;		 -> STR_8(8), STR_7(4), STR_6(4), STR_5(8), 
  1516 ;;		 -> STR_4(4), STR_3(4), 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  f               6   12[BANK0 ] struct _IO_FILE
  1519 ;;  ap              2   10[BANK0 ] PTR void [1]
  1520 ;;		 -> ?_sprintf(2), 
  1521 ;;  ret             2    0        int 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2    0[BANK0 ] int 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1531 ;;      Params:         0       8       0       0       0       0       0       0       0
  1532 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1534 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1535 ;;Total ram usage:       18 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    7
  1538 ;; This function calls:
  1539 ;;		_vfprintf
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text1
  1546  001660                     __ptext1:
  1547                           	callstack 0
  1548  001660                     _sprintf:
  1549                           	callstack 23
  1550  001660  0E64               	movlw	low (?_sprintf+4)
  1551  001662  0100               	movlb	0	; () banked
  1552  001664  6F6A               	movwf	sprintf@ap& (0+255),b
  1553  001666  0E00               	movlw	high (?_sprintf+4)
  1554  001668  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1555  00166A  C060  F06C         	movff	sprintf@s,sprintf@f
  1556  00166E  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
  1557  001672                     
  1558                           ; BSR set to: 0
  1559  001672  0E00               	movlw	0
  1560  001674  6F6F               	movwf	(sprintf@f+3)& (0+255),b
  1561  001676  0E00               	movlw	0
  1562  001678  6F6E               	movwf	(sprintf@f+2)& (0+255),b
  1563  00167A                     
  1564                           ; BSR set to: 0
  1565  00167A  0E00               	movlw	0
  1566  00167C  6F71               	movwf	(sprintf@f+5)& (0+255),b
  1567  00167E  0E00               	movlw	0
  1568  001680  6F70               	movwf	(sprintf@f+4)& (0+255),b
  1569  001682                     
  1570                           ; BSR set to: 0
  1571  001682  0E6C               	movlw	low sprintf@f
  1572  001684  6E56               	movwf	vfprintf@fp^0,c
  1573  001686  0E00               	movlw	high sprintf@f
  1574  001688  6E57               	movwf	(vfprintf@fp+1)^0,c
  1575  00168A  C062  F058         	movff	sprintf@fmt,vfprintf@fmt
  1576  00168E  C063  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1577  001692  0E6A               	movlw	low sprintf@ap
  1578  001694  6E5A               	movwf	vfprintf@ap^0,c
  1579  001696  0E00               	movlw	high sprintf@ap
  1580  001698  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1581  00169A  EC75  F00A         	call	_vfprintf	;wreg free
  1582  00169E  0100               	movlb	0	; () banked
  1583  0016A0  516E               	movf	(sprintf@f+2)& (0+255),w,b
  1584  0016A2  2560               	addwf	sprintf@s& (0+255),w,b
  1585  0016A4  6ED9               	movwf	fsr2l,c
  1586  0016A6  516F               	movf	(sprintf@f+3)& (0+255),w,b
  1587  0016A8  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1588  0016AA  6EDA               	movwf	fsr2h,c
  1589  0016AC  0E00               	movlw	0
  1590  0016AE  6EDF               	movwf	indf2,c
  1591  0016B0                     
  1592                           ; BSR set to: 0
  1593  0016B0  0012               	return		;funcret
  1594  0016B2                     __end_of_sprintf:
  1595                           	callstack 0
  1596                           
  1597 ;; *************** function _vfprintf *****************
  1598 ;; Defined at:
  1599 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1602 ;;		 -> sprintf@f(6), 
  1603 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1604 ;;		 -> STR_12(9), STR_11(4), STR_10(10), STR_9(16), 
  1605 ;;		 -> STR_8(8), STR_7(4), STR_6(4), STR_5(8), 
  1606 ;;		 -> STR_4(4), STR_3(4), 
  1607 ;;  ap              2   89[COMRAM] PTR PTR void 
  1608 ;;		 -> sprintf@ap(2), 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1611 ;;		 -> STR_12(9), STR_11(4), STR_10(10), STR_9(16), 
  1612 ;;		 -> STR_8(8), STR_7(4), STR_6(4), STR_5(8), 
  1613 ;;		 -> STR_4(4), STR_3(4), 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  2   85[COMRAM] int 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1623 ;;      Params:         6       0       0       0       0       0       0       0       0
  1624 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1626 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1627 ;;Total ram usage:        8 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    6
  1630 ;; This function calls:
  1631 ;;		_vfpfcnvrt
  1632 ;; This function is called by:
  1633 ;;		_sprintf
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text2
  1638  0014EA                     __ptext2:
  1639                           	callstack 0
  1640  0014EA                     _vfprintf:
  1641                           	callstack 23
  1642  0014EA                     
  1643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1644  0014EA  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1645  0014EE  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1646  0014F2                     
  1647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1648  0014F2  0E00               	movlw	0
  1649  0014F4  0100               	movlb	0	; () banked
  1650  0014F6  6FBE               	movwf	(_nout+1)& (0+255),b
  1651  0014F8  0E00               	movlw	0
  1652  0014FA  6FBD               	movwf	_nout& (0+255),b
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1655  0014FC  EF93  F00A         	goto	l2145
  1656  001500                     l2143:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1660  001500  C056  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1661  001504  C057  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1662  001508  0E5C               	movlw	low vfprintf@cfmt
  1663  00150A  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1664  00150C  0E00               	movlw	high vfprintf@cfmt
  1665  00150E  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1666  001510  C05A  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1667  001514  C05B  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1668  001518  EC0D  F008         	call	_vfpfcnvrt	;wreg free
  1669  00151C  5043               	movf	?_vfpfcnvrt^0,w,c
  1670  00151E  0100               	movlb	0	; () banked
  1671  001520  27BD               	addwf	_nout& (0+255),f,b
  1672  001522  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1673  001524  23BE               	addwfc	(_nout+1)& (0+255),f,b
  1674  001526                     l2145:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1678  001526  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1679  00152A  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1680  00152E                     	if	0	;tblptru may be non-zero
  1681  00152E                     	endif
  1682  00152E                     	if	0	;tblptru may be non-zero
  1683  00152E                     	endif
  1684  00152E  0008               	tblrd		*
  1685  001530  50F5               	movf	tablat,w,c
  1686  001532  0900               	iorlw	0
  1687  001534  A4D8               	btfss	status,2,c
  1688  001536  EF9F  F00A         	goto	u1571
  1689  00153A  EFA1  F00A         	goto	u1570
  1690  00153E                     u1571:
  1691  00153E  EF80  F00A         	goto	l2143
  1692  001542                     u1570:
  1693  001542                     
  1694                           ; BSR set to: 0
  1695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1696  001542  C0BD  F056         	movff	_nout,?_vfprintf
  1697  001546  C0BE  F057         	movff	_nout+1,?_vfprintf+1
  1698  00154A                     
  1699                           ; BSR set to: 0
  1700  00154A  0012               	return		;funcret
  1701  00154C                     __end_of_vfprintf:
  1702                           	callstack 0
  1703                           
  1704 ;; *************** function _vfpfcnvrt *****************
  1705 ;; Defined at:
  1706 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1709 ;;		 -> sprintf@f(6), 
  1710 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1711 ;;		 -> vfprintf@cfmt(2), 
  1712 ;;  ap              2   70[COMRAM] PTR PTR void 
  1713 ;;		 -> sprintf@ap(2), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  llu             8   76[COMRAM] unsigned long long 
  1716 ;;  ll              8    0        long long 
  1717 ;;  f               4    0        long long 
  1718 ;;  vp              3    0        PTR void 
  1719 ;;  ct              3    0        unsigned char [3]
  1720 ;;  cp              3    0        PTR unsigned char 
  1721 ;;  i               2    0        int 
  1722 ;;  done            2    0        int 
  1723 ;;  c               1   84[COMRAM] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  2   66[COMRAM] int 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1733 ;;      Params:         6       0       0       0       0       0       0       0       0
  1734 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1735 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1736 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1737 ;;Total ram usage:       19 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    5
  1740 ;; This function calls:
  1741 ;;		_fputc
  1742 ;;		_xtoa
  1743 ;; This function is called by:
  1744 ;;		_vfprintf
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text3
  1749  00101A                     __ptext3:
  1750                           	callstack 0
  1751  00101A                     _vfpfcnvrt:
  1752                           	callstack 23
  1753  00101A                     
  1754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1755  00101A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1756  00101E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1757  001022  CFDE FFF6          	movff	postinc2,tblptrl
  1758  001026  CFDD FFF7          	movff	postdec2,tblptrh
  1759  00102A                     	if	0	;tblptru may be non-zero
  1760  00102A                     	endif
  1761  00102A                     	if	0	;tblptru may be non-zero
  1762  00102A                     	endif
  1763  00102A  0008               	tblrd		*
  1764  00102C  50F5               	movf	tablat,w,c
  1765  00102E  0A25               	xorlw	37
  1766  001030  A4D8               	btfss	status,2,c
  1767  001032  EF1D  F008         	goto	u1321
  1768  001036  EF1F  F008         	goto	u1320
  1769  00103A                     u1321:
  1770  00103A  EFD9  F008         	goto	l1985
  1771  00103E                     u1320:
  1772  00103E                     
  1773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1774  00103E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1775  001042  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1776  001046  2ADE               	incf	postinc2,f,c
  1777  001048  0E00               	movlw	0
  1778  00104A  22DD               	addwfc	postdec2,f,c
  1779  00104C                     
  1780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1781  00104C  0E00               	movlw	0
  1782  00104E  0100               	movlb	0	; () banked
  1783  001050  6FC0               	movwf	(_width+1)& (0+255),b
  1784  001052  0E00               	movlw	0
  1785  001054  6FBF               	movwf	_width& (0+255),b
  1786  001056  C0BF  F05E         	movff	_width,_flags
  1787  00105A  C0C0  F05F         	movff	_width+1,_flags+1
  1788  00105E                     
  1789                           ; BSR set to: 0
  1790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1791  00105E  69C1               	setf	_prec& (0+255),b
  1792  001060  69C2               	setf	(_prec+1)& (0+255),b
  1793  001062                     
  1794                           ; BSR set to: 0
  1795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1796  001062  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1797  001066  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1798  00106A  CFDE FFF6          	movff	postinc2,tblptrl
  1799  00106E  CFDD FFF7          	movff	postdec2,tblptrh
  1800  001072                     	if	0	;tblptru may be non-zero
  1801  001072                     	endif
  1802  001072                     	if	0	;tblptru may be non-zero
  1803  001072                     	endif
  1804  001072  0008               	tblrd		*
  1805  001074  50F5               	movf	tablat,w,c
  1806  001076  0A78               	xorlw	120
  1807  001078  B4D8               	btfsc	status,2,c
  1808  00107A  EF41  F008         	goto	u1331
  1809  00107E  EF43  F008         	goto	u1330
  1810  001082                     u1331:
  1811  001082  EF55  F008         	goto	l1959
  1812  001086                     u1330:
  1813  001086                     
  1814                           ; BSR set to: 0
  1815  001086  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1816  00108A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1817  00108E  CFDE FFF6          	movff	postinc2,tblptrl
  1818  001092  CFDD FFF7          	movff	postdec2,tblptrh
  1819  001096                     	if	0	;tblptru may be non-zero
  1820  001096                     	endif
  1821  001096                     	if	0	;tblptru may be non-zero
  1822  001096                     	endif
  1823  001096  0008               	tblrd		*
  1824  001098  50F5               	movf	tablat,w,c
  1825  00109A  0A58               	xorlw	88
  1826  00109C  A4D8               	btfss	status,2,c
  1827  00109E  EF53  F008         	goto	u1341
  1828  0010A2  EF55  F008         	goto	u1340
  1829  0010A6                     u1341:
  1830  0010A6  EFA3  F008         	goto	l1969
  1831  0010AA                     u1340:
  1832  0010AA                     l1959:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1836  0010AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1837  0010AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1838  0010B2  CFDE FFF6          	movff	postinc2,tblptrl
  1839  0010B6  CFDD FFF7          	movff	postdec2,tblptrh
  1840  0010BA                     	if	0	;tblptru may be non-zero
  1841  0010BA                     	endif
  1842  0010BA                     	if	0	;tblptru may be non-zero
  1843  0010BA                     	endif
  1844  0010BA  0008               	tblrd		*
  1845  0010BC  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1846  0010C0                     
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1849  0010C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1850  0010C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1851  0010C8  2ADE               	incf	postinc2,f,c
  1852  0010CA  0E00               	movlw	0
  1853  0010CC  22DD               	addwfc	postdec2,f,c
  1854  0010CE                     
  1855                           ; BSR set to: 0
  1856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1857  0010CE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1858  0010D2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1859  0010D6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1860  0010DA  0E02               	movlw	2
  1861  0010DC  26DE               	addwf	postinc2,f,c
  1862  0010DE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1863  0010E2  0E00               	movlw	0
  1864  0010E4  22DD               	addwfc	postdec2,f,c
  1865  0010E6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1866  0010EA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1867  0010EE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  1868  0010F2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  1869  0010F6  C04B  F04D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1870  0010FA  C04C  F04E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1871  0010FE  6A4F               	clrf	(vfpfcnvrt@llu+2)^0,c
  1872  001100  6A50               	clrf	(vfpfcnvrt@llu+3)^0,c
  1873  001102  6A51               	clrf	(vfpfcnvrt@llu+4)^0,c
  1874  001104  6A52               	clrf	(vfpfcnvrt@llu+5)^0,c
  1875  001106  6A53               	clrf	(vfpfcnvrt@llu+6)^0,c
  1876  001108  6A54               	clrf	(vfpfcnvrt@llu+7)^0,c
  1877  00110A                     
  1878                           ; BSR set to: 0
  1879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1880  00110A  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1881  00110E  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1882  001112  C04D  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1883  001116  C04E  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1884  00111A  C04F  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1885  00111E  C050  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1886  001122  C051  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1887  001126  C052  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1888  00112A  C053  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1889  00112E  C054  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1890  001132  C055  F026         	movff	vfpfcnvrt@c,xtoa@x
  1891  001136  ECA3  F006         	call	_xtoa	;wreg free
  1892  00113A  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  1893  00113E  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1894  001142  EFF4  F008         	goto	l1014
  1895  001146                     l1969:
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1899  001146  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1900  00114A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1901  00114E  CFDE FFF6          	movff	postinc2,tblptrl
  1902  001152  CFDD FFF7          	movff	postdec2,tblptrh
  1903  001156                     	if	0	;tblptru may be non-zero
  1904  001156                     	endif
  1905  001156                     	if	0	;tblptru may be non-zero
  1906  001156                     	endif
  1907  001156  0008               	tblrd		*
  1908  001158  50F5               	movf	tablat,w,c
  1909  00115A  0A25               	xorlw	37
  1910  00115C  A4D8               	btfss	status,2,c
  1911  00115E  EFB3  F008         	goto	u1351
  1912  001162  EFB5  F008         	goto	u1350
  1913  001166                     u1351:
  1914  001166  EFCC  F008         	goto	l1979
  1915  00116A                     u1350:
  1916  00116A                     
  1917                           ; BSR set to: 0
  1918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1919  00116A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1920  00116E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1921  001172  2ADE               	incf	postinc2,f,c
  1922  001174  0E00               	movlw	0
  1923  001176  22DD               	addwfc	postdec2,f,c
  1924  001178                     
  1925                           ; BSR set to: 0
  1926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1927  001178  0E00               	movlw	0
  1928  00117A  6E02               	movwf	(fputc@c+1)^0,c
  1929  00117C  0E25               	movlw	37
  1930  00117E  6E01               	movwf	fputc@c^0,c
  1931  001180  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1932  001184  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1933  001188  ECF5  F008         	call	_fputc	;wreg free
  1934  00118C                     l1975:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1937  00118C  0E00               	movlw	0
  1938  00118E  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1939  001190  0E01               	movlw	1
  1940  001192  6E43               	movwf	?_vfpfcnvrt^0,c
  1941  001194  EFF4  F008         	goto	l1014
  1942  001198                     l1979:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1946  001198  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1947  00119C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1948  0011A0  2ADE               	incf	postinc2,f,c
  1949  0011A2  0E00               	movlw	0
  1950  0011A4  22DD               	addwfc	postdec2,f,c
  1951  0011A6                     
  1952                           ; BSR set to: 0
  1953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1954  0011A6  0E00               	movlw	0
  1955  0011A8  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1956  0011AA  0E00               	movlw	0
  1957  0011AC  6E43               	movwf	?_vfpfcnvrt^0,c
  1958  0011AE  EFF4  F008         	goto	l1014
  1959  0011B2                     l1985:
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1962  0011B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1963  0011B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1964  0011BA  CFDE FFF6          	movff	postinc2,tblptrl
  1965  0011BE  CFDD FFF7          	movff	postdec2,tblptrh
  1966  0011C2                     	if	0	;tblptru may be non-zero
  1967  0011C2                     	endif
  1968  0011C2                     	if	0	;tblptru may be non-zero
  1969  0011C2                     	endif
  1970  0011C2  0008               	tblrd		*
  1971  0011C4  50F5               	movf	tablat,w,c
  1972  0011C6  6E01               	movwf	fputc@c^0,c
  1973  0011C8  6A02               	clrf	(fputc@c+1)^0,c
  1974  0011CA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1975  0011CE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1976  0011D2  ECF5  F008         	call	_fputc	;wreg free
  1977  0011D6                     
  1978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1979  0011D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1980  0011DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1981  0011DE  2ADE               	incf	postinc2,f,c
  1982  0011E0  0E00               	movlw	0
  1983  0011E2  22DD               	addwfc	postdec2,f,c
  1984  0011E4  EFC6  F008         	goto	l1975
  1985  0011E8                     l1014:
  1986  0011E8  0012               	return		;funcret
  1987  0011EA                     __end_of_vfpfcnvrt:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _xtoa *****************
  1991 ;; Defined at:
  1992 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1995 ;;		 -> sprintf@f(6), 
  1996 ;;  d               8   29[COMRAM] unsigned long long 
  1997 ;;  x               1   37[COMRAM] unsigned char 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  n               8   54[COMRAM] unsigned long long 
  2000 ;;  c               2   64[COMRAM] int 
  2001 ;;  i               2   62[COMRAM] int 
  2002 ;;  w               2   52[COMRAM] int 
  2003 ;;  p               2   50[COMRAM] int 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  2   27[COMRAM] int 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2013 ;;      Params:        11       0       0       0       0       0       0       0       0
  2014 ;;      Locals:        20       0       0       0       0       0       0       0       0
  2015 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2016 ;;      Totals:        39       0       0       0       0       0       0       0       0
  2017 ;;Total ram usage:       39 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    4
  2020 ;; This function calls:
  2021 ;;		_isalpha
  2022 ;;		_isupper
  2023 ;;		_pad
  2024 ;;		_toupper
  2025 ;; This function is called by:
  2026 ;;		_vfpfcnvrt
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text4
  2031  000D46                     __ptext4:
  2032                           	callstack 0
  2033  000D46                     _xtoa:
  2034                           	callstack 23
  2035  000D46                     
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  2037  000D46  0100               	movlb	0	; () banked
  2038  000D48  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  2039  000D4A  EFA9  F006         	goto	u1121
  2040  000D4E  EFAB  F006         	goto	u1120
  2041  000D52                     u1121:
  2042  000D52  EFAC  F006         	goto	l1845
  2043  000D56                     u1120:
  2044  000D56                     
  2045                           ; BSR set to: 0
  2046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  2047  000D56  925E               	bcf	_flags^0,1,c
  2048  000D58                     l1845:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  2052  000D58  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  2053  000D5A  EFB9  F006         	goto	u1130
  2054  000D5E  51C2               	movf	(_prec+1)& (0+255),w,b
  2055  000D60  E106               	bnz	u1131
  2056  000D62  05C1               	decf	_prec& (0+255),w,b
  2057  000D64  B0D8               	btfsc	status,0,c
  2058  000D66  EFB7  F006         	goto	u1131
  2059  000D6A  EFB9  F006         	goto	u1130
  2060  000D6E                     u1131:
  2061  000D6E  EFBF  F006         	goto	l982
  2062  000D72                     u1130:
  2063  000D72                     
  2064                           ; BSR set to: 0
  2065  000D72  0E00               	movlw	0
  2066  000D74  6E34               	movwf	(xtoa@p+1)^0,c
  2067  000D76  0E01               	movlw	1
  2068  000D78  6E33               	movwf	xtoa@p^0,c
  2069  000D7A  EFC3  F006         	goto	l984
  2070  000D7E                     l982:
  2071                           
  2072                           ; BSR set to: 0
  2073  000D7E  C0C1  F033         	movff	_prec,xtoa@p
  2074  000D82  C0C2  F034         	movff	_prec+1,xtoa@p+1
  2075  000D86                     l984:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  2079  000D86  C0BF  F035         	movff	_width,xtoa@w
  2080  000D8A  C0C0  F036         	movff	_width+1,xtoa@w+1
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2083  000D8E  A85E               	btfss	_flags^0,4,c
  2084  000D90  EFCC  F006         	goto	u1141
  2085  000D94  EFCE  F006         	goto	u1140
  2086  000D98                     u1141:
  2087  000D98  EFD2  F006         	goto	l1851
  2088  000D9C                     u1140:
  2089  000D9C                     
  2090                           ; BSR set to: 0
  2091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  2092  000D9C  0EFE               	movlw	254
  2093  000D9E  2635               	addwf	xtoa@w^0,f,c
  2094  000DA0  0EFF               	movlw	255
  2095  000DA2  2236               	addwfc	(xtoa@w+1)^0,f,c
  2096  000DA4                     l1851:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  2100  000DA4  C01E  F037         	movff	xtoa@d,xtoa@n
  2101  000DA8  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  2102  000DAC  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  2103  000DB0  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  2104  000DB4  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  2105  000DB8  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  2106  000DBC  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  2107  000DC0  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  2108  000DC4                     
  2109                           ; BSR set to: 0
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  2111  000DC4  0E00               	movlw	0
  2112  000DC6  6E40               	movwf	(xtoa@i+1)^0,c
  2113  000DC8  0E1F               	movlw	31
  2114  000DCA  6E3F               	movwf	xtoa@i^0,c
  2115  000DCC                     
  2116                           ; BSR set to: 0
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  2118  000DCC  0E00               	movlw	0
  2119  000DCE  6FFC               	movwf	(_dbuf+31)& (0+255),b
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2122  000DD0  EF9D  F007         	goto	l1887
  2123  000DD4                     l1857:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  2126  000DD4  063F               	decf	xtoa@i^0,f,c
  2127  000DD6  A0D8               	btfss	status,0,c
  2128  000DD8  0640               	decf	(xtoa@i+1)^0,f,c
  2129  000DDA                     
  2130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  2131  000DDA  0E0F               	movlw	15
  2132  000DDC  1437               	andwf	xtoa@n^0,w,c
  2133  000DDE  6E41               	movwf	xtoa@c^0,c
  2134  000DE0  6A42               	clrf	(xtoa@c+1)^0,c
  2135  000DE2                     
  2136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2137  000DE2  BE42               	btfsc	(xtoa@c+1)^0,7,c
  2138  000DE4  EFFD  F006         	goto	u1151
  2139  000DE8  5042               	movf	(xtoa@c+1)^0,w,c
  2140  000DEA  E109               	bnz	u1150
  2141  000DEC  0E0A               	movlw	10
  2142  000DEE  5C41               	subwf	xtoa@c^0,w,c
  2143  000DF0  A0D8               	btfss	status,0,c
  2144  000DF2  EFFD  F006         	goto	u1151
  2145  000DF6  EFFF  F006         	goto	u1150
  2146  000DFA                     u1151:
  2147  000DFA  EF07  F007         	goto	l1865
  2148  000DFE                     u1150:
  2149  000DFE  0E57               	movlw	87
  2150  000E00  2441               	addwf	xtoa@c^0,w,c
  2151  000E02  6E41               	movwf	xtoa@c^0,c
  2152  000E04  0E00               	movlw	0
  2153  000E06  2042               	addwfc	(xtoa@c+1)^0,w,c
  2154  000E08  6E42               	movwf	(xtoa@c+1)^0,c
  2155  000E0A  EF0D  F007         	goto	l991
  2156  000E0E                     l1865:
  2157  000E0E  0E30               	movlw	48
  2158  000E10  2441               	addwf	xtoa@c^0,w,c
  2159  000E12  6E41               	movwf	xtoa@c^0,c
  2160  000E14  0E00               	movlw	0
  2161  000E16  2042               	addwfc	(xtoa@c+1)^0,w,c
  2162  000E18  6E42               	movwf	(xtoa@c+1)^0,c
  2163  000E1A                     l991:
  2164  000E1A  0EBF               	movlw	191
  2165  000E1C  6E27               	movwf	??_xtoa^0,c
  2166  000E1E  0EFF               	movlw	255
  2167  000E20  6E28               	movwf	(??_xtoa+1)^0,c
  2168  000E22  5026               	movf	xtoa@x^0,w,c
  2169  000E24  6E29               	movwf	(??_xtoa+2)^0,c
  2170  000E26  6A2A               	clrf	(??_xtoa+3)^0,c
  2171  000E28  5027               	movf	??_xtoa^0,w,c
  2172  000E2A  2629               	addwf	(??_xtoa+2)^0,f,c
  2173  000E2C  5028               	movf	(??_xtoa+1)^0,w,c
  2174  000E2E  222A               	addwfc	(??_xtoa+3)^0,f,c
  2175  000E30  502A               	movf	(??_xtoa+3)^0,w,c
  2176  000E32  E10A               	bnz	u1160
  2177  000E34  0E1A               	movlw	26
  2178  000E36  5C29               	subwf	(??_xtoa+2)^0,w,c
  2179  000E38  A0D8               	btfss	status,0,c
  2180  000E3A  EF21  F007         	goto	u1161
  2181  000E3E  EF24  F007         	goto	u1160
  2182  000E42                     u1161:
  2183  000E42  0E01               	movlw	1
  2184  000E44  EF25  F007         	goto	u1170
  2185  000E48                     u1160:
  2186  000E48  0E00               	movlw	0
  2187  000E4A                     u1170:
  2188  000E4A  6E2F               	movwf	_xtoa$1124^0,c
  2189  000E4C  6A30               	clrf	(_xtoa$1124+1)^0,c
  2190  000E4E  502F               	movf	_xtoa$1124^0,w,c
  2191  000E50  1030               	iorwf	(_xtoa$1124+1)^0,w,c
  2192  000E52  B4D8               	btfsc	status,2,c
  2193  000E54  EF2E  F007         	goto	u1181
  2194  000E58  EF30  F007         	goto	u1180
  2195  000E5C                     u1181:
  2196  000E5C  EF60  F007         	goto	l1879
  2197  000E60                     u1180:
  2198  000E60  0E9F               	movlw	159
  2199  000E62  6E27               	movwf	??_xtoa^0,c
  2200  000E64  0EFF               	movlw	255
  2201  000E66  6E28               	movwf	(??_xtoa+1)^0,c
  2202  000E68  0E20               	movlw	32
  2203  000E6A  1041               	iorwf	xtoa@c^0,w,c
  2204  000E6C  6E29               	movwf	(??_xtoa+2)^0,c
  2205  000E6E  0E00               	movlw	0
  2206  000E70  1042               	iorwf	(xtoa@c+1)^0,w,c
  2207  000E72  6E2A               	movwf	(??_xtoa+3)^0,c
  2208  000E74  5027               	movf	??_xtoa^0,w,c
  2209  000E76  2629               	addwf	(??_xtoa+2)^0,f,c
  2210  000E78  5028               	movf	(??_xtoa+1)^0,w,c
  2211  000E7A  222A               	addwfc	(??_xtoa+3)^0,f,c
  2212  000E7C  502A               	movf	(??_xtoa+3)^0,w,c
  2213  000E7E  E10A               	bnz	u1190
  2214  000E80  0E1A               	movlw	26
  2215  000E82  5C29               	subwf	(??_xtoa+2)^0,w,c
  2216  000E84  A0D8               	btfss	status,0,c
  2217  000E86  EF47  F007         	goto	u1191
  2218  000E8A  EF4A  F007         	goto	u1190
  2219  000E8E                     u1191:
  2220  000E8E  0E01               	movlw	1
  2221  000E90  EF4B  F007         	goto	u1200
  2222  000E94                     u1190:
  2223  000E94  0E00               	movlw	0
  2224  000E96                     u1200:
  2225  000E96  6E31               	movwf	_xtoa$1125^0,c
  2226  000E98  6A32               	clrf	(_xtoa$1125+1)^0,c
  2227  000E9A  5031               	movf	_xtoa$1125^0,w,c
  2228  000E9C  1032               	iorwf	(_xtoa$1125+1)^0,w,c
  2229  000E9E  B4D8               	btfsc	status,2,c
  2230  000EA0  EF54  F007         	goto	u1211
  2231  000EA4  EF56  F007         	goto	u1210
  2232  000EA8                     u1211:
  2233  000EA8  EF60  F007         	goto	l1879
  2234  000EAC                     u1210:
  2235  000EAC                     
  2236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2237  000EAC  C041  F007         	movff	xtoa@c,toupper@c
  2238  000EB0  C042  F008         	movff	xtoa@c+1,toupper@c+1
  2239  000EB4  ECA6  F00A         	call	_toupper	;wreg free
  2240  000EB8  C007  F041         	movff	?_toupper,xtoa@c
  2241  000EBC  C008  F042         	movff	?_toupper+1,xtoa@c+1
  2242  000EC0                     l1879:
  2243                           
  2244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2245  000EC0  0EDD               	movlw	low _dbuf
  2246  000EC2  243F               	addwf	xtoa@i^0,w,c
  2247  000EC4  6ED9               	movwf	fsr2l,c
  2248  000EC6  0E00               	movlw	high _dbuf
  2249  000EC8  2040               	addwfc	(xtoa@i+1)^0,w,c
  2250  000ECA  6EDA               	movwf	fsr2h,c
  2251  000ECC  C041  FFDF         	movff	xtoa@c,indf2
  2252  000ED0                     
  2253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  2254  000ED0  0633               	decf	xtoa@p^0,f,c
  2255  000ED2  A0D8               	btfss	status,0,c
  2256  000ED4  0634               	decf	(xtoa@p+1)^0,f,c
  2257  000ED6                     
  2258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  2259  000ED6  0635               	decf	xtoa@w^0,f,c
  2260  000ED8  A0D8               	btfss	status,0,c
  2261  000EDA  0636               	decf	(xtoa@w+1)^0,f,c
  2262  000EDC                     
  2263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2264  000EDC  C037  F027         	movff	xtoa@n,??_xtoa
  2265  000EE0  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  2266  000EE4  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  2267  000EE8  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  2268  000EEC  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  2269  000EF0  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  2270  000EF4  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  2271  000EF8  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  2272  000EFC  0E05               	movlw	5
  2273  000EFE  EF8A  F007         	goto	u1220
  2274  000F02                     u1225:
  2275  000F02  90D8               	bcf	status,0,c
  2276  000F04  322E               	rrcf	(??_xtoa+7)^0,f,c
  2277  000F06  322D               	rrcf	(??_xtoa+6)^0,f,c
  2278  000F08  322C               	rrcf	(??_xtoa+5)^0,f,c
  2279  000F0A  322B               	rrcf	(??_xtoa+4)^0,f,c
  2280  000F0C  322A               	rrcf	(??_xtoa+3)^0,f,c
  2281  000F0E  3229               	rrcf	(??_xtoa+2)^0,f,c
  2282  000F10  3228               	rrcf	(??_xtoa+1)^0,f,c
  2283  000F12  3227               	rrcf	??_xtoa^0,f,c
  2284  000F14                     u1220:
  2285  000F14  2EE8               	decfsz	wreg,f,c
  2286  000F16  EF81  F007         	goto	u1225
  2287  000F1A  C027  F037         	movff	??_xtoa,xtoa@n
  2288  000F1E  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  2289  000F22  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  2290  000F26  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  2291  000F2A  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  2292  000F2E  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  2293  000F32  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  2294  000F36  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  2295  000F3A                     l1887:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2298  000F3A  BE40               	btfsc	(xtoa@i+1)^0,7,c
  2299  000F3C  EFA9  F007         	goto	u1231
  2300  000F40  5040               	movf	(xtoa@i+1)^0,w,c
  2301  000F42  E109               	bnz	u1230
  2302  000F44  0E02               	movlw	2
  2303  000F46  5C3F               	subwf	xtoa@i^0,w,c
  2304  000F48  A0D8               	btfss	status,0,c
  2305  000F4A  EFA9  F007         	goto	u1231
  2306  000F4E  EFAB  F007         	goto	u1230
  2307  000F52                     u1231:
  2308  000F52  EFDB  F007         	goto	l1005
  2309  000F56                     u1230:
  2310  000F56  5037               	movf	xtoa@n^0,w,c
  2311  000F58  1038               	iorwf	(xtoa@n+1)^0,w,c
  2312  000F5A  1039               	iorwf	(xtoa@n+2)^0,w,c
  2313  000F5C  103A               	iorwf	(xtoa@n+3)^0,w,c
  2314  000F5E  103B               	iorwf	(xtoa@n+4)^0,w,c
  2315  000F60  103C               	iorwf	(xtoa@n+5)^0,w,c
  2316  000F62  103D               	iorwf	(xtoa@n+6)^0,w,c
  2317  000F64  103E               	iorwf	(xtoa@n+7)^0,w,c
  2318  000F66  A4D8               	btfss	status,2,c
  2319  000F68  EFB8  F007         	goto	u1241
  2320  000F6C  EFBA  F007         	goto	u1240
  2321  000F70                     u1241:
  2322  000F70  EFEA  F006         	goto	l1857
  2323  000F74                     u1240:
  2324  000F74  BE34               	btfsc	(xtoa@p+1)^0,7,c
  2325  000F76  EFC7  F007         	goto	u1250
  2326  000F7A  5034               	movf	(xtoa@p+1)^0,w,c
  2327  000F7C  E106               	bnz	u1251
  2328  000F7E  0433               	decf	xtoa@p^0,w,c
  2329  000F80  B0D8               	btfsc	status,0,c
  2330  000F82  EFC5  F007         	goto	u1251
  2331  000F86  EFC7  F007         	goto	u1250
  2332  000F8A                     u1251:
  2333  000F8A  EFEA  F006         	goto	l1857
  2334  000F8E                     u1250:
  2335  000F8E  BE36               	btfsc	(xtoa@w+1)^0,7,c
  2336  000F90  EFD2  F007         	goto	u1261
  2337  000F94  5036               	movf	(xtoa@w+1)^0,w,c
  2338  000F96  E108               	bnz	u1260
  2339  000F98  0435               	decf	xtoa@w^0,w,c
  2340  000F9A  A0D8               	btfss	status,0,c
  2341  000F9C  EFD2  F007         	goto	u1261
  2342  000FA0  EFD4  F007         	goto	u1260
  2343  000FA4                     u1261:
  2344  000FA4  EFDB  F007         	goto	l1005
  2345  000FA8                     u1260:
  2346  000FA8  B25E               	btfsc	_flags^0,1,c
  2347  000FAA  EFD9  F007         	goto	u1271
  2348  000FAE  EFDB  F007         	goto	u1270
  2349  000FB2                     u1271:
  2350  000FB2  EFEA  F006         	goto	l1857
  2351  000FB6                     u1270:
  2352  000FB6                     l1005:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2355  000FB6  A85E               	btfss	_flags^0,4,c
  2356  000FB8  EFE0  F007         	goto	u1281
  2357  000FBC  EFE2  F007         	goto	u1280
  2358  000FC0                     u1281:
  2359  000FC0  EFF8  F007         	goto	l1903
  2360  000FC4                     u1280:
  2361  000FC4                     
  2362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  2363  000FC4  063F               	decf	xtoa@i^0,f,c
  2364  000FC6  A0D8               	btfss	status,0,c
  2365  000FC8  0640               	decf	(xtoa@i+1)^0,f,c
  2366  000FCA                     
  2367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2368  000FCA  0EDD               	movlw	low _dbuf
  2369  000FCC  243F               	addwf	xtoa@i^0,w,c
  2370  000FCE  6ED9               	movwf	fsr2l,c
  2371  000FD0  0E00               	movlw	high _dbuf
  2372  000FD2  2040               	addwfc	(xtoa@i+1)^0,w,c
  2373  000FD4  6EDA               	movwf	fsr2h,c
  2374  000FD6  C026  FFDF         	movff	xtoa@x,indf2
  2375  000FDA                     
  2376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  2377  000FDA  063F               	decf	xtoa@i^0,f,c
  2378  000FDC  A0D8               	btfss	status,0,c
  2379  000FDE  0640               	decf	(xtoa@i+1)^0,f,c
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2382  000FE0  0EDD               	movlw	low _dbuf
  2383  000FE2  243F               	addwf	xtoa@i^0,w,c
  2384  000FE4  6ED9               	movwf	fsr2l,c
  2385  000FE6  0E00               	movlw	high _dbuf
  2386  000FE8  2040               	addwfc	(xtoa@i+1)^0,w,c
  2387  000FEA  6EDA               	movwf	fsr2h,c
  2388  000FEC  0E30               	movlw	48
  2389  000FEE  6EDF               	movwf	indf2,c
  2390  000FF0                     l1903:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2393  000FF0  C01C  F011         	movff	xtoa@fp,pad@fp
  2394  000FF4  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2395  000FF8  0EDD               	movlw	low _dbuf
  2396  000FFA  243F               	addwf	xtoa@i^0,w,c
  2397  000FFC  6E13               	movwf	pad@buf^0,c
  2398  000FFE  0E00               	movlw	high _dbuf
  2399  001000  2040               	addwfc	(xtoa@i+1)^0,w,c
  2400  001002  6E14               	movwf	(pad@buf+1)^0,c
  2401  001004  C035  F015         	movff	xtoa@w,pad@p
  2402  001008  C036  F016         	movff	xtoa@w+1,pad@p+1
  2403  00100C  ECBC  F009         	call	_pad	;wreg free
  2404  001010  C011  F01C         	movff	?_pad,?_xtoa
  2405  001014  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2406  001018  0012               	return		;funcret
  2407  00101A                     __end_of_xtoa:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _toupper *****************
  2411 ;; Defined at:
  2412 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  c               2    6[COMRAM] int 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  2    6[COMRAM] int 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2426 ;;      Params:         2       0       0       0       0       0       0       0       0
  2427 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2428 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2429 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2430 ;;Total ram usage:        8 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    1
  2433 ;; This function calls:
  2434 ;;		_islower
  2435 ;; This function is called by:
  2436 ;;		_xtoa
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text5
  2441  00154C                     __ptext5:
  2442                           	callstack 0
  2443  00154C                     _toupper:
  2444                           	callstack 25
  2445  00154C  0E9F               	movlw	159
  2446  00154E  6E09               	movwf	??_toupper^0,c
  2447  001550  0EFF               	movlw	255
  2448  001552  6E0A               	movwf	(??_toupper+1)^0,c
  2449  001554  C007  F00B         	movff	toupper@c,??_toupper+2
  2450  001558  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2451  00155C  5009               	movf	??_toupper^0,w,c
  2452  00155E  260B               	addwf	(??_toupper+2)^0,f,c
  2453  001560  500A               	movf	(??_toupper+1)^0,w,c
  2454  001562  220C               	addwfc	(??_toupper+3)^0,f,c
  2455  001564  500C               	movf	(??_toupper+3)^0,w,c
  2456  001566  E10A               	bnz	u1060
  2457  001568  0E1A               	movlw	26
  2458  00156A  5C0B               	subwf	(??_toupper+2)^0,w,c
  2459  00156C  A0D8               	btfss	status,0,c
  2460  00156E  EFBB  F00A         	goto	u1061
  2461  001572  EFBE  F00A         	goto	u1060
  2462  001576                     u1061:
  2463  001576  0E01               	movlw	1
  2464  001578  EFBF  F00A         	goto	u1070
  2465  00157C                     u1060:
  2466  00157C  0E00               	movlw	0
  2467  00157E                     u1070:
  2468  00157E  6E0D               	movwf	_toupper$1207^0,c
  2469  001580  6A0E               	clrf	(_toupper$1207+1)^0,c
  2470  001582  500D               	movf	_toupper$1207^0,w,c
  2471  001584  100E               	iorwf	(_toupper$1207+1)^0,w,c
  2472  001586  B4D8               	btfsc	status,2,c
  2473  001588  EFC8  F00A         	goto	u1081
  2474  00158C  EFCA  F00A         	goto	u1080
  2475  001590                     u1081:
  2476  001590  EFD0  F00A         	goto	l1067
  2477  001594                     u1080:
  2478  001594  0E5F               	movlw	95
  2479  001596  1407               	andwf	toupper@c^0,w,c
  2480  001598  6E07               	movwf	?_toupper^0,c
  2481  00159A  6A08               	clrf	(?_toupper+1)^0,c
  2482  00159C  EFD4  F00A         	goto	l1072
  2483  0015A0                     l1067:
  2484  0015A0  C007  F007         	movff	toupper@c,?_toupper
  2485  0015A4  C008  F008         	movff	toupper@c+1,?_toupper+1
  2486  0015A8                     l1072:
  2487  0015A8  0012               	return		;funcret
  2488  0015AA                     __end_of_toupper:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _islower *****************
  2492 ;; Defined at:
  2493 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  c               2    0[COMRAM] int 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  2    0[COMRAM] int 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2507 ;;      Params:         2       0       0       0       0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2509 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2510 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2511 ;;Total ram usage:        6 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_toupper
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text6
  2521  001916                     __ptext6:
  2522                           	callstack 0
  2523  001916                     _islower:
  2524                           	callstack 25
  2525  001916  0E9F               	movlw	159
  2526  001918  6E03               	movwf	??_islower^0,c
  2527  00191A  0EFF               	movlw	255
  2528  00191C  6E04               	movwf	(??_islower+1)^0,c
  2529  00191E  C001  F005         	movff	islower@c,??_islower+2
  2530  001922  C002  F006         	movff	islower@c+1,??_islower+3
  2531  001926  5003               	movf	??_islower^0,w,c
  2532  001928  2605               	addwf	(??_islower+2)^0,f,c
  2533  00192A  5004               	movf	(??_islower+1)^0,w,c
  2534  00192C  2206               	addwfc	(??_islower+3)^0,f,c
  2535  00192E  5006               	movf	(??_islower+3)^0,w,c
  2536  001930  E10A               	bnz	u960
  2537  001932  0E1A               	movlw	26
  2538  001934  5C05               	subwf	(??_islower+2)^0,w,c
  2539  001936  A0D8               	btfss	status,0,c
  2540  001938  EFA0  F00C         	goto	u961
  2541  00193C  EFA3  F00C         	goto	u960
  2542  001940                     u961:
  2543  001940  0E01               	movlw	1
  2544  001942  EFA4  F00C         	goto	u970
  2545  001946                     u960:
  2546  001946  0E00               	movlw	0
  2547  001948                     u970:
  2548  001948  6E01               	movwf	?_islower^0,c
  2549  00194A  6A02               	clrf	(?_islower+1)^0,c
  2550  00194C  0012               	return		;funcret
  2551  00194E                     __end_of_islower:
  2552                           	callstack 0
  2553                           
  2554 ;; *************** function _pad *****************
  2555 ;; Defined at:
  2556 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2559 ;;		 -> sprintf@f(6), 
  2560 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2561 ;;		 -> dbuf(32), 
  2562 ;;  p               2   20[COMRAM] int 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  w               2   25[COMRAM] int 
  2565 ;;  i               2   23[COMRAM] int 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  2   16[COMRAM] int 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2575 ;;      Params:         6       0       0       0       0       0       0       0       0
  2576 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2577 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2578 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2579 ;;Total ram usage:       11 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    3
  2582 ;; This function calls:
  2583 ;;		_fputc
  2584 ;;		_fputs
  2585 ;;		_strlen
  2586 ;; This function is called by:
  2587 ;;		_xtoa
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text7
  2592  001378                     __ptext7:
  2593                           	callstack 0
  2594  001378                     _pad:
  2595                           	callstack 23
  2596  001378                     
  2597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2598  001378  A05E               	btfss	_flags^0,0,c
  2599  00137A  EFC1  F009         	goto	u981
  2600  00137E  EFC3  F009         	goto	u980
  2601  001382                     u981:
  2602  001382  EFCD  F009         	goto	l1787
  2603  001386                     u980:
  2604  001386                     
  2605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2606  001386  C013  F00A         	movff	pad@buf,fputs@s
  2607  00138A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2608  00138E  C011  F00C         	movff	pad@fp,fputs@fp
  2609  001392  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2610  001396  ECED  F00B         	call	_fputs	;wreg free
  2611  00139A                     l1787:
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2614  00139A  BE16               	btfsc	(pad@p+1)^0,7,c
  2615  00139C  EFD2  F009         	goto	u991
  2616  0013A0  EFD4  F009         	goto	u990
  2617  0013A4                     u991:
  2618  0013A4  EFDA  F009         	goto	l1791
  2619  0013A8                     u990:
  2620  0013A8  C015  F01A         	movff	pad@p,pad@w
  2621  0013AC  C016  F01B         	movff	pad@p+1,pad@w+1
  2622  0013B0  EFDE  F009         	goto	l972
  2623  0013B4                     l1791:
  2624  0013B4  0E00               	movlw	0
  2625  0013B6  6E1B               	movwf	(pad@w+1)^0,c
  2626  0013B8  0E00               	movlw	0
  2627  0013BA  6E1A               	movwf	pad@w^0,c
  2628  0013BC                     l972:
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2631  0013BC  0E00               	movlw	0
  2632  0013BE  6E19               	movwf	(pad@i+1)^0,c
  2633  0013C0  0E00               	movlw	0
  2634  0013C2  6E18               	movwf	pad@i^0,c
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2637  0013C4  EFF0  F009         	goto	l1797
  2638  0013C8                     l1793:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2641  0013C8  0E00               	movlw	0
  2642  0013CA  6E02               	movwf	(fputc@c+1)^0,c
  2643  0013CC  0E20               	movlw	32
  2644  0013CE  6E01               	movwf	fputc@c^0,c
  2645  0013D0  C011  F003         	movff	pad@fp,fputc@fp
  2646  0013D4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2647  0013D8  ECF5  F008         	call	_fputc	;wreg free
  2648  0013DC                     
  2649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2650  0013DC  4A18               	infsnz	pad@i^0,f,c
  2651  0013DE  2A19               	incf	(pad@i+1)^0,f,c
  2652  0013E0                     l1797:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2655  0013E0  501A               	movf	pad@w^0,w,c
  2656  0013E2  5C18               	subwf	pad@i^0,w,c
  2657  0013E4  5019               	movf	(pad@i+1)^0,w,c
  2658  0013E6  0A80               	xorlw	128
  2659  0013E8  6E17               	movwf	??_pad^0,c
  2660  0013EA  501B               	movf	(pad@w+1)^0,w,c
  2661  0013EC  0A80               	xorlw	128
  2662  0013EE  5817               	subwfb	??_pad^0,w,c
  2663  0013F0  A0D8               	btfss	status,0,c
  2664  0013F2  EFFD  F009         	goto	u1001
  2665  0013F6  EFFF  F009         	goto	u1000
  2666  0013FA                     u1001:
  2667  0013FA  EFE4  F009         	goto	l1793
  2668  0013FE                     u1000:
  2669  0013FE                     
  2670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2671  0013FE  B05E               	btfsc	_flags^0,0,c
  2672  001400  EF04  F00A         	goto	u1011
  2673  001404  EF06  F00A         	goto	u1010
  2674  001408                     u1011:
  2675  001408  EF10  F00A         	goto	l1801
  2676  00140C                     u1010:
  2677  00140C                     
  2678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2679  00140C  C013  F00A         	movff	pad@buf,fputs@s
  2680  001410  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2681  001414  C011  F00C         	movff	pad@fp,fputs@fp
  2682  001418  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2683  00141C  ECED  F00B         	call	_fputs	;wreg free
  2684  001420                     l1801:
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2687  001420  C013  F001         	movff	pad@buf,strlen@s
  2688  001424  C014  F002         	movff	pad@buf+1,strlen@s+1
  2689  001428  ECC3  F00C         	call	_strlen	;wreg free
  2690  00142C  501A               	movf	pad@w^0,w,c
  2691  00142E  2401               	addwf	?_strlen^0,w,c
  2692  001430  6E11               	movwf	?_pad^0,c
  2693  001432  501B               	movf	(pad@w+1)^0,w,c
  2694  001434  2002               	addwfc	(?_strlen+1)^0,w,c
  2695  001436  6E12               	movwf	(?_pad+1)^0,c
  2696  001438  0012               	return		;funcret
  2697  00143A                     __end_of_pad:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _strlen *****************
  2701 ;; Defined at:
  2702 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2705 ;;		 -> dbuf(32), 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2708 ;;		 -> dbuf(32), 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  2    0[COMRAM] unsigned int 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2718 ;;      Params:         2       0       0       0       0       0       0       0       0
  2719 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2721 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2722 ;;Total ram usage:        4 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_pad
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text8
  2732  001986                     __ptext8:
  2733                           	callstack 0
  2734  001986                     _strlen:
  2735                           	callstack 25
  2736  001986  C001  F003         	movff	strlen@s,strlen@a
  2737  00198A  C002  F004         	movff	strlen@s+1,strlen@a+1
  2738  00198E  EFCB  F00C         	goto	l1773
  2739  001992                     l1771:
  2740  001992  4A01               	infsnz	strlen@s^0,f,c
  2741  001994  2A02               	incf	(strlen@s+1)^0,f,c
  2742  001996                     l1773:
  2743  001996  C001  FFD9         	movff	strlen@s,fsr2l
  2744  00199A  C002  FFDA         	movff	strlen@s+1,fsr2h
  2745  00199E  50DF               	movf	indf2,w,c
  2746  0019A0  A4D8               	btfss	status,2,c
  2747  0019A2  EFD5  F00C         	goto	u951
  2748  0019A6  EFD7  F00C         	goto	u950
  2749  0019AA                     u951:
  2750  0019AA  EFC9  F00C         	goto	l1771
  2751  0019AE                     u950:
  2752  0019AE  5003               	movf	strlen@a^0,w,c
  2753  0019B0  5C01               	subwf	strlen@s^0,w,c
  2754  0019B2  6E01               	movwf	?_strlen^0,c
  2755  0019B4  5004               	movf	(strlen@a+1)^0,w,c
  2756  0019B6  5802               	subwfb	(strlen@s+1)^0,w,c
  2757  0019B8  6E02               	movwf	(?_strlen+1)^0,c
  2758  0019BA  0012               	return		;funcret
  2759  0019BC                     __end_of_strlen:
  2760                           	callstack 0
  2761                           
  2762 ;; *************** function _fputs *****************
  2763 ;; Defined at:
  2764 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2767 ;;		 -> dbuf(32), 
  2768 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2769 ;;		 -> sprintf@f(6), 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  i               2   14[COMRAM] int 
  2772 ;;  c               1   13[COMRAM] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2    9[COMRAM] int 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2782 ;;      Params:         4       0       0       0       0       0       0       0       0
  2783 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2785 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2786 ;;Total ram usage:        7 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    2
  2789 ;; This function calls:
  2790 ;;		_fputc
  2791 ;; This function is called by:
  2792 ;;		_pad
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text9
  2797  0017DA                     __ptext9:
  2798                           	callstack 0
  2799  0017DA                     _fputs:
  2800                           	callstack 23
  2801  0017DA  0E00               	movlw	0
  2802  0017DC  6E10               	movwf	(fputs@i+1)^0,c
  2803  0017DE  0E00               	movlw	0
  2804  0017E0  6E0F               	movwf	fputs@i^0,c
  2805  0017E2  EFFE  F00B         	goto	l1767
  2806  0017E6                     l1763:
  2807  0017E6  C00E  F001         	movff	fputs@c,fputc@c
  2808  0017EA  6A02               	clrf	(fputc@c+1)^0,c
  2809  0017EC  C00C  F003         	movff	fputs@fp,fputc@fp
  2810  0017F0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2811  0017F4  ECF5  F008         	call	_fputc	;wreg free
  2812  0017F8  4A0F               	infsnz	fputs@i^0,f,c
  2813  0017FA  2A10               	incf	(fputs@i+1)^0,f,c
  2814  0017FC                     l1767:
  2815  0017FC  500F               	movf	fputs@i^0,w,c
  2816  0017FE  240A               	addwf	fputs@s^0,w,c
  2817  001800  6ED9               	movwf	fsr2l,c
  2818  001802  5010               	movf	(fputs@i+1)^0,w,c
  2819  001804  200B               	addwfc	(fputs@s+1)^0,w,c
  2820  001806  6EDA               	movwf	fsr2h,c
  2821  001808  50DF               	movf	indf2,w,c
  2822  00180A  6E0E               	movwf	fputs@c^0,c
  2823  00180C  500E               	movf	fputs@c^0,w,c
  2824  00180E  A4D8               	btfss	status,2,c
  2825  001810  EF0C  F00C         	goto	u941
  2826  001814  EF0E  F00C         	goto	u940
  2827  001818                     u941:
  2828  001818  EFF3  F00B         	goto	l1763
  2829  00181C                     u940:
  2830  00181C  0012               	return		;funcret
  2831  00181E                     __end_of_fputs:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _fputc *****************
  2835 ;; Defined at:
  2836 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  c               2    0[COMRAM] int 
  2839 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2840 ;;		 -> sprintf@f(6), 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  2    0[COMRAM] int 
  2845 ;; Registers used:
  2846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2852 ;;      Params:         4       0       0       0       0       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2854 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2855 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2856 ;;Total ram usage:        9 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    1
  2859 ;; This function calls:
  2860 ;;		_putch
  2861 ;; This function is called by:
  2862 ;;		_pad
  2863 ;;		_vfpfcnvrt
  2864 ;;		_fputs
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text10
  2869  0011EA                     __ptext10:
  2870                           	callstack 0
  2871  0011EA                     _fputc:
  2872                           	callstack 23
  2873  0011EA  5003               	movf	fputc@fp^0,w,c
  2874  0011EC  1004               	iorwf	(fputc@fp+1)^0,w,c
  2875  0011EE  B4D8               	btfsc	status,2,c
  2876  0011F0  EFFC  F008         	goto	u901
  2877  0011F4  EFFE  F008         	goto	u900
  2878  0011F8                     u901:
  2879  0011F8  EF07  F009         	goto	l1751
  2880  0011FC                     u900:
  2881  0011FC  5003               	movf	fputc@fp^0,w,c
  2882  0011FE  1004               	iorwf	(fputc@fp+1)^0,w,c
  2883  001200  A4D8               	btfss	status,2,c
  2884  001202  EF05  F009         	goto	u911
  2885  001206  EF07  F009         	goto	u910
  2886  00120A                     u911:
  2887  00120A  EF0C  F009         	goto	l1753
  2888  00120E                     u910:
  2889  00120E                     l1751:
  2890  00120E  5001               	movf	fputc@c^0,w,c
  2891  001210  EC97  F00D         	call	_putch
  2892  001214  EF59  F009         	goto	l1045
  2893  001218                     l1753:
  2894  001218  EE20 F004          	lfsr	2,4
  2895  00121C  5003               	movf	fputc@fp^0,w,c
  2896  00121E  26D9               	addwf	fsr2l,f,c
  2897  001220  5004               	movf	(fputc@fp+1)^0,w,c
  2898  001222  22DA               	addwfc	fsr2h,f,c
  2899  001224  50DE               	movf	postinc2,w,c
  2900  001226  10DE               	iorwf	postinc2,w,c
  2901  001228  B4D8               	btfsc	status,2,c
  2902  00122A  EF19  F009         	goto	u921
  2903  00122E  EF1B  F009         	goto	u920
  2904  001232                     u921:
  2905  001232  EF36  F009         	goto	l1757
  2906  001236                     u920:
  2907  001236  EE20 F004          	lfsr	2,4
  2908  00123A  5003               	movf	fputc@fp^0,w,c
  2909  00123C  26D9               	addwf	fsr2l,f,c
  2910  00123E  5004               	movf	(fputc@fp+1)^0,w,c
  2911  001240  22DA               	addwfc	fsr2h,f,c
  2912  001242  EE10 F002          	lfsr	1,2
  2913  001246  5003               	movf	fputc@fp^0,w,c
  2914  001248  26E1               	addwf	fsr1l,f,c
  2915  00124A  5004               	movf	(fputc@fp+1)^0,w,c
  2916  00124C  22E2               	addwfc	fsr1h,f,c
  2917  00124E  50DE               	movf	postinc2,w,c
  2918  001250  5CE6               	subwf	postinc1,w,c
  2919  001252  50E6               	movf	postinc1,w,c
  2920  001254  0A80               	xorlw	128
  2921  001256  6E09               	movwf	(??_fputc+4)^0,c
  2922  001258  50DE               	movf	postinc2,w,c
  2923  00125A  0A80               	xorlw	128
  2924  00125C  5809               	subwfb	(??_fputc+4)^0,w,c
  2925  00125E  B0D8               	btfsc	status,0,c
  2926  001260  EF34  F009         	goto	u931
  2927  001264  EF36  F009         	goto	u930
  2928  001268                     u931:
  2929  001268  EF59  F009         	goto	l1045
  2930  00126C                     u930:
  2931  00126C                     l1757:
  2932  00126C  EE20 F002          	lfsr	2,2
  2933  001270  5003               	movf	fputc@fp^0,w,c
  2934  001272  26D9               	addwf	fsr2l,f,c
  2935  001274  5004               	movf	(fputc@fp+1)^0,w,c
  2936  001276  22DA               	addwfc	fsr2h,f,c
  2937  001278  CFDE F005          	movff	postinc2,??_fputc
  2938  00127C  CFDD F006          	movff	postdec2,??_fputc+1
  2939  001280  C003  FFD9         	movff	fputc@fp,fsr2l
  2940  001284  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2941  001288  CFDE F007          	movff	postinc2,??_fputc+2
  2942  00128C  CFDD F008          	movff	postdec2,??_fputc+3
  2943  001290  5005               	movf	??_fputc^0,w,c
  2944  001292  2407               	addwf	(??_fputc+2)^0,w,c
  2945  001294  6ED9               	movwf	fsr2l,c
  2946  001296  5006               	movf	(??_fputc+1)^0,w,c
  2947  001298  2008               	addwfc	(??_fputc+3)^0,w,c
  2948  00129A  6EDA               	movwf	fsr2h,c
  2949  00129C  C001  FFDF         	movff	fputc@c,indf2
  2950  0012A0  EE20 F002          	lfsr	2,2
  2951  0012A4  5003               	movf	fputc@fp^0,w,c
  2952  0012A6  26D9               	addwf	fsr2l,f,c
  2953  0012A8  5004               	movf	(fputc@fp+1)^0,w,c
  2954  0012AA  22DA               	addwfc	fsr2h,f,c
  2955  0012AC  2ADE               	incf	postinc2,f,c
  2956  0012AE  0E00               	movlw	0
  2957  0012B0  22DD               	addwfc	postdec2,f,c
  2958  0012B2                     l1045:
  2959  0012B2  0012               	return		;funcret
  2960  0012B4                     __end_of_fputc:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _putch *****************
  2964 ;; Defined at:
  2965 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  c               1    wreg     unsigned char 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  c               1    0[COMRAM] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2979 ;;      Params:         0       0       0       0       0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_fputc
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text11
  2993  001B2E                     __ptext11:
  2994                           	callstack 0
  2995  001B2E                     _putch:
  2996                           	callstack 23
  2997  001B2E  0012               	return		;funcret
  2998  001B30                     __end_of_putch:
  2999                           	callstack 0
  3000                           
  3001 ;; *************** function _isupper *****************
  3002 ;; Defined at:
  3003 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  c               2    0[COMRAM] int 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  2    0[COMRAM] int 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3017 ;;      Params:         2       0       0       0       0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3019 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3020 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3021 ;;Total ram usage:        6 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_xtoa
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text12
  3031  00194E                     __ptext12:
  3032                           	callstack 0
  3033  00194E                     _isupper:
  3034                           	callstack 26
  3035  00194E  0EBF               	movlw	191
  3036  001950  6E03               	movwf	??_isupper^0,c
  3037  001952  0EFF               	movlw	255
  3038  001954  6E04               	movwf	(??_isupper+1)^0,c
  3039  001956  C001  F005         	movff	isupper@c,??_isupper+2
  3040  00195A  C002  F006         	movff	isupper@c+1,??_isupper+3
  3041  00195E  5003               	movf	??_isupper^0,w,c
  3042  001960  2605               	addwf	(??_isupper+2)^0,f,c
  3043  001962  5004               	movf	(??_isupper+1)^0,w,c
  3044  001964  2206               	addwfc	(??_isupper+3)^0,f,c
  3045  001966  5006               	movf	(??_isupper+3)^0,w,c
  3046  001968  E10A               	bnz	u1020
  3047  00196A  0E1A               	movlw	26
  3048  00196C  5C05               	subwf	(??_isupper+2)^0,w,c
  3049  00196E  A0D8               	btfss	status,0,c
  3050  001970  EFBC  F00C         	goto	u1021
  3051  001974  EFBF  F00C         	goto	u1020
  3052  001978                     u1021:
  3053  001978  0E01               	movlw	1
  3054  00197A  EFC0  F00C         	goto	u1030
  3055  00197E                     u1020:
  3056  00197E  0E00               	movlw	0
  3057  001980                     u1030:
  3058  001980  6E01               	movwf	?_isupper^0,c
  3059  001982  6A02               	clrf	(?_isupper+1)^0,c
  3060  001984  0012               	return		;funcret
  3061  001986                     __end_of_isupper:
  3062                           	callstack 0
  3063                           
  3064 ;; *************** function _isalpha *****************
  3065 ;; Defined at:
  3066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  c               2    0[COMRAM] int 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  2    0[COMRAM] int 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3080 ;;      Params:         2       0       0       0       0       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3082 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3083 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3084 ;;Total ram usage:        6 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_xtoa
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text13
  3094  0018A0                     __ptext13:
  3095                           	callstack 0
  3096  0018A0                     _isalpha:
  3097                           	callstack 26
  3098  0018A0  0E9F               	movlw	159
  3099  0018A2  6E03               	movwf	??_isalpha^0,c
  3100  0018A4  0EFF               	movlw	255
  3101  0018A6  6E04               	movwf	(??_isalpha+1)^0,c
  3102  0018A8  0E20               	movlw	32
  3103  0018AA  1001               	iorwf	isalpha@c^0,w,c
  3104  0018AC  6E05               	movwf	(??_isalpha+2)^0,c
  3105  0018AE  0E00               	movlw	0
  3106  0018B0  1002               	iorwf	(isalpha@c+1)^0,w,c
  3107  0018B2  6E06               	movwf	(??_isalpha+3)^0,c
  3108  0018B4  5003               	movf	??_isalpha^0,w,c
  3109  0018B6  2605               	addwf	(??_isalpha+2)^0,f,c
  3110  0018B8  5004               	movf	(??_isalpha+1)^0,w,c
  3111  0018BA  2206               	addwfc	(??_isalpha+3)^0,f,c
  3112  0018BC  5006               	movf	(??_isalpha+3)^0,w,c
  3113  0018BE  E10A               	bnz	u1040
  3114  0018C0  0E1A               	movlw	26
  3115  0018C2  5C05               	subwf	(??_isalpha+2)^0,w,c
  3116  0018C4  A0D8               	btfss	status,0,c
  3117  0018C6  EF67  F00C         	goto	u1041
  3118  0018CA  EF6A  F00C         	goto	u1040
  3119  0018CE                     u1041:
  3120  0018CE  0E01               	movlw	1
  3121  0018D0  EF6B  F00C         	goto	u1050
  3122  0018D4                     u1040:
  3123  0018D4  0E00               	movlw	0
  3124  0018D6                     u1050:
  3125  0018D6  6E01               	movwf	?_isalpha^0,c
  3126  0018D8  6A02               	clrf	(?_isalpha+1)^0,c
  3127  0018DA  0012               	return		;funcret
  3128  0018DC                     __end_of_isalpha:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function _init_leds_botons *****************
  3132 ;; Defined at:
  3133 ;;		line 59 in file "RTC.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		None
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text14
  3161  001B26                     __ptext14:
  3162                           	callstack 0
  3163  001B26                     _init_leds_botons:
  3164                           	callstack 30
  3165  001B26                     
  3166                           ;RTC.c: 60:     TRISDbits.TRISD0 = 0;
  3167  001B26  9095               	bcf	149,0,c	;volatile
  3168                           
  3169                           ;RTC.c: 61:     TRISDbits.TRISD1 = 0;
  3170  001B28  9295               	bcf	149,1,c	;volatile
  3171                           
  3172                           ;RTC.c: 63:     TRISBbits.TRISB7 = 1;
  3173  001B2A  8E93               	bsf	147,7,c	;volatile
  3174  001B2C  0012               	return		;funcret
  3175  001B2E                     __end_of_init_leds_botons:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function _RTC_Read_Clock *****************
  3179 ;; Defined at:
  3180 ;;		line 27 in file "RTC.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  read_clock_a    1    wreg     unsigned char 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3194 ;;      Params:         0       0       0       0       0       0       0       0       0
  3195 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3196 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3197 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3198 ;;Total ram usage:        2 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    3
  3201 ;; This function calls:
  3202 ;;		_I2C_Read
  3203 ;;		_I2C_Repeated_Start
  3204 ;;		_I2C_Start
  3205 ;;		_I2C_Write
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text15
  3212  001794                     __ptext15:
  3213                           	callstack 0
  3214  001794                     _RTC_Read_Clock:
  3215                           	callstack 27
  3216                           
  3217                           ;incstack = 0
  3218                           ;RTC_Read_Clock@read_clock_address stored from wreg
  3219  001794  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  3220  001796                     
  3221                           ;RTC.c: 27: void RTC_Read_Clock(char read_clock_address);RTC.c: 28: {;RTC.c: 29:     I2C
      +                          _Start(0xD0);
  3222  001796  0ED0               	movlw	208
  3223  001798  ECF6  F00C         	call	_I2C_Start
  3224                           
  3225                           ;RTC.c: 30:     I2C_Write(read_clock_address);
  3226  00179C  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  3227  00179E  EC37  F00D         	call	_I2C_Write
  3228                           
  3229                           ;RTC.c: 31:     I2C_Repeated_Start(0xD1);
  3230  0017A2  0ED1               	movlw	209
  3231  0017A4  EC0D  F00D         	call	_I2C_Repeated_Start
  3232  0017A8                     
  3233                           ;RTC.c: 32:     sec = I2C_Read(0);
  3234  0017A8  0E00               	movlw	0
  3235  0017AA  EC6E  F00C         	call	_I2C_Read
  3236  0017AE  6E03               	movwf	??_RTC_Read_Clock^0,c
  3237  0017B0  5003               	movf	??_RTC_Read_Clock^0,w,c
  3238  0017B2  0100               	movlb	0	; () banked
  3239  0017B4  6FDB               	movwf	_sec& (0+255),b
  3240  0017B6  6BDC               	clrf	(_sec+1)& (0+255),b
  3241  0017B8                     
  3242                           ; BSR set to: 0
  3243                           ;RTC.c: 33:     min = I2C_Read(0);
  3244  0017B8  0E00               	movlw	0
  3245  0017BA  EC6E  F00C         	call	_I2C_Read
  3246  0017BE  6E03               	movwf	??_RTC_Read_Clock^0,c
  3247  0017C0  5003               	movf	??_RTC_Read_Clock^0,w,c
  3248  0017C2  0100               	movlb	0	; () banked
  3249  0017C4  6FD9               	movwf	_min& (0+255),b
  3250  0017C6  6BDA               	clrf	(_min+1)& (0+255),b
  3251  0017C8                     
  3252                           ; BSR set to: 0
  3253                           ;RTC.c: 34:     hour= I2C_Read(1);
  3254  0017C8  0E01               	movlw	1
  3255  0017CA  EC6E  F00C         	call	_I2C_Read
  3256  0017CE  6E03               	movwf	??_RTC_Read_Clock^0,c
  3257  0017D0  5003               	movf	??_RTC_Read_Clock^0,w,c
  3258  0017D2  0100               	movlb	0	; () banked
  3259  0017D4  6FD7               	movwf	_hour& (0+255),b
  3260  0017D6  6BD8               	clrf	(_hour+1)& (0+255),b
  3261  0017D8                     
  3262                           ; BSR set to: 0
  3263  0017D8  0012               	return		;funcret
  3264  0017DA                     __end_of_RTC_Read_Clock:
  3265                           	callstack 0
  3266                           
  3267 ;; *************** function _I2C_Start *****************
  3268 ;; Defined at:
  3269 ;;		line 68 in file "PIC18F4550_I2C_Source_File.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  slave_write_    1    wreg     unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  slave_write_    1    1[COMRAM] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      unsigned char 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0
  3284 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3286 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3287 ;;Total ram usage:        1 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    2
  3290 ;; This function calls:
  3291 ;;		_I2C_Write
  3292 ;; This function is called by:
  3293 ;;		_RTC_Read_Clock
  3294 ;;		_RTC_Clock_Write
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text16
  3299  0019EC                     __ptext16:
  3300                           	callstack 0
  3301  0019EC                     _I2C_Start:
  3302                           	callstack 27
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;incstack = 0
  3306                           ;I2C_Start@slave_write_address stored from wreg
  3307  0019EC  6E02               	movwf	I2C_Start@slave_write_address^0,c
  3308  0019EE                     
  3309                           ;PIC18F4550_I2C_Source_File.c: 68: char I2C_Start(char slave_write_address);PIC18F4550_I
      +                          2C_Source_File.c: 69: {;PIC18F4550_I2C_Source_File.c: 70:     SSPCON2bits.SEN=1;
  3310  0019EE  80C5               	bsf	197,0,c	;volatile
  3311  0019F0                     l223:
  3312  0019F0  B0C5               	btfsc	197,0,c	;volatile
  3313  0019F2  EFFD  F00C         	goto	u1361
  3314  0019F6  EFFF  F00C         	goto	u1360
  3315  0019FA                     u1361:
  3316  0019FA  EFF8  F00C         	goto	l223
  3317  0019FE                     u1360:
  3318  0019FE                     
  3319                           ;PIC18F4550_I2C_Source_File.c: 72:  SSPIF=0;
  3320  0019FE  969E               	bcf	3998,3,c	;volatile
  3321                           
  3322                           ;PIC18F4550_I2C_Source_File.c: 73:     if(!SSPSTATbits.S)
  3323  001A00  B6C7               	btfsc	199,3,c	;volatile
  3324  001A02  EF05  F00D         	goto	u1371
  3325  001A06  EF07  F00D         	goto	u1370
  3326  001A0A                     u1371:
  3327  001A0A  EF09  F00D         	goto	l1997
  3328  001A0E                     u1370:
  3329  001A0E  EF0C  F00D         	goto	l227
  3330  001A12                     l1997:
  3331                           
  3332                           ;PIC18F4550_I2C_Source_File.c: 75:     return (I2C_Write(slave_write_address));;	Return 
      +                          value of _I2C_Start is never used
  3333  001A12  5002               	movf	I2C_Start@slave_write_address^0,w,c
  3334  001A14  EC37  F00D         	call	_I2C_Write
  3335  001A18                     l227:
  3336  001A18  0012               	return		;funcret
  3337  001A1A                     __end_of_I2C_Start:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _I2C_Repeated_Start *****************
  3341 ;; Defined at:
  3342 ;;		line 79 in file "PIC18F4550_I2C_Source_File.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  slave_read_a    1    wreg     unsigned char 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      unsigned char 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0
  3357 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3359 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3360 ;;Total ram usage:        1 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    2
  3363 ;; This function calls:
  3364 ;;		_I2C_Write
  3365 ;; This function is called by:
  3366 ;;		_RTC_Read_Clock
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text17
  3371  001A1A                     __ptext17:
  3372                           	callstack 0
  3373  001A1A                     _I2C_Repeated_Start:
  3374                           	callstack 27
  3375                           
  3376                           ;incstack = 0
  3377                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  3378  001A1A  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  3379  001A1C                     
  3380                           ;PIC18F4550_I2C_Source_File.c: 79: char I2C_Repeated_Start(char slave_read_address);PIC1
      +                          8F4550_I2C_Source_File.c: 80: {;PIC18F4550_I2C_Source_File.c: 81:     RSEN = 1;
  3381  001A1C  82C5               	bsf	4037,1,c	;volatile
  3382  001A1E                     l230:
  3383  001A1E  B2C5               	btfsc	4037,1,c	;volatile
  3384  001A20  EF14  F00D         	goto	u1381
  3385  001A24  EF16  F00D         	goto	u1380
  3386  001A28                     u1381:
  3387  001A28  EF0F  F00D         	goto	l230
  3388  001A2C                     u1380:
  3389  001A2C                     
  3390                           ;PIC18F4550_I2C_Source_File.c: 83:     SSPIF = 0;
  3391  001A2C  969E               	bcf	3998,3,c	;volatile
  3392                           
  3393                           ;PIC18F4550_I2C_Source_File.c: 84:  if(!SSPSTATbits.S)
  3394  001A2E  B6C7               	btfsc	199,3,c	;volatile
  3395  001A30  EF1C  F00D         	goto	u1391
  3396  001A34  EF1E  F00D         	goto	u1390
  3397  001A38                     u1391:
  3398  001A38  EF20  F00D         	goto	l2005
  3399  001A3C                     u1390:
  3400  001A3C  EF23  F00D         	goto	l234
  3401  001A40                     l2005:
  3402                           
  3403                           ;PIC18F4550_I2C_Source_File.c: 86:     I2C_Write(slave_read_address);
  3404  001A40  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  3405  001A42  EC37  F00D         	call	_I2C_Write
  3406  001A46                     l234:
  3407  001A46  0012               	return		;funcret
  3408  001A48                     __end_of_I2C_Repeated_Start:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _I2C_Write *****************
  3412 ;; Defined at:
  3413 ;;		line 101 in file "PIC18F4550_I2C_Source_File.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  data            1    wreg     unsigned char 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  data            1    0[COMRAM] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      unsigned char 
  3420 ;; Registers used:
  3421 ;;		wreg, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3427 ;;      Params:         0       0       0       0       0       0       0       0       0
  3428 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3430 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3431 ;;Total ram usage:        1 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    1
  3434 ;; This function calls:
  3435 ;;		_I2C_Ready
  3436 ;; This function is called by:
  3437 ;;		_RTC_Read_Clock
  3438 ;;		_I2C_Start
  3439 ;;		_I2C_Repeated_Start
  3440 ;;		_RTC_Clock_Write
  3441 ;;		_I2C_Start_Wait
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text18
  3446  001A6E                     __ptext18:
  3447                           	callstack 0
  3448  001A6E                     _I2C_Write:
  3449                           	callstack 28
  3450                           
  3451                           ;incstack = 0
  3452                           ;I2C_Write@data stored from wreg
  3453  001A6E  6E01               	movwf	I2C_Write@data^0,c
  3454  001A70                     
  3455                           ;PIC18F4550_I2C_Source_File.c: 101: char I2C_Write(unsigned char data);PIC18F4550_I2C_So
      +                          urce_File.c: 102: {;PIC18F4550_I2C_Source_File.c: 103:       SSPBUF = data;
  3456  001A70  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3457  001A74                     
  3458                           ;PIC18F4550_I2C_Source_File.c: 104:       I2C_Ready();
  3459  001A74  EC8A  F00D         	call	_I2C_Ready	;wreg free
  3460  001A78                     
  3461                           ;PIC18F4550_I2C_Source_File.c: 105:       if (ACKSTAT)
  3462  001A78  ACC5               	btfss	4037,6,c	;volatile
  3463  001A7A  EF41  F00D         	goto	u1291
  3464  001A7E  EF43  F00D         	goto	u1290
  3465  001A82                     u1291:
  3466  001A82  EF46  F00D         	goto	l1919
  3467  001A86                     u1290:
  3468  001A86                     
  3469                           ;PIC18F4550_I2C_Source_File.c: 106:         return 1;
  3470  001A86  0E01               	movlw	1
  3471  001A88  EF47  F00D         	goto	l247
  3472  001A8C                     l1919:
  3473                           
  3474                           ;PIC18F4550_I2C_Source_File.c: 108:         return 2;
  3475  001A8C  0E02               	movlw	2
  3476  001A8E                     l247:
  3477  001A8E  0012               	return		;funcret
  3478  001A90                     __end_of_I2C_Write:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _I2C_Read *****************
  3482 ;; Defined at:
  3483 ;;		line 12 in file "PIC18F4550_I2C_Source_File.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  flag            1    wreg     unsigned char 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  flag            1    0[COMRAM] unsigned char 
  3488 ;;  buffer          1    1[COMRAM] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      unsigned char 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3498 ;;      Params:         0       0       0       0       0       0       0       0       0
  3499 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3501 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3502 ;;Total ram usage:        2 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    1
  3505 ;; This function calls:
  3506 ;;		_I2C_Ack
  3507 ;;		_I2C_Nack
  3508 ;;		_I2C_Ready
  3509 ;; This function is called by:
  3510 ;;		_RTC_Read_Clock
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text19
  3515  0018DC                     __ptext19:
  3516                           	callstack 0
  3517  0018DC                     _I2C_Read:
  3518                           	callstack 28
  3519                           
  3520                           ;incstack = 0
  3521                           ;I2C_Read@flag stored from wreg
  3522  0018DC  6E01               	movwf	I2C_Read@flag^0,c
  3523  0018DE                     
  3524                           ;PIC18F4550_I2C_Source_File.c: 12: char I2C_Read(char flag);PIC18F4550_I2C_Source_File.c
      +                          : 14: {;PIC18F4550_I2C_Source_File.c: 15:         char buffer;;PIC18F4550_I2C_Source_Fil
      +                          e.c: 16:         RCEN = 1;
  3525  0018DE  86C5               	bsf	4037,3,c	;volatile
  3526  0018E0                     l195:
  3527  0018E0  A0C7               	btfss	199,0,c	;volatile
  3528  0018E2  EF75  F00C         	goto	u1401
  3529  0018E6  EF77  F00C         	goto	u1400
  3530  0018EA                     u1401:
  3531  0018EA  EF70  F00C         	goto	l195
  3532  0018EE                     u1400:
  3533  0018EE                     
  3534                           ;PIC18F4550_I2C_Source_File.c: 19:         buffer = SSPBUF;
  3535  0018EE  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3536  0018F2                     
  3537                           ;PIC18F4550_I2C_Source_File.c: 21:         if(flag==0)
  3538  0018F2  5001               	movf	I2C_Read@flag^0,w,c
  3539  0018F4  A4D8               	btfss	status,2,c
  3540  0018F6  EF7F  F00C         	goto	u1411
  3541  0018FA  EF81  F00C         	goto	u1410
  3542  0018FE                     u1411:
  3543  0018FE  EF85  F00C         	goto	l2019
  3544  001902                     u1410:
  3545  001902                     
  3546                           ;PIC18F4550_I2C_Source_File.c: 22:             I2C_Ack();
  3547  001902  EC6C  F00D         	call	_I2C_Ack	;wreg free
  3548  001906  EF87  F00C         	goto	l199
  3549  00190A                     l2019:
  3550                           
  3551                           ;PIC18F4550_I2C_Source_File.c: 24:             I2C_Nack();
  3552  00190A  EC62  F00D         	call	_I2C_Nack	;wreg free
  3553  00190E                     l199:
  3554                           
  3555                           ;PIC18F4550_I2C_Source_File.c: 25:         I2C_Ready();
  3556  00190E  EC8A  F00D         	call	_I2C_Ready	;wreg free
  3557  001912                     
  3558                           ;PIC18F4550_I2C_Source_File.c: 26:         return(buffer);
  3559  001912  5002               	movf	I2C_Read@buffer^0,w,c
  3560  001914  0012               	return		;funcret
  3561  001916                     __end_of_I2C_Read:
  3562                           	callstack 0
  3563                           
  3564 ;; *************** function _I2C_Ready *****************
  3565 ;; Defined at:
  3566 ;;		line 43 in file "PIC18F4550_I2C_Source_File.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		None
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3580 ;;      Params:         0       0       0       0       0       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_I2C_Read
  3590 ;;		_I2C_Write
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text20
  3595  001B14                     __ptext20:
  3596                           	callstack 0
  3597  001B14                     _I2C_Ready:
  3598                           	callstack 28
  3599  001B14                     l206:
  3600  001B14  A69E               	btfss	3998,3,c	;volatile
  3601  001B16  EF8F  F00D         	goto	u1111
  3602  001B1A  EF91  F00D         	goto	u1110
  3603  001B1E                     u1111:
  3604  001B1E  EF8A  F00D         	goto	l206
  3605  001B22                     u1110:
  3606  001B22                     
  3607                           ;PIC18F4550_I2C_Source_File.c: 46:     SSPIF=0;
  3608  001B22  969E               	bcf	3998,3,c	;volatile
  3609  001B24  0012               	return		;funcret
  3610  001B26                     __end_of_I2C_Ready:
  3611                           	callstack 0
  3612                           
  3613 ;; *************** function _I2C_Nack *****************
  3614 ;; Defined at:
  3615 ;;		line 118 in file "PIC18F4550_I2C_Source_File.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		None
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3629 ;;      Params:         0       0       0       0       0       0       0       0       0
  3630 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3632 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3633 ;;Total ram usage:        0 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_I2C_Read
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text21
  3643  001AC4                     __ptext21:
  3644                           	callstack 0
  3645  001AC4                     _I2C_Nack:
  3646                           	callstack 28
  3647  001AC4                     
  3648                           ;PIC18F4550_I2C_Source_File.c: 120:     ACKDT=1;
  3649  001AC4  8AC5               	bsf	4037,5,c	;volatile
  3650                           
  3651                           ;PIC18F4550_I2C_Source_File.c: 121:  ACKEN=1;
  3652  001AC6  88C5               	bsf	4037,4,c	;volatile
  3653  001AC8                     l257:
  3654  001AC8  B8C5               	btfsc	4037,4,c	;volatile
  3655  001ACA  EF69  F00D         	goto	u1311
  3656  001ACE  EF6B  F00D         	goto	u1310
  3657  001AD2                     u1311:
  3658  001AD2  EF64  F00D         	goto	l257
  3659  001AD6                     u1310:
  3660  001AD6  0012               	return		;funcret
  3661  001AD8                     __end_of_I2C_Nack:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function _I2C_Ack *****************
  3665 ;; Defined at:
  3666 ;;		line 111 in file "PIC18F4550_I2C_Source_File.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		None
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3680 ;;      Params:         0       0       0       0       0       0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3683 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3684 ;;Total ram usage:        0 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_I2C_Read
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text22
  3694  001AD8                     __ptext22:
  3695                           	callstack 0
  3696  001AD8                     _I2C_Ack:
  3697                           	callstack 28
  3698  001AD8                     
  3699                           ;PIC18F4550_I2C_Source_File.c: 113:     ACKDT=0;
  3700  001AD8  9AC5               	bcf	4037,5,c	;volatile
  3701                           
  3702                           ;PIC18F4550_I2C_Source_File.c: 114:  ACKEN=1;
  3703  001ADA  88C5               	bsf	4037,4,c	;volatile
  3704  001ADC                     l251:
  3705  001ADC  B8C5               	btfsc	4037,4,c	;volatile
  3706  001ADE  EF73  F00D         	goto	u1301
  3707  001AE2  EF75  F00D         	goto	u1300
  3708  001AE6                     u1301:
  3709  001AE6  EF6E  F00D         	goto	l251
  3710  001AEA                     u1300:
  3711  001AEA  0012               	return		;funcret
  3712  001AEC                     __end_of_I2C_Ack:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function _LCD_String_xy *****************
  3716 ;; Defined at:
  3717 ;;		line 63 in file "LCD_16x2_4bit_mode.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  row             1    wreg     unsigned char 
  3720 ;;  pos             1   10[COMRAM] unsigned char 
  3721 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  3722 ;;		 -> main@counters_min(10), main@hours(10), STR_2(3), STR_1(3), 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  row             1   13[COMRAM] unsigned char 
  3725 ;;  location        1   14[COMRAM] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3735 ;;      Params:         3       0       0       0       0       0       0       0       0
  3736 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3738 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3739 ;;Total ram usage:        5 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    3
  3742 ;; This function calls:
  3743 ;;		_LCD_Command
  3744 ;;		_LCD_String
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text23
  3751  001860                     __ptext23:
  3752                           	callstack 0
  3753  001860                     _LCD_String_xy:
  3754                           	callstack 27
  3755                           
  3756                           ;incstack = 0
  3757                           ;LCD_String_xy@row stored from wreg
  3758  001860  6E0E               	movwf	LCD_String_xy@row^0,c
  3759  001862                     
  3760                           ;LCD_16x2_4bit_mode.c: 66:     if(row<=1)
  3761  001862  0E02               	movlw	2
  3762  001864  600E               	cpfslt	LCD_String_xy@row^0,c
  3763  001866  EF37  F00C         	goto	u1591
  3764  00186A  EF39  F00C         	goto	u1590
  3765  00186E                     u1591:
  3766  00186E  EF42  F00C         	goto	l2191
  3767  001872                     u1590:
  3768  001872                     
  3769                           ;LCD_16x2_4bit_mode.c: 67:     {;LCD_16x2_4bit_mode.c: 68:         location = (0x80) | (
      +                          (pos) & 0x0f);
  3770  001872  500B               	movf	LCD_String_xy@pos^0,w,c
  3771  001874  0B0F               	andlw	15
  3772  001876  0980               	iorlw	128
  3773  001878  6E0F               	movwf	LCD_String_xy@location^0,c
  3774  00187A                     
  3775                           ;LCD_16x2_4bit_mode.c: 69:         LCD_Command(location);
  3776  00187A  500F               	movf	LCD_String_xy@location^0,w,c
  3777  00187C  EC7F  F00B         	call	_LCD_Command
  3778                           
  3779                           ;LCD_16x2_4bit_mode.c: 70:     }
  3780  001880  EF49  F00C         	goto	l2195
  3781  001884                     l2191:
  3782                           
  3783                           ;LCD_16x2_4bit_mode.c: 72:     {;LCD_16x2_4bit_mode.c: 73:         location = (0xC0) | (
      +                          (pos) & 0x0f);
  3784  001884  500B               	movf	LCD_String_xy@pos^0,w,c
  3785  001886  0B0F               	andlw	15
  3786  001888  09C0               	iorlw	192
  3787  00188A  6E0F               	movwf	LCD_String_xy@location^0,c
  3788  00188C                     
  3789                           ;LCD_16x2_4bit_mode.c: 74:         LCD_Command(location);
  3790  00188C  500F               	movf	LCD_String_xy@location^0,w,c
  3791  00188E  EC7F  F00B         	call	_LCD_Command
  3792  001892                     l2195:
  3793                           
  3794                           ;LCD_16x2_4bit_mode.c: 78:     LCD_String(msg);
  3795  001892  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
  3796  001896  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3797  00189A  ECD5  F00A         	call	_LCD_String	;wreg free
  3798  00189E  0012               	return		;funcret
  3799  0018A0                     __end_of_LCD_String_xy:
  3800                           	callstack 0
  3801                           
  3802 ;; *************** function _LCD_String *****************
  3803 ;; Defined at:
  3804 ;;		line 53 in file "LCD_16x2_4bit_mode.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  msg             2    8[COMRAM] PTR const unsigned char 
  3807 ;;		 -> main@counters_pomos(10), main@counters_sec(10), main@counters_min(10), main@hours(10), 
  3808 ;;		 -> main@mins(10), main@secs(10), STR_2(3), STR_1(3), 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3820 ;;      Params:         2       0       0       0       0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3823 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3824 ;;Total ram usage:        2 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    2
  3827 ;; This function calls:
  3828 ;;		_LCD_Char
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;;		_LCD_String_xy
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text24
  3836  0015AA                     __ptext24:
  3837                           	callstack 0
  3838  0015AA                     _LCD_String:
  3839                           	callstack 27
  3840  0015AA                     
  3841                           ;LCD_16x2_4bit_mode.c: 53: void LCD_String(const char *msg);LCD_16x2_4bit_mode.c: 54: {;
      +                          LCD_16x2_4bit_mode.c: 55:  while((*msg)!=0)
  3842  0015AA  EFEB  F00A         	goto	l2031
  3843  0015AE                     l2027:
  3844                           
  3845                           ;LCD_16x2_4bit_mode.c: 56:  {;LCD_16x2_4bit_mode.c: 57:    LCD_Char(*msg);
  3846  0015AE  C009  FFF6         	movff	LCD_String@msg,tblptrl
  3847  0015B2  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  3848  0015B6  6AF8               	clrf	tblptru,c
  3849  0015B8  0E07               	movlw	(high __ramtop+-1)
  3850  0015BA  64F7               	cpfsgt	tblptrh,c
  3851  0015BC  D003               	bra	u1427
  3852  0015BE  0008               	tblrd		*
  3853  0015C0  50F5               	movf	tablat,w,c
  3854  0015C2  D005               	bra	u1420
  3855  0015C4                     u1427:
  3856  0015C4  CFF6 FFE1          	movff	tblptrl,fsr1l
  3857  0015C8  CFF7 FFE2          	movff	tblptrh,fsr1h
  3858  0015CC  50E7               	movf	indf1,w,c
  3859  0015CE                     u1420:
  3860  0015CE  EC59  F00B         	call	_LCD_Char
  3861  0015D2                     
  3862                           ;LCD_16x2_4bit_mode.c: 58:    msg++;
  3863  0015D2  4A09               	infsnz	LCD_String@msg^0,f,c
  3864  0015D4  2A0A               	incf	(LCD_String@msg+1)^0,f,c
  3865  0015D6                     l2031:
  3866                           
  3867                           ;LCD_16x2_4bit_mode.c: 55:  while((*msg)!=0)
  3868  0015D6  C009  FFF6         	movff	LCD_String@msg,tblptrl
  3869  0015DA  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  3870  0015DE  6AF8               	clrf	tblptru,c
  3871  0015E0  0E07               	movlw	(high __ramtop+-1)
  3872  0015E2  64F7               	cpfsgt	tblptrh,c
  3873  0015E4  D003               	bra	u1437
  3874  0015E6  0008               	tblrd		*
  3875  0015E8  50F5               	movf	tablat,w,c
  3876  0015EA  D005               	bra	u1430
  3877  0015EC                     u1437:
  3878  0015EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3879  0015F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3880  0015F4  50E7               	movf	indf1,w,c
  3881  0015F6                     u1430:
  3882  0015F6  0900               	iorlw	0
  3883  0015F8  A4D8               	btfss	status,2,c
  3884  0015FA  EF01  F00B         	goto	u1441
  3885  0015FE  EF03  F00B         	goto	u1440
  3886  001602                     u1441:
  3887  001602  EFD7  F00A         	goto	l2027
  3888  001606                     u1440:
  3889  001606  0012               	return		;funcret
  3890  001608                     __end_of_LCD_String:
  3891                           	callstack 0
  3892                           
  3893 ;; *************** function _LCD_Char *****************
  3894 ;; Defined at:
  3895 ;;		line 39 in file "LCD_16x2_4bit_mode.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  dat             1    wreg     unsigned char 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  dat             1    7[COMRAM] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3909 ;;      Params:         0       0       0       0       0       0       0       0       0
  3910 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3911 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3912 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3913 ;;Total ram usage:        2 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    1
  3916 ;; This function calls:
  3917 ;;		_MSdelay
  3918 ;; This function is called by:
  3919 ;;		_LCD_String
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text25
  3924  0016B2                     __ptext25:
  3925                           	callstack 0
  3926  0016B2                     _LCD_Char:
  3927                           	callstack 27
  3928                           
  3929                           ;incstack = 0
  3930                           ;LCD_Char@dat stored from wreg
  3931  0016B2  6E08               	movwf	LCD_Char@dat^0,c
  3932  0016B4                     
  3933                           ;LCD_16x2_4bit_mode.c: 39: void LCD_Char(unsigned char dat);LCD_16x2_4bit_mode.c: 40: {;
      +                          LCD_16x2_4bit_mode.c: 41:  LATD = (LATD & 0x0f) | (0xF0 & dat);
  3934  0016B4  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  3935  0016B8  0EF0               	movlw	240
  3936  0016BA  1607               	andwf	??_LCD_Char^0,f,c
  3937  0016BC  508C               	movf	140,w,c	;volatile
  3938  0016BE  0B0F               	andlw	15
  3939  0016C0  1007               	iorwf	??_LCD_Char^0,w,c
  3940  0016C2  6E8C               	movwf	140,c	;volatile
  3941  0016C4                     
  3942                           ;LCD_16x2_4bit_mode.c: 42:  LATD2 = 1;
  3943  0016C4  848C               	bsf	3980,2,c	;volatile
  3944  0016C6                     
  3945                           ;LCD_16x2_4bit_mode.c: 43:  LATD3 = 1;
  3946  0016C6  868C               	bsf	3980,3,c	;volatile
  3947  0016C8                     
  3948                           ;LCD_16x2_4bit_mode.c: 44:  __nop();
  3949  0016C8  F000               	nop	
  3950  0016CA                     
  3951                           ;LCD_16x2_4bit_mode.c: 45:  LATD3 = 0;
  3952  0016CA  968C               	bcf	3980,3,c	;volatile
  3953  0016CC                     
  3954                           ;LCD_16x2_4bit_mode.c: 46:  MSdelay(1);
  3955  0016CC  0E00               	movlw	0
  3956  0016CE  6E02               	movwf	(MSdelay@val+1)^0,c
  3957  0016D0  0E01               	movlw	1
  3958  0016D2  6E01               	movwf	MSdelay@val^0,c
  3959  0016D4  ECA5  F00B         	call	_MSdelay	;wreg free
  3960  0016D8                     
  3961                           ;LCD_16x2_4bit_mode.c: 47:     LATD = (LATD & 0x0f) | (dat<<4);
  3962  0016D8  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  3963  0016DC  3A07               	swapf	??_LCD_Char^0,f,c
  3964  0016DE  0EF0               	movlw	240
  3965  0016E0  1607               	andwf	??_LCD_Char^0,f,c
  3966  0016E2  508C               	movf	140,w,c	;volatile
  3967  0016E4  0B0F               	andlw	15
  3968  0016E6  1007               	iorwf	??_LCD_Char^0,w,c
  3969  0016E8  6E8C               	movwf	140,c	;volatile
  3970  0016EA                     
  3971                           ;LCD_16x2_4bit_mode.c: 48:  LATD3 = 1;
  3972  0016EA  868C               	bsf	3980,3,c	;volatile
  3973  0016EC                     
  3974                           ;LCD_16x2_4bit_mode.c: 49:  __nop();
  3975  0016EC  F000               	nop	
  3976  0016EE                     
  3977                           ;LCD_16x2_4bit_mode.c: 50:  LATD3 = 0;
  3978  0016EE  968C               	bcf	3980,3,c	;volatile
  3979                           
  3980                           ;LCD_16x2_4bit_mode.c: 51:  MSdelay(3);
  3981  0016F0  0E00               	movlw	0
  3982  0016F2  6E02               	movwf	(MSdelay@val+1)^0,c
  3983  0016F4  0E03               	movlw	3
  3984  0016F6  6E01               	movwf	MSdelay@val^0,c
  3985  0016F8  ECA5  F00B         	call	_MSdelay	;wreg free
  3986  0016FC  0012               	return		;funcret
  3987  0016FE                     __end_of_LCD_Char:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _LCD_Init *****************
  3991 ;; Defined at:
  3992 ;;		line 8 in file "LCD_16x2_4bit_mode.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4006 ;;      Params:         0       0       0       0       0       0       0       0       0
  4007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4009 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4010 ;;Total ram usage:        0 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    2
  4013 ;; This function calls:
  4014 ;;		_LCD_Command
  4015 ;;		_MSdelay
  4016 ;; This function is called by:
  4017 ;;		_main
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text26
  4022  0019BC                     __ptext26:
  4023                           	callstack 0
  4024  0019BC                     _LCD_Init:
  4025                           	callstack 28
  4026  0019BC                     
  4027                           ;LCD_16x2_4bit_mode.c: 10:     TRISD = 0;
  4028  0019BC  0E00               	movlw	0
  4029  0019BE  6E95               	movwf	149,c	;volatile
  4030  0019C0                     
  4031                           ;LCD_16x2_4bit_mode.c: 11:     MSdelay(20);
  4032  0019C0  0E00               	movlw	0
  4033  0019C2  6E02               	movwf	(MSdelay@val+1)^0,c
  4034  0019C4  0E14               	movlw	20
  4035  0019C6  6E01               	movwf	MSdelay@val^0,c
  4036  0019C8  ECA5  F00B         	call	_MSdelay	;wreg free
  4037  0019CC                     
  4038                           ;LCD_16x2_4bit_mode.c: 12:     LCD_Command(0x02);
  4039  0019CC  0E02               	movlw	2
  4040  0019CE  EC7F  F00B         	call	_LCD_Command
  4041  0019D2                     
  4042                           ;LCD_16x2_4bit_mode.c: 14:     LCD_Command(0x28);
  4043  0019D2  0E28               	movlw	40
  4044  0019D4  EC7F  F00B         	call	_LCD_Command
  4045  0019D8                     
  4046                           ;LCD_16x2_4bit_mode.c: 16:  LCD_Command(0x01);
  4047  0019D8  0E01               	movlw	1
  4048  0019DA  EC7F  F00B         	call	_LCD_Command
  4049  0019DE                     
  4050                           ;LCD_16x2_4bit_mode.c: 17:     LCD_Command(0x0c);
  4051  0019DE  0E0C               	movlw	12
  4052  0019E0  EC7F  F00B         	call	_LCD_Command
  4053  0019E4                     
  4054                           ;LCD_16x2_4bit_mode.c: 18:  LCD_Command(0x06);
  4055  0019E4  0E06               	movlw	6
  4056  0019E6  EC7F  F00B         	call	_LCD_Command
  4057  0019EA  0012               	return		;funcret
  4058  0019EC                     __end_of_LCD_Init:
  4059                           	callstack 0
  4060                           
  4061 ;; *************** function _LCD_Clear *****************
  4062 ;; Defined at:
  4063 ;;		line 82 in file "LCD_16x2_4bit_mode.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;		None
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;		None
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      void 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4077 ;;      Params:         0       0       0       0       0       0       0       0       0
  4078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4080 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4081 ;;Total ram usage:        0 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:    2
  4084 ;; This function calls:
  4085 ;;		_LCD_Command
  4086 ;;		_MSdelay
  4087 ;; This function is called by:
  4088 ;;		_main
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text27
  4093  001AEC                     __ptext27:
  4094                           	callstack 0
  4095  001AEC                     _LCD_Clear:
  4096                           	callstack 28
  4097  001AEC                     
  4098                           ;LCD_16x2_4bit_mode.c: 84:     LCD_Command(0x01);
  4099  001AEC  0E01               	movlw	1
  4100  001AEE  EC7F  F00B         	call	_LCD_Command
  4101                           
  4102                           ;LCD_16x2_4bit_mode.c: 85:     MSdelay(3);
  4103  001AF2  0E00               	movlw	0
  4104  001AF4  6E02               	movwf	(MSdelay@val+1)^0,c
  4105  001AF6  0E03               	movlw	3
  4106  001AF8  6E01               	movwf	MSdelay@val^0,c
  4107  001AFA  ECA5  F00B         	call	_MSdelay	;wreg free
  4108  001AFE  0012               	return		;funcret
  4109  001B00                     __end_of_LCD_Clear:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _LCD_Command *****************
  4113 ;; Defined at:
  4114 ;;		line 21 in file "LCD_16x2_4bit_mode.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  cmd             1    wreg     unsigned char 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  cmd             1    7[COMRAM] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0
  4129 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4130 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4131 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4132 ;;Total ram usage:        2 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    1
  4135 ;; This function calls:
  4136 ;;		_MSdelay
  4137 ;; This function is called by:
  4138 ;;		_LCD_Init
  4139 ;;		_LCD_String_xy
  4140 ;;		_LCD_Clear
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text28
  4145  0016FE                     __ptext28:
  4146                           	callstack 0
  4147  0016FE                     _LCD_Command:
  4148                           	callstack 28
  4149                           
  4150                           ;incstack = 0
  4151                           ;LCD_Command@cmd stored from wreg
  4152  0016FE  6E08               	movwf	LCD_Command@cmd^0,c
  4153  001700                     
  4154                           ;LCD_16x2_4bit_mode.c: 21: void LCD_Command(unsigned char cmd );LCD_16x2_4bit_mode.c: 22
      +                          : {;LCD_16x2_4bit_mode.c: 23:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
  4155  001700  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  4156  001704  0EF0               	movlw	240
  4157  001706  1607               	andwf	??_LCD_Command^0,f,c
  4158  001708  508C               	movf	140,w,c	;volatile
  4159  00170A  0B0F               	andlw	15
  4160  00170C  1007               	iorwf	??_LCD_Command^0,w,c
  4161  00170E  6E8C               	movwf	140,c	;volatile
  4162  001710                     
  4163                           ;LCD_16x2_4bit_mode.c: 24:  LATD2 = 0;
  4164  001710  948C               	bcf	3980,2,c	;volatile
  4165  001712                     
  4166                           ;LCD_16x2_4bit_mode.c: 25:  LATD3 = 1;
  4167  001712  868C               	bsf	3980,3,c	;volatile
  4168  001714                     
  4169                           ;LCD_16x2_4bit_mode.c: 26:  __nop();
  4170  001714  F000               	nop	
  4171  001716                     
  4172                           ;LCD_16x2_4bit_mode.c: 27:  LATD3 = 0;
  4173  001716  968C               	bcf	3980,3,c	;volatile
  4174  001718                     
  4175                           ;LCD_16x2_4bit_mode.c: 28:  MSdelay(1);
  4176  001718  0E00               	movlw	0
  4177  00171A  6E02               	movwf	(MSdelay@val+1)^0,c
  4178  00171C  0E01               	movlw	1
  4179  00171E  6E01               	movwf	MSdelay@val^0,c
  4180  001720  ECA5  F00B         	call	_MSdelay	;wreg free
  4181  001724                     
  4182                           ;LCD_16x2_4bit_mode.c: 29:     LATD = (LATD & 0x0f) | (cmd<<4);
  4183  001724  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  4184  001728  3A07               	swapf	??_LCD_Command^0,f,c
  4185  00172A  0EF0               	movlw	240
  4186  00172C  1607               	andwf	??_LCD_Command^0,f,c
  4187  00172E  508C               	movf	140,w,c	;volatile
  4188  001730  0B0F               	andlw	15
  4189  001732  1007               	iorwf	??_LCD_Command^0,w,c
  4190  001734  6E8C               	movwf	140,c	;volatile
  4191  001736                     
  4192                           ;LCD_16x2_4bit_mode.c: 30:  LATD3 = 1;
  4193  001736  868C               	bsf	3980,3,c	;volatile
  4194  001738                     
  4195                           ;LCD_16x2_4bit_mode.c: 31:  __nop();
  4196  001738  F000               	nop	
  4197  00173A                     
  4198                           ;LCD_16x2_4bit_mode.c: 32:  LATD3 = 0;
  4199  00173A  968C               	bcf	3980,3,c	;volatile
  4200                           
  4201                           ;LCD_16x2_4bit_mode.c: 33:  MSdelay(3);
  4202  00173C  0E00               	movlw	0
  4203  00173E  6E02               	movwf	(MSdelay@val+1)^0,c
  4204  001740  0E03               	movlw	3
  4205  001742  6E01               	movwf	MSdelay@val^0,c
  4206  001744  ECA5  F00B         	call	_MSdelay	;wreg free
  4207  001748  0012               	return		;funcret
  4208  00174A                     __end_of_LCD_Command:
  4209                           	callstack 0
  4210                           
  4211 ;; *************** function _MSdelay *****************
  4212 ;; Defined at:
  4213 ;;		line 88 in file "LCD_16x2_4bit_mode.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  val             2    0[COMRAM] unsigned int 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  j               2    4[COMRAM] unsigned int 
  4218 ;;  i               2    2[COMRAM] unsigned int 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4228 ;;      Params:         2       0       0       0       0       0       0       0       0
  4229 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4231 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4232 ;;Total ram usage:        6 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_main
  4238 ;;		_LCD_Init
  4239 ;;		_LCD_Command
  4240 ;;		_LCD_Char
  4241 ;;		_LCD_Clear
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text29
  4246  00174A                     __ptext29:
  4247                           	callstack 0
  4248  00174A                     _MSdelay:
  4249                           	callstack 30
  4250  00174A                     
  4251                           ;LCD_16x2_4bit_mode.c: 88: void MSdelay(unsigned int val);LCD_16x2_4bit_mode.c: 89: {;LC
      +                          D_16x2_4bit_mode.c: 90:  unsigned int i,j;;LCD_16x2_4bit_mode.c: 91:  for(i=0;i<val;i++)
  4252  00174A  0E00               	movlw	0
  4253  00174C  6E04               	movwf	(MSdelay@i+1)^0,c
  4254  00174E  0E00               	movlw	0
  4255  001750  6E03               	movwf	MSdelay@i^0,c
  4256  001752  EFBE  F00B         	goto	l1837
  4257  001756                     l1825:
  4258                           
  4259                           ;LCD_16x2_4bit_mode.c: 92:      for(j=0;j<165;j++);
  4260  001756  0E00               	movlw	0
  4261  001758  6E06               	movwf	(MSdelay@j+1)^0,c
  4262  00175A  0E00               	movlw	0
  4263  00175C  6E05               	movwf	MSdelay@j^0,c
  4264  00175E                     l1831:
  4265  00175E  4A05               	infsnz	MSdelay@j^0,f,c
  4266  001760  2A06               	incf	(MSdelay@j+1)^0,f,c
  4267  001762  5006               	movf	(MSdelay@j+1)^0,w,c
  4268  001764  E109               	bnz	u1090
  4269  001766  0EA5               	movlw	165
  4270  001768  5C05               	subwf	MSdelay@j^0,w,c
  4271  00176A  A0D8               	btfss	status,0,c
  4272  00176C  EFBA  F00B         	goto	u1091
  4273  001770  EFBC  F00B         	goto	u1090
  4274  001774                     u1091:
  4275  001774  EFAF  F00B         	goto	l1831
  4276  001778                     u1090:
  4277  001778  4A03               	infsnz	MSdelay@i^0,f,c
  4278  00177A  2A04               	incf	(MSdelay@i+1)^0,f,c
  4279  00177C                     l1837:
  4280  00177C  5001               	movf	MSdelay@val^0,w,c
  4281  00177E  5C03               	subwf	MSdelay@i^0,w,c
  4282  001780  5002               	movf	(MSdelay@val+1)^0,w,c
  4283  001782  5804               	subwfb	(MSdelay@i+1)^0,w,c
  4284  001784  A0D8               	btfss	status,0,c
  4285  001786  EFC7  F00B         	goto	u1101
  4286  00178A  EFC9  F00B         	goto	u1100
  4287  00178E                     u1101:
  4288  00178E  EFAB  F00B         	goto	l1825
  4289  001792                     u1100:
  4290  001792  0012               	return		;funcret
  4291  001794                     __end_of_MSdelay:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function _I2C_Stop *****************
  4295 ;; Defined at:
  4296 ;;		line 93 in file "PIC18F4550_I2C_Source_File.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      unsigned char 
  4303 ;; Registers used:
  4304 ;;		wreg
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4313 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4314 ;;Total ram usage:        0 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_main
  4320 ;;		_RTC_Clock_Write
  4321 ;;		_I2C_Start_Wait
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text30
  4326  001B00                     __ptext30:
  4327                           	callstack 0
  4328  001B00                     _I2C_Stop:
  4329                           	callstack 30
  4330  001B00                     
  4331                           ;PIC18F4550_I2C_Source_File.c: 95:     PEN = 1;
  4332  001B00  84C5               	bsf	4037,2,c	;volatile
  4333  001B02                     l239:
  4334  001B02  B4C5               	btfsc	4037,2,c	;volatile
  4335  001B04  EF86  F00D         	goto	u1581
  4336  001B08  EF88  F00D         	goto	u1580
  4337  001B0C                     u1581:
  4338  001B0C  EF81  F00D         	goto	l239
  4339  001B10                     u1580:
  4340  001B10                     
  4341                           ;PIC18F4550_I2C_Source_File.c: 97:     if(!SSPSTATbits.P);
  4342  001B10  50C7               	movf	199,w,c	;volatile
  4343  001B12  0012               	return		;funcret
  4344  001B14                     __end_of_I2C_Stop:
  4345                           	callstack 0
  4346                           
  4347 ;; *************** function _I2C_Init *****************
  4348 ;; Defined at:
  4349 ;;		line 29 in file "PIC18F4550_I2C_Source_File.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4363 ;;      Params:         0       0       0       0       0       0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4366 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4367 ;;Total ram usage:        0 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_main
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text31
  4377  001AAA                     __ptext31:
  4378                           	callstack 0
  4379  001AAA                     _I2C_Init:
  4380                           	callstack 30
  4381  001AAA                     
  4382                           ;PIC18F4550_I2C_Source_File.c: 31:     TRISB0=1;
  4383  001AAA  8093               	bsf	3987,0,c	;volatile
  4384                           
  4385                           ;PIC18F4550_I2C_Source_File.c: 32:  TRISB1=1;
  4386  001AAC  8293               	bsf	3987,1,c	;volatile
  4387  001AAE                     
  4388                           ;PIC18F4550_I2C_Source_File.c: 33:  SSPSTAT=80;
  4389  001AAE  0E50               	movlw	80
  4390  001AB0  6EC7               	movwf	199,c	;volatile
  4391                           
  4392                           ;PIC18F4550_I2C_Source_File.c: 34:     SSPCON1=0x28;
  4393  001AB2  0E28               	movlw	40
  4394  001AB4  6EC6               	movwf	198,c	;volatile
  4395                           
  4396                           ;PIC18F4550_I2C_Source_File.c: 36:  SSPCON2=0;
  4397  001AB6  0E00               	movlw	0
  4398  001AB8  6EC5               	movwf	197,c	;volatile
  4399                           
  4400                           ;PIC18F4550_I2C_Source_File.c: 37:     SSPADD=((8000000/(4*100000))-1);
  4401  001ABA  0E13               	movlw	19
  4402  001ABC  6EC8               	movwf	200,c	;volatile
  4403  001ABE                     
  4404                           ;PIC18F4550_I2C_Source_File.c: 38:     SSPIE=1;
  4405  001ABE  869D               	bsf	3997,3,c	;volatile
  4406  001AC0                     
  4407                           ;PIC18F4550_I2C_Source_File.c: 39:     SSPIF=0;
  4408  001AC0  969E               	bcf	3998,3,c	;volatile
  4409  001AC2  0012               	return		;funcret
  4410  001AC4                     __end_of_I2C_Init:
  4411                           	callstack 0
  4412                           
  4413 ;; *************** function _Dec2Bcd *****************
  4414 ;; Defined at:
  4415 ;;		line 95 in file "LCD_16x2_4bit_mode.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  dec             2    8[COMRAM] int 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  bdc             2   12[COMRAM] int 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  2    8[COMRAM] int 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4429 ;;      Params:         2       0       0       0       0       0       0       0       0
  4430 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4431 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4432 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4433 ;;Total ram usage:        6 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    1
  4436 ;; This function calls:
  4437 ;;		___awdiv
  4438 ;;		___awmod
  4439 ;; This function is called by:
  4440 ;;		_main
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text32
  4445  001608                     __ptext32:
  4446                           	callstack 0
  4447  001608                     _Dec2Bcd:
  4448                           	callstack 29
  4449  001608                     
  4450                           ;LCD_16x2_4bit_mode.c: 96:     int bdc;;LCD_16x2_4bit_mode.c: 97:     bdc = ((dec/10) <<
      +                           4) + (dec % 10);
  4451  001608  C009  F001         	movff	Dec2Bcd@dec,___awdiv@dividend
  4452  00160C  C00A  F002         	movff	Dec2Bcd@dec+1,___awdiv@dividend+1
  4453  001610  0E00               	movlw	0
  4454  001612  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4455  001614  0E0A               	movlw	10
  4456  001616  6E03               	movwf	___awdiv@divisor^0,c
  4457  001618  EC5A  F009         	call	___awdiv	;wreg free
  4458  00161C  C001  F00B         	movff	?___awdiv,??_Dec2Bcd
  4459  001620  C002  F00C         	movff	?___awdiv+1,??_Dec2Bcd+1
  4460  001624  3A0B               	swapf	??_Dec2Bcd^0,f,c
  4461  001626  3A0C               	swapf	(??_Dec2Bcd+1)^0,f,c
  4462  001628  0EF0               	movlw	240
  4463  00162A  160C               	andwf	(??_Dec2Bcd+1)^0,f,c
  4464  00162C  500B               	movf	??_Dec2Bcd^0,w,c
  4465  00162E  0B0F               	andlw	15
  4466  001630  120C               	iorwf	(??_Dec2Bcd+1)^0,f,c
  4467  001632  0EF0               	movlw	240
  4468  001634  160B               	andwf	??_Dec2Bcd^0,f,c
  4469  001636  C009  F001         	movff	Dec2Bcd@dec,___awmod@dividend
  4470  00163A  C00A  F002         	movff	Dec2Bcd@dec+1,___awmod@dividend+1
  4471  00163E  0E00               	movlw	0
  4472  001640  6E04               	movwf	(___awmod@divisor+1)^0,c
  4473  001642  0E0A               	movlw	10
  4474  001644  6E03               	movwf	___awmod@divisor^0,c
  4475  001646  EC1D  F00A         	call	___awmod	;wreg free
  4476  00164A  5001               	movf	?___awmod^0,w,c
  4477  00164C  240B               	addwf	??_Dec2Bcd^0,w,c
  4478  00164E  6E0D               	movwf	Dec2Bcd@bdc^0,c
  4479  001650  5002               	movf	(?___awmod+1)^0,w,c
  4480  001652  200C               	addwfc	(??_Dec2Bcd+1)^0,w,c
  4481  001654  6E0E               	movwf	(Dec2Bcd@bdc+1)^0,c
  4482  001656                     
  4483                           ;LCD_16x2_4bit_mode.c: 98:     return bdc;
  4484  001656  C00D  F009         	movff	Dec2Bcd@bdc,?_Dec2Bcd
  4485  00165A  C00E  F00A         	movff	Dec2Bcd@bdc+1,?_Dec2Bcd+1
  4486  00165E  0012               	return		;funcret
  4487  001660                     __end_of_Dec2Bcd:
  4488                           	callstack 0
  4489                           
  4490 ;; *************** function ___awmod *****************
  4491 ;; Defined at:
  4492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  dividend        2    0[COMRAM] int 
  4495 ;;  divisor         2    2[COMRAM] int 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  sign            1    5[COMRAM] unsigned char 
  4498 ;;  counter         1    4[COMRAM] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  2    0[COMRAM] int 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4508 ;;      Params:         4       0       0       0       0       0       0       0       0
  4509 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4511 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4512 ;;Total ram usage:        6 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_main
  4518 ;;		_Dec2Bcd
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text33
  4523  00143A                     __ptext33:
  4524                           	callstack 0
  4525  00143A                     ___awmod:
  4526                           	callstack 30
  4527  00143A  0E00               	movlw	0
  4528  00143C  6E06               	movwf	___awmod@sign^0,c
  4529  00143E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4530  001440  EF26  F00A         	goto	u1510
  4531  001444  EF24  F00A         	goto	u1511
  4532  001448                     u1511:
  4533  001448  EF2C  F00A         	goto	l2111
  4534  00144C                     u1510:
  4535  00144C  6C01               	negf	___awmod@dividend^0,c
  4536  00144E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4537  001450  B0D8               	btfsc	status,0,c
  4538  001452  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4539  001454  0E01               	movlw	1
  4540  001456  6E06               	movwf	___awmod@sign^0,c
  4541  001458                     l2111:
  4542  001458  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4543  00145A  EF33  F00A         	goto	u1520
  4544  00145E  EF31  F00A         	goto	u1521
  4545  001462                     u1521:
  4546  001462  EF37  F00A         	goto	l2115
  4547  001466                     u1520:
  4548  001466  6C03               	negf	___awmod@divisor^0,c
  4549  001468  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4550  00146A  B0D8               	btfsc	status,0,c
  4551  00146C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4552  00146E                     l2115:
  4553  00146E  5003               	movf	___awmod@divisor^0,w,c
  4554  001470  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4555  001472  B4D8               	btfsc	status,2,c
  4556  001474  EF3E  F00A         	goto	u1531
  4557  001478  EF40  F00A         	goto	u1530
  4558  00147C                     u1531:
  4559  00147C  EF64  F00A         	goto	l2131
  4560  001480                     u1530:
  4561  001480  0E01               	movlw	1
  4562  001482  6E05               	movwf	___awmod@counter^0,c
  4563  001484  EF48  F00A         	goto	l2121
  4564  001488                     l2119:
  4565  001488  90D8               	bcf	status,0,c
  4566  00148A  3603               	rlcf	___awmod@divisor^0,f,c
  4567  00148C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4568  00148E  2A05               	incf	___awmod@counter^0,f,c
  4569  001490                     l2121:
  4570  001490  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4571  001492  EF4D  F00A         	goto	u1541
  4572  001496  EF4F  F00A         	goto	u1540
  4573  00149A                     u1541:
  4574  00149A  EF44  F00A         	goto	l2119
  4575  00149E                     u1540:
  4576  00149E                     l2123:
  4577  00149E  5003               	movf	___awmod@divisor^0,w,c
  4578  0014A0  5C01               	subwf	___awmod@dividend^0,w,c
  4579  0014A2  5004               	movf	(___awmod@divisor+1)^0,w,c
  4580  0014A4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4581  0014A6  A0D8               	btfss	status,0,c
  4582  0014A8  EF58  F00A         	goto	u1551
  4583  0014AC  EF5A  F00A         	goto	u1550
  4584  0014B0                     u1551:
  4585  0014B0  EF5E  F00A         	goto	l2127
  4586  0014B4                     u1550:
  4587  0014B4  5003               	movf	___awmod@divisor^0,w,c
  4588  0014B6  5E01               	subwf	___awmod@dividend^0,f,c
  4589  0014B8  5004               	movf	(___awmod@divisor+1)^0,w,c
  4590  0014BA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4591  0014BC                     l2127:
  4592  0014BC  90D8               	bcf	status,0,c
  4593  0014BE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4594  0014C0  3203               	rrcf	___awmod@divisor^0,f,c
  4595  0014C2  2E05               	decfsz	___awmod@counter^0,f,c
  4596  0014C4  EF4F  F00A         	goto	l2123
  4597  0014C8                     l2131:
  4598  0014C8  5006               	movf	___awmod@sign^0,w,c
  4599  0014CA  B4D8               	btfsc	status,2,c
  4600  0014CC  EF6A  F00A         	goto	u1561
  4601  0014D0  EF6C  F00A         	goto	u1560
  4602  0014D4                     u1561:
  4603  0014D4  EF70  F00A         	goto	l2135
  4604  0014D8                     u1560:
  4605  0014D8  6C01               	negf	___awmod@dividend^0,c
  4606  0014DA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4607  0014DC  B0D8               	btfsc	status,0,c
  4608  0014DE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4609  0014E0                     l2135:
  4610  0014E0  C001  F001         	movff	___awmod@dividend,?___awmod
  4611  0014E4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4612  0014E8  0012               	return		;funcret
  4613  0014EA                     __end_of___awmod:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function ___awdiv *****************
  4617 ;; Defined at:
  4618 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  dividend        2    0[COMRAM] int 
  4621 ;;  divisor         2    2[COMRAM] int 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  quotient        2    6[COMRAM] int 
  4624 ;;  sign            1    5[COMRAM] unsigned char 
  4625 ;;  counter         1    4[COMRAM] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  2    0[COMRAM] int 
  4628 ;; Registers used:
  4629 ;;		wreg, status,2, status,0
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4635 ;;      Params:         4       0       0       0       0       0       0       0       0
  4636 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4638 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4639 ;;Total ram usage:        8 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_Dec2Bcd
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text34
  4649  0012B4                     __ptext34:
  4650                           	callstack 0
  4651  0012B4                     ___awdiv:
  4652                           	callstack 29
  4653  0012B4  0E00               	movlw	0
  4654  0012B6  6E06               	movwf	___awdiv@sign^0,c
  4655  0012B8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4656  0012BA  EF63  F009         	goto	u1450
  4657  0012BE  EF61  F009         	goto	u1451
  4658  0012C2                     u1451:
  4659  0012C2  EF69  F009         	goto	l2067
  4660  0012C6                     u1450:
  4661  0012C6  6C03               	negf	___awdiv@divisor^0,c
  4662  0012C8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4663  0012CA  B0D8               	btfsc	status,0,c
  4664  0012CC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4665  0012CE  0E01               	movlw	1
  4666  0012D0  6E06               	movwf	___awdiv@sign^0,c
  4667  0012D2                     l2067:
  4668  0012D2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4669  0012D4  EF70  F009         	goto	u1460
  4670  0012D8  EF6E  F009         	goto	u1461
  4671  0012DC                     u1461:
  4672  0012DC  EF76  F009         	goto	l2073
  4673  0012E0                     u1460:
  4674  0012E0  6C01               	negf	___awdiv@dividend^0,c
  4675  0012E2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4676  0012E4  B0D8               	btfsc	status,0,c
  4677  0012E6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4678  0012E8  0E01               	movlw	1
  4679  0012EA  1A06               	xorwf	___awdiv@sign^0,f,c
  4680  0012EC                     l2073:
  4681  0012EC  0E00               	movlw	0
  4682  0012EE  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4683  0012F0  0E00               	movlw	0
  4684  0012F2  6E07               	movwf	___awdiv@quotient^0,c
  4685  0012F4  5003               	movf	___awdiv@divisor^0,w,c
  4686  0012F6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4687  0012F8  B4D8               	btfsc	status,2,c
  4688  0012FA  EF81  F009         	goto	u1471
  4689  0012FE  EF83  F009         	goto	u1470
  4690  001302                     u1471:
  4691  001302  EFAB  F009         	goto	l2095
  4692  001306                     u1470:
  4693  001306  0E01               	movlw	1
  4694  001308  6E05               	movwf	___awdiv@counter^0,c
  4695  00130A  EF8B  F009         	goto	l2081
  4696  00130E                     l2079:
  4697  00130E  90D8               	bcf	status,0,c
  4698  001310  3603               	rlcf	___awdiv@divisor^0,f,c
  4699  001312  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4700  001314  2A05               	incf	___awdiv@counter^0,f,c
  4701  001316                     l2081:
  4702  001316  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4703  001318  EF90  F009         	goto	u1481
  4704  00131C  EF92  F009         	goto	u1480
  4705  001320                     u1481:
  4706  001320  EF87  F009         	goto	l2079
  4707  001324                     u1480:
  4708  001324                     l2083:
  4709  001324  90D8               	bcf	status,0,c
  4710  001326  3607               	rlcf	___awdiv@quotient^0,f,c
  4711  001328  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4712  00132A  5003               	movf	___awdiv@divisor^0,w,c
  4713  00132C  5C01               	subwf	___awdiv@dividend^0,w,c
  4714  00132E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4715  001330  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4716  001332  A0D8               	btfss	status,0,c
  4717  001334  EF9E  F009         	goto	u1491
  4718  001338  EFA0  F009         	goto	u1490
  4719  00133C                     u1491:
  4720  00133C  EFA5  F009         	goto	l2091
  4721  001340                     u1490:
  4722  001340  5003               	movf	___awdiv@divisor^0,w,c
  4723  001342  5E01               	subwf	___awdiv@dividend^0,f,c
  4724  001344  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4725  001346  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4726  001348  8007               	bsf	___awdiv@quotient^0,0,c
  4727  00134A                     l2091:
  4728  00134A  90D8               	bcf	status,0,c
  4729  00134C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4730  00134E  3203               	rrcf	___awdiv@divisor^0,f,c
  4731  001350  2E05               	decfsz	___awdiv@counter^0,f,c
  4732  001352  EF92  F009         	goto	l2083
  4733  001356                     l2095:
  4734  001356  5006               	movf	___awdiv@sign^0,w,c
  4735  001358  B4D8               	btfsc	status,2,c
  4736  00135A  EFB1  F009         	goto	u1501
  4737  00135E  EFB3  F009         	goto	u1500
  4738  001362                     u1501:
  4739  001362  EFB7  F009         	goto	l2099
  4740  001366                     u1500:
  4741  001366  6C07               	negf	___awdiv@quotient^0,c
  4742  001368  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4743  00136A  B0D8               	btfsc	status,0,c
  4744  00136C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4745  00136E                     l2099:
  4746  00136E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4747  001372  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4748  001376  0012               	return		;funcret
  4749  001378                     __end_of___awdiv:
  4750                           	callstack 0
  4751                           
  4752 ;; *************** function _Bcd2Dec *****************
  4753 ;; Defined at:
  4754 ;;		line 101 in file "LCD_16x2_4bit_mode.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  bcd             2    6[COMRAM] int 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  dec             2   11[COMRAM] int 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  2    6[COMRAM] int 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4768 ;;      Params:         2       0       0       0       0       0       0       0       0
  4769 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4770 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4771 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4772 ;;Total ram usage:        7 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    1
  4775 ;; This function calls:
  4776 ;;		___wmul
  4777 ;; This function is called by:
  4778 ;;		_main
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text35
  4783  00181E                     __ptext35:
  4784                           	callstack 0
  4785  00181E                     _Bcd2Dec:
  4786                           	callstack 29
  4787  00181E                     
  4788                           ;LCD_16x2_4bit_mode.c: 102:     int dec;;LCD_16x2_4bit_mode.c: 103:     dec = bcd + ((bc
      +                          d & 0x70) >> 4) * 10;
  4789  00181E  C007  F009         	movff	Bcd2Dec@bcd,??_Bcd2Dec
  4790  001822  C008  F00A         	movff	Bcd2Dec@bcd+1,??_Bcd2Dec+1
  4791  001826  0E04               	movlw	4
  4792  001828  6E0B               	movwf	(??_Bcd2Dec+2)^0,c
  4793  00182A                     u1605:
  4794  00182A  340A               	rlcf	(??_Bcd2Dec+1)^0,w,c
  4795  00182C  320A               	rrcf	(??_Bcd2Dec+1)^0,f,c
  4796  00182E  3209               	rrcf	??_Bcd2Dec^0,f,c
  4797  001830  2E0B               	decfsz	(??_Bcd2Dec+2)^0,f,c
  4798  001832  EF15  F00C         	goto	u1605
  4799  001836  0E07               	movlw	7
  4800  001838  1409               	andwf	??_Bcd2Dec^0,w,c
  4801  00183A  6E01               	movwf	___wmul@multiplier^0,c
  4802  00183C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4803  00183E  0E00               	movlw	0
  4804  001840  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4805  001842  0E0A               	movlw	10
  4806  001844  6E03               	movwf	___wmul@multiplicand^0,c
  4807  001846  EC24  F00D         	call	___wmul	;wreg free
  4808  00184A  5007               	movf	Bcd2Dec@bcd^0,w,c
  4809  00184C  2401               	addwf	?___wmul^0,w,c
  4810  00184E  6E0C               	movwf	Bcd2Dec@dec^0,c
  4811  001850  5008               	movf	(Bcd2Dec@bcd+1)^0,w,c
  4812  001852  2002               	addwfc	(?___wmul+1)^0,w,c
  4813  001854  6E0D               	movwf	(Bcd2Dec@dec+1)^0,c
  4814  001856                     
  4815                           ;LCD_16x2_4bit_mode.c: 104:     return dec;
  4816  001856  C00C  F007         	movff	Bcd2Dec@dec,?_Bcd2Dec
  4817  00185A  C00D  F008         	movff	Bcd2Dec@dec+1,?_Bcd2Dec+1
  4818  00185E  0012               	return		;funcret
  4819  001860                     __end_of_Bcd2Dec:
  4820                           	callstack 0
  4821                           
  4822 ;; *************** function ___wmul *****************
  4823 ;; Defined at:
  4824 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  multiplier      2    0[COMRAM] unsigned int 
  4827 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;  product         2    4[COMRAM] unsigned int 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  2    0[COMRAM] unsigned int 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0, prodl, prodh
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4839 ;;      Params:         4       0       0       0       0       0       0       0       0
  4840 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4842 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4843 ;;Total ram usage:        6 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_Bcd2Dec
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text36
  4853  001A48                     __ptext36:
  4854                           	callstack 0
  4855  001A48                     ___wmul:
  4856                           	callstack 29
  4857  001A48  5001               	movf	___wmul@multiplier^0,w,c
  4858  001A4A  0203               	mulwf	___wmul@multiplicand^0,c
  4859  001A4C  CFF3 F005          	movff	prodl,___wmul@product
  4860  001A50  CFF4 F006          	movff	prodh,___wmul@product+1
  4861  001A54  5001               	movf	___wmul@multiplier^0,w,c
  4862  001A56  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4863  001A58  50F3               	movf	243,w,c
  4864  001A5A  2606               	addwf	(___wmul@product+1)^0,f,c
  4865  001A5C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4866  001A5E  0203               	mulwf	___wmul@multiplicand^0,c
  4867  001A60  50F3               	movf	243,w,c
  4868  001A62  2606               	addwf	(___wmul@product+1)^0,f,c
  4869  001A64  C005  F001         	movff	___wmul@product,?___wmul
  4870  001A68  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4871  001A6C  0012               	return		;funcret
  4872  001A6E                     __end_of___wmul:
  4873                           	callstack 0
  4874                           
  4875                           	psect	rparam
  4876  0000                     
  4877                           	psect	idloc
  4878                           
  4879                           ;Config register IDLOC0 @ 0x200000
  4880                           ;	unspecified, using default values
  4881  200000                     	org	2097152
  4882  200000  FF                 	db	255
  4883                           
  4884                           ;Config register IDLOC1 @ 0x200001
  4885                           ;	unspecified, using default values
  4886  200001                     	org	2097153
  4887  200001  FF                 	db	255
  4888                           
  4889                           ;Config register IDLOC2 @ 0x200002
  4890                           ;	unspecified, using default values
  4891  200002                     	org	2097154
  4892  200002  FF                 	db	255
  4893                           
  4894                           ;Config register IDLOC3 @ 0x200003
  4895                           ;	unspecified, using default values
  4896  200003                     	org	2097155
  4897  200003  FF                 	db	255
  4898                           
  4899                           ;Config register IDLOC4 @ 0x200004
  4900                           ;	unspecified, using default values
  4901  200004                     	org	2097156
  4902  200004  FF                 	db	255
  4903                           
  4904                           ;Config register IDLOC5 @ 0x200005
  4905                           ;	unspecified, using default values
  4906  200005                     	org	2097157
  4907  200005  FF                 	db	255
  4908                           
  4909                           ;Config register IDLOC6 @ 0x200006
  4910                           ;	unspecified, using default values
  4911  200006                     	org	2097158
  4912  200006  FF                 	db	255
  4913                           
  4914                           ;Config register IDLOC7 @ 0x200007
  4915                           ;	unspecified, using default values
  4916  200007                     	org	2097159
  4917  200007  FF                 	db	255
  4918                           
  4919                           	psect	config
  4920                           
  4921                           ;Config register CONFIG1L @ 0x300000
  4922                           ;	PLL Prescaler Selection bits
  4923                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  4924                           ;	System Clock Postscaler Selection bits
  4925                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4926                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4927                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4928  300000                     	org	3145728
  4929  300000  01                 	db	1
  4930                           
  4931                           ;Config register CONFIG1H @ 0x300001
  4932                           ;	Oscillator Selection bits
  4933                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4934                           ;	Fail-Safe Clock Monitor Enable bit
  4935                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4936                           ;	Internal/External Oscillator Switchover bit
  4937                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4938  300001                     	org	3145729
  4939  300001  09                 	db	9
  4940                           
  4941                           ;Config register CONFIG2L @ 0x300002
  4942                           ;	Power-up Timer Enable bit
  4943                           ;	PWRT = OFF, PWRT disabled
  4944                           ;	Brown-out Reset Enable bits
  4945                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4946                           ;	Brown-out Reset Voltage bits
  4947                           ;	BORV = 3, Minimum setting 2.05V
  4948                           ;	USB Voltage Regulator Enable bit
  4949                           ;	VREGEN = OFF, USB voltage regulator disabled
  4950  300002                     	org	3145730
  4951  300002  1F                 	db	31
  4952                           
  4953                           ;Config register CONFIG2H @ 0x300003
  4954                           ;	Watchdog Timer Enable bit
  4955                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4956                           ;	Watchdog Timer Postscale Select bits
  4957                           ;	WDTPS = 32768, 1:32768
  4958  300003                     	org	3145731
  4959  300003  1E                 	db	30
  4960                           
  4961                           ; Padding undefined space
  4962  300004                     	org	3145732
  4963  300004  FF                 	db	255
  4964                           
  4965                           ;Config register CONFIG3H @ 0x300005
  4966                           ;	CCP2 MUX bit
  4967                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4968                           ;	PORTB A/D Enable bit
  4969                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4970                           ;	Low-Power Timer 1 Oscillator Enable bit
  4971                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4972                           ;	MCLR Pin Enable bit
  4973                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4974  300005                     	org	3145733
  4975  300005  01                 	db	1
  4976                           
  4977                           ;Config register CONFIG4L @ 0x300006
  4978                           ;	Stack Full/Underflow Reset Enable bit
  4979                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4980                           ;	Single-Supply ICSP Enable bit
  4981                           ;	LVP = OFF, Single-Supply ICSP disabled
  4982                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4983                           ;	ICPRT = OFF, ICPORT disabled
  4984                           ;	Extended Instruction Set Enable bit
  4985                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4986                           ;	Background Debugger Enable bit
  4987                           ;	DEBUG = 0x1, unprogrammed default
  4988  300006                     	org	3145734
  4989  300006  81                 	db	129
  4990                           
  4991                           ; Padding undefined space
  4992  300007                     	org	3145735
  4993  300007  FF                 	db	255
  4994                           
  4995                           ;Config register CONFIG5L @ 0x300008
  4996                           ;	Code Protection bit
  4997                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4998                           ;	Code Protection bit
  4999                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5000                           ;	Code Protection bit
  5001                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5002                           ;	Code Protection bit
  5003                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5004  300008                     	org	3145736
  5005  300008  0F                 	db	15
  5006                           
  5007                           ;Config register CONFIG5H @ 0x300009
  5008                           ;	Boot Block Code Protection bit
  5009                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5010                           ;	Data EEPROM Code Protection bit
  5011                           ;	CPD = OFF, Data EEPROM is not code-protected
  5012  300009                     	org	3145737
  5013  300009  C0                 	db	192
  5014                           
  5015                           ;Config register CONFIG6L @ 0x30000A
  5016                           ;	Write Protection bit
  5017                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5018                           ;	Write Protection bit
  5019                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5020                           ;	Write Protection bit
  5021                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5022                           ;	Write Protection bit
  5023                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5024  30000A                     	org	3145738
  5025  30000A  0F                 	db	15
  5026                           
  5027                           ;Config register CONFIG6H @ 0x30000B
  5028                           ;	Configuration Register Write Protection bit
  5029                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5030                           ;	Boot Block Write Protection bit
  5031                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5032                           ;	Data EEPROM Write Protection bit
  5033                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5034  30000B                     	org	3145739
  5035  30000B  E0                 	db	224
  5036                           
  5037                           ;Config register CONFIG7L @ 0x30000C
  5038                           ;	Table Read Protection bit
  5039                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5040                           ;	Table Read Protection bit
  5041                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5042                           ;	Table Read Protection bit
  5043                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5044                           ;	Table Read Protection bit
  5045                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5046  30000C                     	org	3145740
  5047  30000C  0F                 	db	15
  5048                           
  5049                           ;Config register CONFIG7H @ 0x30000D
  5050                           ;	Boot Block Table Read Protection bit
  5051                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5052  30000D                     	org	3145741
  5053  30000D  40                 	db	64
  5054                           tosu	equ	0xFFF
  5055                           tosh	equ	0xFFE
  5056                           tosl	equ	0xFFD
  5057                           stkptr	equ	0xFFC
  5058                           pclatu	equ	0xFFB
  5059                           pclath	equ	0xFFA
  5060                           pcl	equ	0xFF9
  5061                           tblptru	equ	0xFF8
  5062                           tblptrh	equ	0xFF7
  5063                           tblptrl	equ	0xFF6
  5064                           tablat	equ	0xFF5
  5065                           prodh	equ	0xFF4
  5066                           prodl	equ	0xFF3
  5067                           indf0	equ	0xFEF
  5068                           postinc0	equ	0xFEE
  5069                           postdec0	equ	0xFED
  5070                           preinc0	equ	0xFEC
  5071                           plusw0	equ	0xFEB
  5072                           fsr0h	equ	0xFEA
  5073                           fsr0l	equ	0xFE9
  5074                           wreg	equ	0xFE8
  5075                           indf1	equ	0xFE7
  5076                           postinc1	equ	0xFE6
  5077                           postdec1	equ	0xFE5
  5078                           preinc1	equ	0xFE4
  5079                           plusw1	equ	0xFE3
  5080                           fsr1h	equ	0xFE2
  5081                           fsr1l	equ	0xFE1
  5082                           bsr	equ	0xFE0
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           postdec2	equ	0xFDD
  5086                           preinc2	equ	0xFDC
  5087                           plusw2	equ	0xFDB
  5088                           fsr2h	equ	0xFDA
  5089                           fsr2l	equ	0xFD9
  5090                           status	equ	0xFD8

Data Sizes:
    Strings     57
    Constant    0
    Data        0
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     93     157
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[9]), STR_11(CODE[4]), STR_10(CODE[10]), STR_9(CODE[16]), 
		 -> STR_8(CODE[8]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[9]), STR_11(CODE[4]), STR_10(CODE[10]), STR_9(CODE[16]), 
		 -> STR_8(CODE[8]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[9]), STR_11(CODE[4]), STR_10(CODE[10]), STR_9(CODE[16]), 
		 -> STR_8(CODE[8]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1040_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@counters_min(BANK0[10]), main@hours(BANK0[10]), STR_2(CODE[3]), STR_1(CODE[3]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay
    _Dec2Bcd->___awdiv
    _Bcd2Dec->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                75    75      0   21861
                                             18 BANK0     75    75      0
                            _Bcd2Dec
                            _Dec2Bcd
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                     _RTC_Read_Clock
                            ___awmod
                   _init_leds_botons
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    7775
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6056
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5701
                                             66 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4263
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _init_leds_botons                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    3872
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2    1625
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0    1048
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    2052
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    2052
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0    1048
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2    1004
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dec2Bcd                                              6     4      2    1423
                                              8 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Bcd2Dec                                              7     5      2     622
                                              6 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bcd2Dec
     ___wmul
   _Dec2Bcd
     ___awdiv
     ___awmod
   _I2C_Init
   _I2C_Stop
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _RTC_Read_Clock
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Write
       _I2C_Ready
   ___awmod
   _init_leds_botons
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5D      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FC      20        0.0%
DATA                 0      0      FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 14 21:28:27 2020

                  __size_of_I2C_Ready 0012                    __size_of_I2C_Start 002E  
                        ?_LCD_Command 0001                           _SSPSTATbits 000FC7  
                  __size_of_I2C_Write 0022                                    l73 1B2C  
                                  l67 17D8                                    l86 0ACA  
                        ___awdiv@sign 0006                   ___wmul@multiplicand 0003  
                         ?_LCD_String 0009                                   l120 16FC  
                                 l200 1914                                   l114 19EA  
                                 l203 1AC2                                   l131 189E  
                                 l117 1748                                   l142 1792  
                                 l134 1AFE                                   l126 1606  
                                 l206 1B14                                   l230 1A1E  
                                 l223 19F0                                   l208 1B22  
                                 l232 1A2C                                   l145 165E  
                                 l241 1B10                                   l209 1B24  
                                 l225 19FE                                   l234 1A46  
                                 l243 1B12                                   l251 1ADC  
                                 l227 1A18                                   l148 185E  
                                 l260 1AD6                                   l254 1AEA  
                                 l263 1A6C                                   l239 1B02  
                                 l247 1A8E                                   l257 1AC8  
                                 l507 14E8                                   l195 18E0  
                                 l197 18EE                                   l199 190E  
                                 l494 1376                                   l941 16B0  
                                 l972 13BC                                   l982 0D7E  
                                 l975 13FE                                   l991 0E1A  
                                 l984 0D86                                   l977 1438  
                                 _PEN 007E2A                                   u900 11FC  
                                 u901 11F8                                   u910 120E  
                                 u911 120A                                   u920 1236  
                                 u921 1232                                   u930 126C  
                                 u931 1268                                   u940 181C  
                                 u941 1818                                   u950 19AE  
                                 u951 19AA                                   u960 1946  
                                 u961 1940                                   u970 1948  
                                 u980 1386                                   u981 1382  
                                 u990 13A8                                   u991 13A4  
                                 _Day 00D5                       __end_of_I2C_Ack 1AEC  
                                 _pad 1378                                   _min 00D9  
                                 _sec 00DB                                   _run 00C7  
                        ___awmod@sign 0006                                   wreg 000FE8  
                         LCD_Char@dat 0008                                  l1020 1542  
                                l1005 0FB6                                  l1021 154A  
                                l1030 1984                                  l1014 11E8  
                                l1007 1018                                  l1024 18DA  
                                l2001 1A1C                                  l2021 1912  
                                l2013 18DE                                  l2005 1A40  
                                l1045 12B2                                  l1053 181C  
                                l1062 19BA                                  l2111 1458  
                                l2103 143A                                  l2031 15D6  
                                l2015 18F2                                  l2007 1A46  
                                l1056 1B2E                                  l1072 15A8  
                                l2121 1490                                  l2113 1466  
                                l2105 143E                                  l2041 1716  
                                l2033 1700                                  l2025 15AA  
                                l2017 1902                                  l2201 167A  
                                l2211 1856                                  l2123 149E  
                                l2131 14C8                                  l2115 146E  
                                l2107 144C                                  l2051 173A  
                                l2043 1718                                  l2035 1710  
                                l2027 15AE                                  l2019 190A  
                                l1067 15A0                                  l2203 1682  
                                l2053 1A48                                  l2061 12B8  
                                l2133 14D8                                  l2125 14B4  
                                l2117 1480                                  l2109 1454  
                                l2045 1724                                  l2037 1712  
                                l2029 15D2                                  l2141 14F2  
                                l2205 169E                                  l1078 194C  
                                l2055 1A64                                  l2071 12E8  
                                l2063 12C6                                  l2135 14E0  
                                l2127 14BC                                  l2119 1488  
                                l2215 1608                                  l2047 1736  
                                l2039 1714                                  l2151 17B8  
                                l2143 1500                                  l2311 0A90  
                                l2303 0A58                                  l2209 181E  
                                l2081 1316                                  l2073 12EC  
                                l2065 12CE                                  l2129 14C2  
                                l2217 1656                                  l2161 1AAE  
                                l2049 1738                                  l2153 17C8  
                                l2145 1526                                  l2401 0D34  
                                l2321 0AC4                                  l2313 0A9C  
                                l2305 0A62                                  l2241 084A  
                                l2091 134A                                  l2083 1324  
                                l2075 12F4                                  l2067 12D2  
                                l2059 12B4                                  l2163 1ABE  
                                l2155 1B00                                  l2171 19CC  
                                l2147 1796                                  l2139 14EA  
                                l2331 0B16                                  l2323 0ACC  
                                l2315 0AA6                                  l2307 0A6E  
                                l2251 0870                                  l2243 0852  
                                l2235 083C                                  l2093 1350  
                                l2085 132A                                  l2077 1306  
                                l2069 12E0                                  l2165 1AC0  
                                l2181 1AEC                                  l2173 19D2  
                                l2149 17A8                                  l2157 1B26  
                                l2341 0B70                                  l2333 0B32  
                                l2325 0AE0                                  l2317 0AAE  
                                l2309 0A82                                  l2261 0898  
                                l2253 0878                                  l2245 0856  
                                l2237 0840                                  l2087 1340  
                                l2079 130E                                  l2095 1356  
                                l2159 1AAA                                  l2175 19D8  
                                l2167 19BC                                  l2191 1884  
                                l2183 1862                                  l2351 0BB0  
                                l2343 0B84                                  l2335 0B54  
                                l2327 0AE6                                  l2319 0AB2  
                                l2271 092A                                  l2263 08AA  
                                l2255 0880                                  l2247 085A  
                                l2239 0846                                  l2097 1366  
                                l2089 1348                                  l2177 19DE  
                                l2169 19C0                                  l2193 188C  
                                l2185 1862                                  l1801 1420  
                                l2361 0BDA                                  l2353 0BC0  
                                l2345 0B94                                  l2337 0B58  
                                l2329 0AEA                                  l2281 0996  
                                l2273 0940                                  l2265 08B0  
                                l2257 0888                                  l2249 0866  
                                l2099 136E                                  l2179 19E4  
                                l2195 1892                                  l2187 1872  
                                l2371 0C24                                  l2363 0BEC  
                                l2355 0BC2                                  l2347 0B96  
                                l2339 0B5C                                  l2291 09EA  
                                l2283 09B4                                  l2275 0952  
                                l2267 08B4                                  l2259 0890  
                                l2189 187A                                  l1805 194E  
                                l1813 154C                                  l1901 0FDA  
                                l2197 1660                                  l2381 0C66  
                                l2373 0C28                                  l2365 0BF0  
                                l2357 0BC4                                  l2349 0B9C  
                                l2293 0A06                                  l2285 09C6  
                                l2277 095C                                  l2269 08F0  
                                l1831 175E                                  l1823 174A  
                                l1911 1A78                                  l1751 120E  
                                l1903 0FF0                                  l2199 1672  
                                l2391 0CC6                                  l2383 0C6C  
                                l2375 0C34                                  l2367 0C06  
                                l2359 0BC8                                  l2295 0A24  
                                l2287 09D2                                  l2279 0978  
                                l1833 1762                                  l1825 1756  
                                l1913 1A86                                  l1809 18A0  
                                l1753 1218                                  l1761 17DA  
                                l1817 1582                                  l1841 0D46  
                                l2393 0CE4                                  l2385 0C80  
                                l2377 0C46                                  l2369 0C18  
                                l2297 0A42                                  l2289 09E2  
                                l1835 1778                                  l1931 16CA  
                                l1923 16B4                                  l1907 1A70  
                                l1755 1236                                  l1747 11EA  
                                l1763 17E6                                  l1771 1992  
                                l1819 1594                                  l1851 0DA4  
                                l1843 0D56                                  l2395 0D0A  
                                l2387 0C94                                  l2379 0C52  
                                l1837 177C                                  l1941 16EE  
                                l1933 16CC                                  l1925 16C4  
                                l1909 1A74                                  l1757 126C  
                                l1749 11FC                                  l1765 17F8  
                                l1773 1996                                  l1861 0DE2  
                                l1853 0DC4                                  l1845 0D58  
                                l2397 0D1C                                  l2389 0CA8  
                                l1935 16D8                                  l1927 16C6  
                                l1943 1AD8                                  l1839 1B14  
                                l1919 1A8C                                  l1767 17FC  
                                l1775 19AE                                  l1791 13B4  
                                l1783 1378                                  l1871 0E60  
                                l1863 0DFE                                  l1855 0DCC  
                                l1847 0D72                                  l1951 104C  
                                l2399 0D28                                  l1937 16EA  
                                l1929 16C8                                  l1945 1AC4  
                                l1769 1986                                  l1793 13C8  
                                l1785 1386                                  l1881 0ED0  
                                l1865 0E0E                                  l1857 0DD4  
                                l1849 0D9C                                  l1961 10C0  
                                l1953 105E                                  l1939 16EC  
                                l1795 13DC                                  l1787 139A  
                                l1779 1916                                  l1891 0F74  
                                l1883 0ED6                                  l1875 0E9A  
                                l1859 0DDA                                  l1971 116A  
                                l1963 10CE                                  l1955 1062  
                                l1947 101A                                  l1797 13E0  
                                l1789 13A8                                  l1893 0F8E  
                                l1885 0EDC                                  l1877 0EAC  
                                l1869 0E4E                                  l1981 11A6  
                                l1973 1178                                  l1965 110A  
                                l1957 1086                                  l1949 103E  
                                ?_pad 0011                                  l1799 140C  
                                l1895 0FA8                                  l1879 0EC0  
                                l1887 0F3A                                  l1975 118C  
                                l1959 10AA                                  l1993 19EE  
                                l1897 0FC4                                  l1889 0F56  
                                l1969 1146                                  l1985 11B2  
                                l1899 0FCA                                  l1987 11D6  
                                l1979 1198                                  l1997 1A12  
                                STR_1 0837                                  STR_2 0834  
                                STR_3 082C                                  STR_4 0828  
                                STR_5 0824                                  STR_6 082C  
                                STR_7 0828                                  STR_8 0824  
                                STR_9 0801                                  u1000 13FE  
                                u1001 13FA                                  u1010 140C  
                                u1011 1408                                  u1100 1792  
                                u1020 197E                                  u1101 178E  
                                u1021 1978                                  u1110 1B22  
                                u1030 1980                                  u1111 1B1E  
                                u1040 18D4                                  u1200 0E96  
                                u1120 0D56                                  u1041 18CE  
                                u1121 0D52                                  u1050 18D6  
                                u1210 0EAC                                  u1130 0D72  
                                u1211 0EA8                                  u1131 0D6E  
                                u1300 1AEA                                  u1060 157C  
                                u1220 0F14                                  u1140 0D9C  
                                u1301 1AE6                                  u1061 1576  
                                u1141 0D98                                  u1310 1AD6  
                                u1070 157E                                  u1230 0F56  
                                u1150 0DFE                                  u1311 1AD2  
                                u1231 0F52                                  u1151 0DFA  
                                u1400 18EE                                  u1080 1594  
                                u1240 0F74                                  u1160 0E48  
                                u1320 103E                                  u1401 18EA  
                                u1081 1590                                  u1241 0F70  
                                u1225 0F02                                  u1161 0E42  
                                u1321 103A                                  u1090 1778  
                                u1410 1902                                  u1250 0F8E  
                                u1170 0E4A                                  u1330 1086  
                                u1091 1774                                  u1411 18FE  
                                u1251 0F8A                                  u1331 1082  
                                u1500 1366                                  u1420 15CE  
                                u1260 0FA8                                  u1180 0E60  
                                u1340 10AA                                  u1501 1362  
                                u1261 0FA4                                  u1181 0E5C  
                                u1341 10A6                                  u1510 144C  
                                u1430 15F6                                  u1270 0FB6  
                                u1190 0E94                                  u1350 116A  
                                u1511 1448                                  u1271 0FB2  
                                u1191 0E8E                                  u1351 1166  
                                u1520 1466                                  u1440 1606  
                                u1360 19FE                                  u1280 0FC4  
                                _LATD 000F8C                                  u1521 1462  
                                u1441 1602                                  u1361 19FA  
                                u1281 0FC0                                  u1450 12C6  
                                u1530 1480                                  u1290 1A86  
                                u1370 1A0E                                  u1610 08AA  
                                u1451 12C2                                  u1531 147C  
                                u1427 15C4                                  u1291 1A82  
                                u1371 1A0A                                  u1611 08A6  
                                u1460 12E0                                  u1540 149E  
                                u1380 1A2C                                  u1700 0B32  
                                u1605 182A                                  u1461 12DC  
                                u1541 149A                                  u1437 15EC  
                                u1381 1A28                                  u1701 0B2E  
                                u1470 1306                                  u1550 14B4  
                                u1390 1A3C                                  u1710 0B70  
                                u1630 08F0                                  u1471 1302  
                                u1551 14B0                                  u1391 1A38  
                                u1711 0B6C                                  u1631 08EC  
                                u1480 1324                                  u1560 14D8  
                                u1720 0B84                                  u1624 08CE  
                                u1481 1320                                  u1561 14D4  
                                u1721 0B80                                  u1625 08C8  
                                u1490 1340                                  u1570 1542  
                                u1730 0BB0                                  u1650 092A  
                                u1491 133C                                  u1571 153E  
                                u1731 0BAC                                  u1651 0926  
                                u1580 1B10                                  u1740 0BDA  
                                u1660 0A82                                  u1644 0908  
                                u1581 1B0C                                  u1741 0BD6  
                                u1661 0A7E                                  u1645 0902  
                                u1590 1872                                  u1750 0BEC  
                                u1670 0A90                                  u1591 186E  
                                u1751 0BE8                                  u1671 0A8C  
                                u1680 0AC4                                  u1681 0AC0  
                                u1690 0B16                                  u1691 0B12  
                                _RCEN 007E2B                                  _RSEN 007E29  
                     __end_of_Bcd2Dec 1860                                  _Date 00D3  
                     __end_of_Dec2Bcd 1660                                  _Year 00CF  
                      main@Clock_type 00BB                                  _dbuf 00DD  
                                _main 083C                       ?_RTC_Read_Clock 0001  
                                _hour 00D7                      __end_of_I2C_Nack 1AD8  
                  __size_of_LCD_Clear 0014                                  _prec 00C1  
                    __end_of_I2C_Init 1AC4                      __end_of_I2C_Read 1916  
                                _nout 00BD                                  pad@i 0018  
                                pad@p 0015                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf1 000FE7  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 001A                                  fsr2l 000FD9  
                                _xtoa 0D46                      __end_of_I2C_Stop 1B14  
                                prodh 000FF4                                  prodl 000FF3  
                                start 0000                       __end_of_MSdelay 1794  
                       _LCD_String_xy 1860                          ___param_bank 000000  
    RTC_Read_Clock@read_clock_address 0004                                 ??_pad 0017  
                    __end_of_LCD_Char 16FE                      __end_of_LCD_Init 19EC  
                               ?_main 0001                                 _ACKEN 007E2C  
                               _ACKDT 007E2D                       __end_of___awdiv 1378  
                               STR_10 0811                                 STR_11 0830  
                               STR_12 081B                       __end_of___awmod 14EA  
                     ___awdiv@divisor 0003                                 ?_xtoa 001C  
                               _LATD2 007C62                                 _LATD3 007C63  
                     ___awdiv@counter 0005                          vfpfcnvrt@fmt 0045  
                        vfpfcnvrt@llu 004D                                 _TRISD 000F95  
                               _SSPIE 007CEB                                 _SSPIF 007CF3  
                               _Month 00D1                                 _flags 005E  
                               _fputc 11EA                       __end_of_isalpha 18DC  
                               _fputs 17DA                     __end_of_I2C_Ready 1B26  
                               pad@fp 0011                                 _width 00BF  
                               _putch 1B2E                       __end_of_islower 194E  
                   __end_of_I2C_Start 1A1A                     __end_of_I2C_Write 1A90  
                     __end_of_isupper 1986                                 tablat 000FF5  
                               status 000FD8                   __size_of_LCD_String 005E  
                     __end_of_sprintf 16B2                                 xtoa@c 0041  
                               xtoa@d 001E                                 xtoa@i 003F  
                               xtoa@n 0037                                 xtoa@p 0033  
                               xtoa@w 0035                                 xtoa@x 0026  
                     __end_of_toupper 15AA                        ?_LCD_String_xy 000B  
                        _toupper$1207 000D                       __initialization 1A90  
                        __end_of_main 0D46                          __end_of_xtoa 101A  
                           ??_I2C_Ack 0001                                ??_main 0072  
                              ??_xtoa 0027                     __end_of_LCD_Clear 1B00  
                       __activetblptr 000002                             ??_Bcd2Dec 0009  
                           ??_Dec2Bcd 000B                                ?_fputc 0001  
                              ?_fputs 000A                      ___awdiv@dividend 0001  
                              ?_putch 0001                      LCD_String_xy@msg 000C  
                    LCD_String_xy@pos 000B                      LCD_String_xy@row 000E  
                           ??_MSdelay 0003                                _OSCCON 000FD3  
                              _SSPADD 000FC8                                _TRISB0 007C98  
                              _TRISB1 007C99                                _SSPBUF 000FC9  
                        vfprintf@cfmt 005C                                ___wmul 1A48  
                           ??___awdiv 0005                             ??___awmod 0005  
                              _alarma 00CD                                clear_0 1A96  
                    ___awdiv@quotient 0007                       ___awmod@divisor 0003  
                     ___awmod@counter 0005                    _I2C_Repeated_Start 1A1A  
                              pad@buf 0013                  __size_of_LCD_Command 004C  
                              _strlen 1986                                fputc@c 0001  
                              fputs@c 000E                                fputs@i 000F  
                           ?_I2C_Nack 0001                                fputs@s 000A  
                           ??_isalpha 0003                             ?_I2C_Init 0001  
                           ?_I2C_Read 0001                             ?_I2C_Stop 0001  
                       main@print_min 00B5                         main@print_sec 00B3  
                           ??_islower 0003                          __mediumconst 0000  
                              tblptrh 000FF7                             ??_isupper 0003  
                              tblptrl 000FF6                                tblptru 000FF8  
                 ?_I2C_Repeated_Start 0001                                putch@c 0001  
                    __end_of_vfprintf 154C                             ??_sprintf 005E  
           __size_of_init_leds_botons 0008                                xtoa@fp 001C  
                           ??_toupper 0009                             ?_LCD_Char 0001  
                          __accesstop 0060               __end_of__initialization 1AA0  
                           ?_LCD_Init 0001                       ??_LCD_String_xy 000E  
                       ___rparam_used 000001                  ??_I2C_Repeated_Start 0002  
                      __pcstackCOMRAM 0001                         __end_of_fputc 12B4  
                       __end_of_fputs 181E                         __end_of_putch 1B30  
                        ??_LCD_String 000B                            ??_I2C_Nack 0001  
                          ??_I2C_Init 0001                            ??_I2C_Read 0001  
                          ??_I2C_Stop 0001                      ??_RTC_Read_Clock 0003  
                             ??_fputc 0005                               ??_fputs 000E  
                             ??_putch 0001                            __pbssBANK0 00BD  
                          ??_LCD_Char 0007                            ??_LCD_Init 0009  
                  __end_of_LCD_String 1608                          I2C_Read@flag 0001  
                      I2C_Read@buffer 0002                               ?___wmul 0001  
                             _I2C_Ack 1AD8                               _ACKSTAT 007E2E  
                             ?_strlen 0001                    __size_of_vfpfcnvrt 01D0  
                             _Bcd2Dec 181E                               _Dec2Bcd 1608  
                             _SSPCON1 000FC6                               _SSPCON2 000FC5  
                             _SSPSTAT 000FC7                               _MSdelay 174A  
                           _I2C_Ready 1B14                             _I2C_Start 19EC  
                           _I2C_Write 1A6E                         LCD_String@msg 0009  
                          _count_pomo 00C5                               __Hparam 0000  
                             __Lparam 0000                               ___awdiv 12B4  
                             ___awmod 143A                       __size_of___wmul 0026  
                           ?_vfprintf 0056                          __psmallconst 0800  
                             __pcinit 1A90                               __ramtop 0800  
                             __ptext0 083C                               __ptext1 1660  
                             __ptext2 14EA                               __ptext3 101A  
                             __ptext4 0D46                               __ptext5 154C  
                             __ptext6 1916                               __ptext7 1378  
                             __ptext8 1986                               __ptext9 17DA  
                     __size_of_strlen 0036                          __size_of_pad 00C2  
                             _isalpha 18A0                      ___awmod@dividend 0001  
                             _islower 1916                               _isupper 194E  
                           _LCD_Clear 1AEC                      _init_leds_botons 1B26  
                             main@aux 00B1                               _sprintf 1660  
                             _toupper 154C                  end_of_initialization 1AA0  
                             fputc@fp 0003                        LCD_Command@cmd 0008  
                       __Lmediumconst 0000                               fputs@fp 000C  
                    main@counters_min 00A7                      main@counters_sec 0075  
                          ?_I2C_Ready 0001                        main@print_fail 00B9  
                          ?_I2C_Start 0001                            ?_I2C_Write 0001  
                      main@print_pomo 00B7                     __end_of_vfpfcnvrt 11EA  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                          ??_vfprintf 005C                               strlen@a 0003  
                             strlen@s 0001                             _PORTBbits 000F81  
                           _TRISBbits 000F93                             _TRISDbits 000F95  
                          ?_LCD_Clear 0001                     __size_of_I2C_Nack 0014  
                   __size_of_I2C_Init 001A                     __size_of_I2C_Read 003A  
                   __size_of_I2C_Stop 0014                     __size_of_LCD_Char 004C  
                   __size_of_LCD_Init 0030                         ??_LCD_Command 0007  
                         vfpfcnvrt@ap 0047                           vfpfcnvrt@fp 0043  
                      __end_of___wmul 1A6E                        __end_of_strlen 19BC  
                 start_initialization 1A90                           __end_of_pad 143A  
I2C_Repeated_Start@slave_read_address 0002                           ??_I2C_Ready 0001  
                         ??_I2C_Start 0002                           ??_I2C_Write 0001  
               __end_of_LCD_String_xy 18A0                           vfprintf@fmt 0058  
         __size_of_I2C_Repeated_Start 002E                              ??___wmul 0005  
                            ?_I2C_Ack 0001                              ??_strlen 0003  
                 __end_of_LCD_Command 174A                           __pbssCOMRAM 005E  
                       __pcstackBANK0 0060                              ?_Bcd2Dec 0007  
                         ??_LCD_Clear 0009                              ?_Dec2Bcd 0009  
                            ?_MSdelay 0001                       _count_pomo_fail 00C3  
                          Bcd2Dec@bcd 0007                            Bcd2Dec@dec 000C  
                            ?___awdiv 0001              __end_of_init_leds_botons 1B2E  
                            ?___awmod 0001                     __size_of_vfprintf 0062  
                         __smallconst 0800                              _I2C_Nack 1AC4  
                            ?_isalpha 0001                              _I2C_Init 1AAA  
                            _I2C_Read 18DC                              _I2C_Stop 1B00  
                            ?_islower 0001                              ?_isupper 0001  
                          Dec2Bcd@bdc 000D                            Dec2Bcd@dec 0009  
               LCD_String_xy@location 000F                              ?_sprintf 0060  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                            ?_toupper 0007                        __size_of_putch 0002  
                            MSdelay@i 0003                              MSdelay@j 0005  
                            _LCD_Char 16B2                              _LCD_Init 19BC  
                      ___wmul@product 0005                              _LATDbits 000F8C  
             __size_of_RTC_Read_Clock 0046                             main@AM_PM 00BC  
                         _LCD_Command 16FE                             _vfpfcnvrt 101A  
                           _xtoa$1124 002F                             _xtoa$1125 0031  
                    __size_of_I2C_Ack 0014                     ___wmul@multiplier 0001  
                           main@hours 009D                      __size_of_Bcd2Dec 0042  
                          vfpfcnvrt@c 0055                      __size_of_Dec2Bcd 0058  
        I2C_Start@slave_write_address 0002                      __size_of_MSdelay 004A  
                         _counter_min 00C9                           _counter_sec 00CB  
                            __Hrparam 0000                            vfprintf@ap 005A  
                            __Lrparam 0000                            vfprintf@fp 0056  
                       I2C_Write@data 0001                      __size_of___awdiv 00C4  
                    __size_of___awmod 00B0                            ?_vfpfcnvrt 0043  
                  main@counters_pomos 007F                            sprintf@fmt 0062  
                    __size_of_isalpha 003C                      __size_of_islower 0038  
                            __ptext10 11EA                              __ptext11 1B2E  
                            __ptext20 1B14                              __ptext12 194E  
                            __ptext21 1AC4                              __ptext13 18A0  
                            __ptext30 1B00                              __ptext22 1AD8  
                            __ptext14 1B26                              __ptext31 1AAA  
                            __ptext23 1860                              __ptext15 1794  
                            __ptext32 1608                              __ptext24 15AA  
                            __ptext16 19EC                              __ptext33 143A  
                            __ptext25 16B2                              __ptext17 1A1A  
                            __ptext34 12B4                              __ptext26 19BC  
                            __ptext18 1A6E                              __ptext35 181E  
                            __ptext27 1AEC                              __ptext19 18DC  
                            __ptext36 1A48                              __ptext28 16FE  
                            __ptext29 174A                      __size_of_isupper 0038  
                    __size_of_sprintf 0052                      __size_of_toupper 005E  
                       __size_of_main 050A                         __size_of_xtoa 02D4  
                          MSdelay@val 0001                              _vfprintf 14EA  
                            main@mins 0093                              main@secs 0089  
                          _LCD_String 15AA                              isalpha@c 0001  
                           sprintf@ap 006A                              islower@c 0001  
          __end_of_I2C_Repeated_Start 1A48                              isupper@c 0001  
                      _RTC_Read_Clock 1794                     ?_init_leds_botons 0001  
                         ??_vfpfcnvrt 0049                    ??_init_leds_botons 0001  
                            sprintf@f 006C                              sprintf@s 0060  
                            toupper@c 0007                __size_of_LCD_String_xy 0040  
                         _SSPCON2bits 000FC5                __end_of_RTC_Read_Clock 17DA  
