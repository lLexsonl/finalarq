

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 14 19:59:36 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     _SSPCON2bits	set	4037
    87  0000                     _SSPADD	set	4040
    88  0000                     _SSPCON2	set	4037
    89  0000                     _SSPCON1	set	4038
    90  0000                     _SSPSTAT	set	4039
    91  0000                     _SSPBUF	set	4041
    92  0000                     _SSPSTATbits	set	4039
    93  0000                     _LATD	set	3980
    94  0000                     _TRISD	set	3989
    95  0000                     _LATDbits	set	3980
    96  0000                     _PORTBbits	set	3969
    97  0000                     _OSCCON	set	4051
    98  0000                     _TRISBbits	set	3987
    99  0000                     _TRISDbits	set	3989
   100  0000                     _ACKEN	set	32300
   101  0000                     _ACKDT	set	32301
   102  0000                     _PEN	set	32298
   103  0000                     _RSEN	set	32297
   104  0000                     _ACKSTAT	set	32302
   105  0000                     _SSPIF	set	31987
   106  0000                     _SSPIE	set	31979
   107  0000                     _TRISB1	set	31897
   108  0000                     _TRISB0	set	31896
   109  0000                     _RCEN	set	32299
   110  0000                     _LATD3	set	31843
   111  0000                     _LATD2	set	31842
   112                           
   113                           	psect	smallconst
   114  000800                     __psmallconst:
   115                           	callstack 0
   116  000800  00                 	db	0
   117  000801                     STR_9:
   118  000801  54                 	db	84	;'T'
   119  000802  65                 	db	101	;'e'
   120  000803  6D                 	db	109	;'m'
   121  000804  70                 	db	112	;'p'
   122  000805  6F                 	db	111	;'o'
   123  000806  6D                 	db	109	;'m'
   124  000807  3A                 	db	58	;':'
   125  000808  25                 	db	37
   126  000809  78                 	db	120	;'x'
   127  00080A  00                 	db	0
   128  00080B                     STR_11:
   129  00080B  20                 	db	32
   130  00080C  45                 	db	69	;'E'
   131  00080D  25                 	db	37
   132  00080E  78                 	db	120	;'x'
   133  00080F  20                 	db	32
   134  000810  46                 	db	70	;'F'
   135  000811  25                 	db	37
   136  000812  78                 	db	120	;'x'
   137  000813  00                 	db	0
   138  000814                     STR_5:
   139  000814  54                 	db	84	;'T'
   140  000815  69                 	db	105	;'i'
   141  000816  6D                 	db	109	;'m'
   142  000817  3A                 	db	58	;':'
   143  000818  25                 	db	37
   144  000819  78                 	db	120	;'x'
   145  00081A  3A                 	db	58	;':'
   146  00081B  00                 	db	0
   147  00081C                     STR_3:
   148  00081C  25                 	db	37
   149  00081D  78                 	db	120	;'x'
   150  00081E  20                 	db	32
   151  00081F  00                 	db	0
   152  000820                     STR_10:
   153  000820  2D                 	db	45
   154  000821  25                 	db	37
   155  000822  78                 	db	120	;'x'
   156  000823  00                 	db	0
   157  000824                     STR_2:
   158  000824  41                 	db	65	;'A'
   159  000825  4D                 	db	77	;'M'
   160  000826  00                 	db	0
   161  000827                     STR_1:
   162  000827  50                 	db	80	;'P'
   163  000828  4D                 	db	77	;'M'
   164  000829  00                 	db	0
   165  00082A  00                 	db	0	; dummy byte at the end
   166  0000                     
   167                           ; #config settings
   168                           
   169                           	psect	cinit
   170  0019F2                     __pcinit:
   171                           	callstack 0
   172  0019F2                     start_initialization:
   173                           	callstack 0
   174  0019F2                     __initialization:
   175                           	callstack 0
   176                           
   177                           ; Clear objects allocated to BANK0 (64 bytes)
   178  0019F2  EE00  F0BD         	lfsr	0,__pbssBANK0
   179  0019F6  0E40               	movlw	64
   180  0019F8                     clear_0:
   181  0019F8  6AEE               	clrf	postinc0,c
   182  0019FA  06E8               	decf	wreg,f,c
   183  0019FC  E1FD               	bnz	clear_0
   184                           
   185                           ; Clear objects allocated to COMRAM (2 bytes)
   186  0019FE  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   187  001A00  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   188  001A02                     end_of_initialization:
   189                           	callstack 0
   190  001A02                     __end_of__initialization:
   191                           	callstack 0
   192  001A02  0E00               	movlw	low (__Lmediumconst shr (0+16))
   193  001A04  6EF8               	movwf	tblptru,c
   194  001A06  0100               	movlb	0
   195  001A08  EF16  F004         	goto	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMRAM
   198  00005E                     __pbssCOMRAM:
   199                           	callstack 0
   200  00005E                     _flags:
   201                           	callstack 0
   202  00005E                     	ds	2
   203                           
   204                           	psect	bssBANK0
   205  0000BD                     __pbssBANK0:
   206                           	callstack 0
   207  0000BD                     _nout:
   208                           	callstack 0
   209  0000BD                     	ds	2
   210  0000BF                     _width:
   211                           	callstack 0
   212  0000BF                     	ds	2
   213  0000C1                     _prec:
   214                           	callstack 0
   215  0000C1                     	ds	2
   216  0000C3                     _count_pomo_fail:
   217                           	callstack 0
   218  0000C3                     	ds	2
   219  0000C5                     _count_pomo:
   220                           	callstack 0
   221  0000C5                     	ds	2
   222  0000C7                     _run:
   223                           	callstack 0
   224  0000C7                     	ds	2
   225  0000C9                     _counter_min:
   226                           	callstack 0
   227  0000C9                     	ds	2
   228  0000CB                     _counter_sec:
   229                           	callstack 0
   230  0000CB                     	ds	2
   231  0000CD                     _alarma:
   232                           	callstack 0
   233  0000CD                     	ds	2
   234  0000CF                     _Year:
   235                           	callstack 0
   236  0000CF                     	ds	2
   237  0000D1                     _Month:
   238                           	callstack 0
   239  0000D1                     	ds	2
   240  0000D3                     _Date:
   241                           	callstack 0
   242  0000D3                     	ds	2
   243  0000D5                     _Day:
   244                           	callstack 0
   245  0000D5                     	ds	2
   246  0000D7                     _hour:
   247                           	callstack 0
   248  0000D7                     	ds	2
   249  0000D9                     _min:
   250                           	callstack 0
   251  0000D9                     	ds	2
   252  0000DB                     _sec:
   253                           	callstack 0
   254  0000DB                     	ds	2
   255  0000DD                     _dbuf:
   256                           	callstack 0
   257  0000DD                     	ds	32
   258                           
   259                           	psect	cstackBANK0
   260  000060                     __pcstackBANK0:
   261                           	callstack 0
   262  000060                     ?_sprintf:
   263                           	callstack 0
   264  000060                     sprintf@s:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x0
   268  000060                     	ds	2
   269  000062                     sprintf@fmt:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x2
   273  000062                     	ds	8
   274  00006A                     sprintf@ap:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0xA
   278  00006A                     	ds	2
   279  00006C                     sprintf@f:
   280                           	callstack 0
   281                           
   282                           ; 6 bytes @ 0xC
   283  00006C                     	ds	6
   284  000072                     ??_main:
   285                           
   286                           ; 1 bytes @ 0x12
   287  000072                     	ds	3
   288  000075                     main@counters_sec:
   289                           	callstack 0
   290                           
   291                           ; 10 bytes @ 0x15
   292  000075                     	ds	10
   293  00007F                     main@counters_min:
   294                           	callstack 0
   295                           
   296                           ; 10 bytes @ 0x1F
   297  00007F                     	ds	10
   298  000089                     main@counters_pomos:
   299                           	callstack 0
   300                           
   301                           ; 10 bytes @ 0x29
   302  000089                     	ds	10
   303  000093                     main@secs:
   304                           	callstack 0
   305                           
   306                           ; 10 bytes @ 0x33
   307  000093                     	ds	10
   308  00009D                     main@mins:
   309                           	callstack 0
   310                           
   311                           ; 10 bytes @ 0x3D
   312  00009D                     	ds	10
   313  0000A7                     main@hours:
   314                           	callstack 0
   315                           
   316                           ; 10 bytes @ 0x47
   317  0000A7                     	ds	10
   318  0000B1                     main@aux:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x51
   322  0000B1                     	ds	2
   323  0000B3                     main@print_sec:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x53
   327  0000B3                     	ds	2
   328  0000B5                     main@print_min:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x55
   332  0000B5                     	ds	2
   333  0000B7                     main@print_pomo:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x57
   337  0000B7                     	ds	2
   338  0000B9                     main@print_fail:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x59
   342  0000B9                     	ds	2
   343  0000BB                     main@Clock_type:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x5B
   347  0000BB                     	ds	1
   348  0000BC                     main@AM_PM:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x5C
   352  0000BC                     	ds	1
   353                           
   354                           	psect	cstackCOMRAM
   355  000001                     __pcstackCOMRAM:
   356                           	callstack 0
   357  000001                     ?_strlen:
   358                           	callstack 0
   359  000001                     ?_isupper:
   360                           	callstack 0
   361  000001                     ?_isalpha:
   362                           	callstack 0
   363  000001                     ?_islower:
   364                           	callstack 0
   365  000001                     ?___wmul:
   366                           	callstack 0
   367  000001                     ?___awdiv:
   368                           	callstack 0
   369  000001                     ?___awmod:
   370                           	callstack 0
   371  000001                     I2C_Read@flag:
   372                           	callstack 0
   373  000001                     I2C_Write@data:
   374                           	callstack 0
   375  000001                     MSdelay@val:
   376                           	callstack 0
   377  000001                     ___wmul@multiplier:
   378                           	callstack 0
   379  000001                     ___awdiv@dividend:
   380                           	callstack 0
   381  000001                     ___awmod@dividend:
   382                           	callstack 0
   383  000001                     isalpha@c:
   384                           	callstack 0
   385  000001                     isupper@c:
   386                           	callstack 0
   387  000001                     fputc@c:
   388                           	callstack 0
   389  000001                     strlen@s:
   390                           	callstack 0
   391  000001                     islower@c:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x0
   395  000001                     	ds	1
   396  000002                     I2C_Read@buffer:
   397                           	callstack 0
   398  000002                     I2C_Start@slave_write_address:
   399                           	callstack 0
   400  000002                     I2C_Repeated_Start@slave_read_address:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x1
   404  000002                     	ds	1
   405  000003                     ??_isupper:
   406  000003                     ??_isalpha:
   407  000003                     ??_islower:
   408  000003                     ??_RTC_Read_Clock:
   409  000003                     MSdelay@i:
   410                           	callstack 0
   411  000003                     ___wmul@multiplicand:
   412                           	callstack 0
   413  000003                     ___awdiv@divisor:
   414                           	callstack 0
   415  000003                     ___awmod@divisor:
   416                           	callstack 0
   417  000003                     fputc@fp:
   418                           	callstack 0
   419  000003                     strlen@a:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x2
   423  000003                     	ds	1
   424  000004                     RTC_Read_Clock@read_clock_address:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x3
   428  000004                     	ds	1
   429  000005                     ??_fputc:
   430  000005                     ___awdiv@counter:
   431                           	callstack 0
   432  000005                     ___awmod@counter:
   433                           	callstack 0
   434  000005                     MSdelay@j:
   435                           	callstack 0
   436  000005                     ___wmul@product:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x4
   440  000005                     	ds	1
   441  000006                     ___awdiv@sign:
   442                           	callstack 0
   443  000006                     ___awmod@sign:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x5
   447  000006                     	ds	1
   448  000007                     ??_LCD_Command:
   449  000007                     ??_LCD_Char:
   450  000007                     ?_toupper:
   451                           	callstack 0
   452  000007                     ?_Bcd2Dec:
   453                           	callstack 0
   454  000007                     Bcd2Dec@bcd:
   455                           	callstack 0
   456  000007                     ___awdiv@quotient:
   457                           	callstack 0
   458  000007                     toupper@c:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x6
   462  000007                     	ds	1
   463  000008                     LCD_Command@cmd:
   464                           	callstack 0
   465  000008                     LCD_Char@dat:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x7
   469  000008                     	ds	1
   470  000009                     ??_toupper:
   471  000009                     ??_Bcd2Dec:
   472  000009                     ?_Dec2Bcd:
   473                           	callstack 0
   474  000009                     Dec2Bcd@dec:
   475                           	callstack 0
   476  000009                     LCD_String@msg:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x8
   480  000009                     	ds	1
   481  00000A                     fputs@s:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x9
   485  00000A                     	ds	1
   486  00000B                     ??_Dec2Bcd:
   487  00000B                     LCD_String_xy@pos:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0xA
   491  00000B                     	ds	1
   492  00000C                     Bcd2Dec@dec:
   493                           	callstack 0
   494  00000C                     LCD_String_xy@msg:
   495                           	callstack 0
   496  00000C                     fputs@fp:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0xB
   500  00000C                     	ds	1
   501  00000D                     Dec2Bcd@bdc:
   502                           	callstack 0
   503  00000D                     _toupper$1202:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0xC
   507  00000D                     	ds	1
   508  00000E                     LCD_String_xy@row:
   509                           	callstack 0
   510  00000E                     fputs@c:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0xD
   514  00000E                     	ds	1
   515  00000F                     LCD_String_xy@location:
   516                           	callstack 0
   517  00000F                     fputs@i:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0xE
   521  00000F                     	ds	2
   522  000011                     ?_pad:
   523                           	callstack 0
   524  000011                     pad@fp:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x10
   528  000011                     	ds	2
   529  000013                     pad@buf:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x12
   533  000013                     	ds	2
   534  000015                     pad@p:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x14
   538  000015                     	ds	2
   539  000017                     ??_pad:
   540                           
   541                           ; 1 bytes @ 0x16
   542  000017                     	ds	1
   543  000018                     pad@i:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x17
   547  000018                     	ds	2
   548  00001A                     pad@w:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x19
   552  00001A                     	ds	2
   553  00001C                     ?_xtoa:
   554                           	callstack 0
   555  00001C                     xtoa@fp:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x1B
   559  00001C                     	ds	2
   560  00001E                     xtoa@d:
   561                           	callstack 0
   562                           
   563                           ; 8 bytes @ 0x1D
   564  00001E                     	ds	8
   565  000026                     xtoa@x:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x25
   569  000026                     	ds	1
   570  000027                     ??_xtoa:
   571                           
   572                           ; 1 bytes @ 0x26
   573  000027                     	ds	8
   574  00002F                     _xtoa$1119:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x2E
   578  00002F                     	ds	2
   579  000031                     _xtoa$1120:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x30
   583  000031                     	ds	2
   584  000033                     xtoa@p:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x32
   588  000033                     	ds	2
   589  000035                     xtoa@w:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x34
   593  000035                     	ds	2
   594  000037                     xtoa@n:
   595                           	callstack 0
   596                           
   597                           ; 8 bytes @ 0x36
   598  000037                     	ds	8
   599  00003F                     xtoa@i:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x3E
   603  00003F                     	ds	2
   604  000041                     xtoa@c:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x40
   608  000041                     	ds	2
   609  000043                     ?_vfpfcnvrt:
   610                           	callstack 0
   611  000043                     vfpfcnvrt@fp:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x42
   615  000043                     	ds	2
   616  000045                     vfpfcnvrt@fmt:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x44
   620  000045                     	ds	2
   621  000047                     vfpfcnvrt@ap:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x46
   625  000047                     	ds	2
   626  000049                     ??_vfpfcnvrt:
   627                           
   628                           ; 1 bytes @ 0x48
   629  000049                     	ds	4
   630  00004D                     vfpfcnvrt@llu:
   631                           	callstack 0
   632                           
   633                           ; 8 bytes @ 0x4C
   634  00004D                     	ds	8
   635  000055                     vfpfcnvrt@c:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x54
   639  000055                     	ds	1
   640  000056                     ?_vfprintf:
   641                           	callstack 0
   642  000056                     vfprintf@fp:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x55
   646  000056                     	ds	2
   647  000058                     vfprintf@fmt:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x57
   651  000058                     	ds	2
   652  00005A                     vfprintf@ap:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x59
   656  00005A                     	ds	2
   657  00005C                     vfprintf@cfmt:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x5B
   661  00005C                     	ds	2
   662  00005E                     
   663                           ; 1 bytes @ 0x5D
   664 ;;
   665 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   666 ;;
   667 ;; *************** function _main *****************
   668 ;; Defined at:
   669 ;;		line 64 in file "RTC.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  print_fail      2   89[BANK0 ] int 
   674 ;;  print_pomo      2   87[BANK0 ] int 
   675 ;;  print_min       2   85[BANK0 ] int 
   676 ;;  print_sec       2   83[BANK0 ] int 
   677 ;;  aux             2   81[BANK0 ] int 
   678 ;;  hours          10   71[BANK0 ] unsigned char [10]
   679 ;;  mins           10   61[BANK0 ] unsigned char [10]
   680 ;;  secs           10   51[BANK0 ] unsigned char [10]
   681 ;;  counters_pom   10   41[BANK0 ] unsigned char [10]
   682 ;;  counters_min   10   31[BANK0 ] unsigned char [10]
   683 ;;  counters_sec   10   21[BANK0 ] unsigned char [10]
   684 ;;  AM_PM           1   92[BANK0 ] unsigned char 
   685 ;;  Clock_type      1   91[BANK0 ] unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   695 ;;      Params:         0       0       0       0       0       0       0       0       0
   696 ;;      Locals:         0      72       0       0       0       0       0       0       0
   697 ;;      Temps:          0       3       0       0       0       0       0       0       0
   698 ;;      Totals:         0      75       0       0       0       0       0       0       0
   699 ;;Total ram usage:       75 bytes
   700 ;; Hardware stack levels required when called:    8
   701 ;; This function calls:
   702 ;;		_Bcd2Dec
   703 ;;		_Dec2Bcd
   704 ;;		_I2C_Init
   705 ;;		_I2C_Stop
   706 ;;		_LCD_Clear
   707 ;;		_LCD_Init
   708 ;;		_LCD_String
   709 ;;		_LCD_String_xy
   710 ;;		_MSdelay
   711 ;;		_RTC_Read_Clock
   712 ;;		___awmod
   713 ;;		_sprintf
   714 ;; This function is called by:
   715 ;;		Startup code after reset
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text0
   720  00082C                     __ptext0:
   721                           	callstack 0
   722  00082C                     _main:
   723                           	callstack 23
   724  00082C                     
   725                           ;RTC.c: 66:     TRISDbits.TRISD0 = 0;
   726  00082C  9095               	bcf	149,0,c	;volatile
   727                           
   728                           ;RTC.c: 67:     TRISDbits.TRISD1 = 0;
   729  00082E  9295               	bcf	149,1,c	;volatile
   730                           
   731                           ;RTC.c: 69:     TRISBbits.TRISB7 = 1;
   732  000830  8E93               	bsf	147,7,c	;volatile
   733  000832                     
   734                           ;RTC.c: 71:     char secs[10],mins[10],hours[10];;RTC.c: 72:     char counters_sec[10], 
      +                          counters_min[10], counters_pomos[10];;RTC.c: 73:     char Clock_type = 0x06;
   735  000832  0E06               	movlw	6
   736  000834  0100               	movlb	0	; () banked
   737  000836  6FBB               	movwf	main@Clock_type& (0+255),b
   738                           
   739                           ;RTC.c: 74:     char AM_PM = 0x05;
   740  000838  0E05               	movlw	5
   741  00083A  6FBC               	movwf	main@AM_PM& (0+255),b
   742                           
   743                           ;RTC.c: 75:     OSCCON=0x72;
   744  00083C  0E72               	movlw	114
   745  00083E  6ED3               	movwf	211,c	;volatile
   746  000840                     
   747                           ; BSR set to: 0
   748                           ;RTC.c: 77:     I2C_Init();
   749  000840  EC06  F00D         	call	_I2C_Init	;wreg free
   750  000844                     
   751                           ;RTC.c: 78:     LCD_Init();
   752  000844  EC8F  F00C         	call	_LCD_Init	;wreg free
   753  000848                     
   754                           ;RTC.c: 79:     LCD_Clear();
   755  000848  EC27  F00D         	call	_LCD_Clear	;wreg free
   756  00084C                     
   757                           ;RTC.c: 80:     MSdelay(10);
   758  00084C  0E00               	movlw	0
   759  00084E  6E02               	movwf	(MSdelay@val+1)^0,c
   760  000850  0E0A               	movlw	10
   761  000852  6E01               	movwf	MSdelay@val^0,c
   762  000854  EC56  F00B         	call	_MSdelay	;wreg free
   763  000858                     
   764                           ;RTC.c: 81:     alarma=1 , counter_sec=0, counter_min=0, run = 1;
   765  000858  0E00               	movlw	0
   766  00085A  0100               	movlb	0	; () banked
   767  00085C  6FCE               	movwf	(_alarma+1)& (0+255),b
   768  00085E  0E01               	movlw	1
   769  000860  6FCD               	movwf	_alarma& (0+255),b
   770  000862                     
   771                           ; BSR set to: 0
   772  000862  0E00               	movlw	0
   773  000864  6FCC               	movwf	(_counter_sec+1)& (0+255),b
   774  000866  0E00               	movlw	0
   775  000868  6FCB               	movwf	_counter_sec& (0+255),b
   776  00086A                     
   777                           ; BSR set to: 0
   778  00086A  0E00               	movlw	0
   779  00086C  6FCA               	movwf	(_counter_min+1)& (0+255),b
   780  00086E  0E00               	movlw	0
   781  000870  6FC9               	movwf	_counter_min& (0+255),b
   782  000872                     
   783                           ; BSR set to: 0
   784  000872  0E00               	movlw	0
   785  000874  6FC8               	movwf	(_run+1)& (0+255),b
   786  000876  0E01               	movlw	1
   787  000878  6FC7               	movwf	_run& (0+255),b
   788  00087A                     
   789                           ; BSR set to: 0
   790                           ;RTC.c: 82:     count_pomo=0, count_pomo_fail=0;
   791  00087A  0E00               	movlw	0
   792  00087C  6FC6               	movwf	(_count_pomo+1)& (0+255),b
   793  00087E  0E00               	movlw	0
   794  000880  6FC5               	movwf	_count_pomo& (0+255),b
   795  000882                     
   796                           ; BSR set to: 0
   797  000882  0E00               	movlw	0
   798  000884  6FC4               	movwf	(_count_pomo_fail+1)& (0+255),b
   799  000886  0E00               	movlw	0
   800  000888  6FC3               	movwf	_count_pomo_fail& (0+255),b
   801  00088A                     l85:
   802                           
   803                           ; BSR set to: 0
   804                           ;RTC.c: 84:     {;RTC.c: 85:         if(alarma) {
   805  00088A  51CD               	movf	_alarma& (0+255),w,b
   806  00088C  11CE               	iorwf	(_alarma+1)& (0+255),w,b
   807  00088E  B4D8               	btfsc	status,2,c
   808  000890  EF4C  F004         	goto	u1611
   809  000894  EF4E  F004         	goto	u1610
   810  000898                     u1611:
   811  000898  EF2A  F005         	goto	l2283
   812  00089C                     u1610:
   813  00089C                     
   814                           ; BSR set to: 0
   815                           ;RTC.c: 87:         RTC_Read_Clock(0);
   816  00089C  0E00               	movlw	0
   817  00089E  EC7B  F00B         	call	_RTC_Read_Clock
   818  0008A2                     
   819                           ;RTC.c: 88:         I2C_Stop();
   820  0008A2  EC31  F00D         	call	_I2C_Stop	;wreg free
   821  0008A6                     
   822                           ;RTC.c: 89:         if(hour & (1<<Clock_type)){
   823  0008A6  C0BB  F072         	movff	main@Clock_type,??_main
   824  0008AA  0E01               	movlw	1
   825  0008AC  0100               	movlb	0	; () banked
   826  0008AE  6F73               	movwf	(??_main+1)& (0+255),b
   827  0008B0  0E00               	movlw	0
   828  0008B2  6F74               	movwf	(??_main+2)& (0+255),b
   829  0008B4  2B72               	incf	??_main& (0+255),f,b
   830  0008B6  EF60  F004         	goto	u1624
   831  0008BA                     u1625:
   832  0008BA  90D8               	bcf	status,0,c
   833  0008BC  3773               	rlcf	(??_main+1)& (0+255),f,b
   834  0008BE  3774               	rlcf	(??_main+2)& (0+255),f,b
   835  0008C0                     u1624:
   836  0008C0  2F72               	decfsz	??_main& (0+255),f,b
   837  0008C2  EF5D  F004         	goto	u1625
   838  0008C6  0100               	movlb	0	; () banked
   839  0008C8  51D7               	movf	_hour& (0+255),w,b
   840  0008CA  1773               	andwf	(??_main+1)& (0+255),f,b
   841  0008CC  51D8               	movf	(_hour+1)& (0+255),w,b
   842  0008CE  1774               	andwf	(??_main+2)& (0+255),f,b
   843  0008D0  5173               	movf	(??_main+1)& (0+255),w,b
   844  0008D2  1174               	iorwf	(??_main+2)& (0+255),w,b
   845  0008D4  B4D8               	btfsc	status,2,c
   846  0008D6  EF6F  F004         	goto	u1631
   847  0008DA  EF71  F004         	goto	u1630
   848  0008DE                     u1631:
   849  0008DE  EFEA  F004         	goto	l2267
   850  0008E2                     u1630:
   851  0008E2                     
   852                           ; BSR set to: 0
   853                           ;RTC.c: 91:             if(hour & (1<<AM_PM)){
   854  0008E2  C0BC  F072         	movff	main@AM_PM,??_main
   855  0008E6  0E01               	movlw	1
   856  0008E8  6F73               	movwf	(??_main+1)& (0+255),b
   857  0008EA  0E00               	movlw	0
   858  0008EC  6F74               	movwf	(??_main+2)& (0+255),b
   859  0008EE  2B72               	incf	??_main& (0+255),f,b
   860  0008F0  EF7D  F004         	goto	u1644
   861  0008F4                     u1645:
   862  0008F4  90D8               	bcf	status,0,c
   863  0008F6  3773               	rlcf	(??_main+1)& (0+255),f,b
   864  0008F8  3774               	rlcf	(??_main+2)& (0+255),f,b
   865  0008FA                     u1644:
   866  0008FA  2F72               	decfsz	??_main& (0+255),f,b
   867  0008FC  EF7A  F004         	goto	u1645
   868  000900  0100               	movlb	0	; () banked
   869  000902  51D7               	movf	_hour& (0+255),w,b
   870  000904  1773               	andwf	(??_main+1)& (0+255),f,b
   871  000906  51D8               	movf	(_hour+1)& (0+255),w,b
   872  000908  1774               	andwf	(??_main+2)& (0+255),f,b
   873  00090A  5173               	movf	(??_main+1)& (0+255),w,b
   874  00090C  1174               	iorwf	(??_main+2)& (0+255),w,b
   875  00090E  B4D8               	btfsc	status,2,c
   876  000910  EF8C  F004         	goto	u1651
   877  000914  EF8E  F004         	goto	u1650
   878  000918                     u1651:
   879  000918  EF99  F004         	goto	l2251
   880  00091C                     u1650:
   881  00091C                     
   882                           ; BSR set to: 0
   883                           ;RTC.c: 92:                 LCD_String_xy(1,14,"PM");
   884  00091C  0E0E               	movlw	14
   885  00091E  6E0B               	movwf	LCD_String_xy@pos^0,c
   886  000920  0E27               	movlw	low STR_1
   887  000922  6E0C               	movwf	LCD_String_xy@msg^0,c
   888  000924  0E08               	movlw	high STR_1
   889  000926  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   890  000928  0E01               	movlw	1
   891  00092A  ECE1  F00B         	call	_LCD_String_xy
   892                           
   893                           ;RTC.c: 93:             }
   894  00092E  EFA2  F004         	goto	l2253
   895  000932                     l2251:
   896                           
   897                           ; BSR set to: 0
   898                           ;RTC.c: 95:                 LCD_String_xy(1,14,"AM");
   899  000932  0E0E               	movlw	14
   900  000934  6E0B               	movwf	LCD_String_xy@pos^0,c
   901  000936  0E24               	movlw	low STR_2
   902  000938  6E0C               	movwf	LCD_String_xy@msg^0,c
   903  00093A  0E08               	movlw	high STR_2
   904  00093C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   905  00093E  0E01               	movlw	1
   906  000940  ECE1  F00B         	call	_LCD_String_xy
   907  000944                     l2253:
   908                           
   909                           ;RTC.c: 98:             hour = hour & (0x1f);
   910  000944  0E1F               	movlw	31
   911  000946  0100               	movlb	0	; () banked
   912  000948  15D7               	andwf	_hour& (0+255),w,b
   913  00094A  6FD7               	movwf	_hour& (0+255),b
   914  00094C  6BD8               	clrf	(_hour+1)& (0+255),b
   915  00094E                     
   916                           ; BSR set to: 0
   917                           ;RTC.c: 99:             sprintf(secs,"%x ",sec);
   918  00094E  0E93               	movlw	low main@secs
   919  000950  6F60               	movwf	sprintf@s& (0+255),b
   920  000952  0E00               	movlw	high main@secs
   921  000954  6F61               	movwf	(sprintf@s+1)& (0+255),b
   922  000956  0E1C               	movlw	low STR_3
   923  000958  6F62               	movwf	sprintf@fmt& (0+255),b
   924  00095A  0E08               	movlw	high STR_3
   925  00095C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   926  00095E  C0DB  F064         	movff	_sec,?_sprintf+4
   927  000962  C0DC  F065         	movff	_sec+1,?_sprintf+5
   928  000966  ECE1  F00A         	call	_sprintf	;wreg free
   929  00096A                     
   930                           ;RTC.c: 100:             sprintf(mins,"%x:",min);
   931  00096A  0E9D               	movlw	low main@mins
   932  00096C  0100               	movlb	0	; () banked
   933  00096E  6F60               	movwf	sprintf@s& (0+255),b
   934  000970  0E00               	movlw	high main@mins
   935  000972  6F61               	movwf	(sprintf@s+1)& (0+255),b
   936  000974  0E18               	movlw	low (STR_5+4)
   937  000976  6F62               	movwf	sprintf@fmt& (0+255),b
   938  000978  0E08               	movlw	high (STR_5+4)
   939  00097A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   940  00097C  C0D9  F064         	movff	_min,?_sprintf+4
   941  000980  C0DA  F065         	movff	_min+1,?_sprintf+5
   942  000984  ECE1  F00A         	call	_sprintf	;wreg free
   943  000988                     
   944                           ;RTC.c: 101:             sprintf(hours,"Tim:%x:",hour);
   945  000988  0EA7               	movlw	low main@hours
   946  00098A  0100               	movlb	0	; () banked
   947  00098C  6F60               	movwf	sprintf@s& (0+255),b
   948  00098E  0E00               	movlw	high main@hours
   949  000990  6F61               	movwf	(sprintf@s+1)& (0+255),b
   950  000992  0E14               	movlw	low STR_5
   951  000994  6F62               	movwf	sprintf@fmt& (0+255),b
   952  000996  0E08               	movlw	high STR_5
   953  000998  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   954  00099A  C0D7  F064         	movff	_hour,?_sprintf+4
   955  00099E  C0D8  F065         	movff	_hour+1,?_sprintf+5
   956  0009A2  ECE1  F00A         	call	_sprintf	;wreg free
   957  0009A6                     
   958                           ;RTC.c: 102:             LCD_String_xy(0,0,hours);
   959  0009A6  0E00               	movlw	0
   960  0009A8  6E0B               	movwf	LCD_String_xy@pos^0,c
   961  0009AA  0EA7               	movlw	low main@hours
   962  0009AC  6E0C               	movwf	LCD_String_xy@msg^0,c
   963  0009AE  0E00               	movlw	high main@hours
   964  0009B0  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   965  0009B2  0E00               	movlw	0
   966  0009B4  ECE1  F00B         	call	_LCD_String_xy
   967  0009B8                     l2263:
   968                           
   969                           ;RTC.c: 103:             LCD_String(mins);
   970  0009B8  0E9D               	movlw	low main@mins
   971  0009BA  6E09               	movwf	LCD_String@msg^0,c
   972  0009BC  0E00               	movlw	high main@mins
   973  0009BE  6E0A               	movwf	(LCD_String@msg+1)^0,c
   974  0009C0  EC86  F00A         	call	_LCD_String	;wreg free
   975  0009C4                     
   976                           ;RTC.c: 104:             LCD_String(secs);
   977  0009C4  0E93               	movlw	low main@secs
   978  0009C6  6E09               	movwf	LCD_String@msg^0,c
   979  0009C8  0E00               	movlw	high main@secs
   980  0009CA  6E0A               	movwf	(LCD_String@msg+1)^0,c
   981  0009CC  EC86  F00A         	call	_LCD_String	;wreg free
   982                           
   983                           ;RTC.c: 105:         }
   984  0009D0  EF25  F005         	goto	l2281
   985  0009D4                     l2267:
   986                           
   987                           ; BSR set to: 0
   988                           ;RTC.c: 108:             hour = hour & (0x3f);
   989  0009D4  0E3F               	movlw	63
   990  0009D6  15D7               	andwf	_hour& (0+255),w,b
   991  0009D8  6FD7               	movwf	_hour& (0+255),b
   992  0009DA  6BD8               	clrf	(_hour+1)& (0+255),b
   993  0009DC                     
   994                           ; BSR set to: 0
   995                           ;RTC.c: 109:             sprintf(secs,"%x ",sec);
   996  0009DC  0E93               	movlw	low main@secs
   997  0009DE  6F60               	movwf	sprintf@s& (0+255),b
   998  0009E0  0E00               	movlw	high main@secs
   999  0009E2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1000  0009E4  0E1C               	movlw	low STR_3
  1001  0009E6  6F62               	movwf	sprintf@fmt& (0+255),b
  1002  0009E8  0E08               	movlw	high STR_3
  1003  0009EA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1004  0009EC  C0DB  F064         	movff	_sec,?_sprintf+4
  1005  0009F0  C0DC  F065         	movff	_sec+1,?_sprintf+5
  1006  0009F4  ECE1  F00A         	call	_sprintf	;wreg free
  1007  0009F8                     
  1008                           ;RTC.c: 110:             sprintf(mins,"%x:",min);
  1009  0009F8  0E9D               	movlw	low main@mins
  1010  0009FA  0100               	movlb	0	; () banked
  1011  0009FC  6F60               	movwf	sprintf@s& (0+255),b
  1012  0009FE  0E00               	movlw	high main@mins
  1013  000A00  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1014  000A02  0E18               	movlw	low (STR_5+4)
  1015  000A04  6F62               	movwf	sprintf@fmt& (0+255),b
  1016  000A06  0E08               	movlw	high (STR_5+4)
  1017  000A08  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1018  000A0A  C0D9  F064         	movff	_min,?_sprintf+4
  1019  000A0E  C0DA  F065         	movff	_min+1,?_sprintf+5
  1020  000A12  ECE1  F00A         	call	_sprintf	;wreg free
  1021  000A16                     
  1022                           ;RTC.c: 111:             sprintf(hours,"Tim:%x:",hour);
  1023  000A16  0EA7               	movlw	low main@hours
  1024  000A18  0100               	movlb	0	; () banked
  1025  000A1A  6F60               	movwf	sprintf@s& (0+255),b
  1026  000A1C  0E00               	movlw	high main@hours
  1027  000A1E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1028  000A20  0E14               	movlw	low STR_5
  1029  000A22  6F62               	movwf	sprintf@fmt& (0+255),b
  1030  000A24  0E08               	movlw	high STR_5
  1031  000A26  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1032  000A28  C0D7  F064         	movff	_hour,?_sprintf+4
  1033  000A2C  C0D8  F065         	movff	_hour+1,?_sprintf+5
  1034  000A30  ECE1  F00A         	call	_sprintf	;wreg free
  1035  000A34                     
  1036                           ;RTC.c: 112:             LCD_String_xy(0,0,hours);
  1037  000A34  0E00               	movlw	0
  1038  000A36  6E0B               	movwf	LCD_String_xy@pos^0,c
  1039  000A38  0EA7               	movlw	low main@hours
  1040  000A3A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1041  000A3C  0E00               	movlw	high main@hours
  1042  000A3E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1043  000A40  0E00               	movlw	0
  1044  000A42  ECE1  F00B         	call	_LCD_String_xy
  1045  000A46  EFDC  F004         	goto	l2263
  1046  000A4A                     l2281:
  1047                           
  1048                           ;RTC.c: 116:         alarma=0;
  1049  000A4A  0E00               	movlw	0
  1050  000A4C  0100               	movlb	0	; () banked
  1051  000A4E  6FCE               	movwf	(_alarma+1)& (0+255),b
  1052  000A50  0E00               	movlw	0
  1053  000A52  6FCD               	movwf	_alarma& (0+255),b
  1054  000A54                     l2283:
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;RTC.c: 119:         MSdelay(1000);
  1058  000A54  0E03               	movlw	3
  1059  000A56  6E02               	movwf	(MSdelay@val+1)^0,c
  1060  000A58  0EE8               	movlw	232
  1061  000A5A  6E01               	movwf	MSdelay@val^0,c
  1062  000A5C  EC56  F00B         	call	_MSdelay	;wreg free
  1063  000A60                     
  1064                           ;RTC.c: 121:         if (!alarma) {
  1065  000A60  0100               	movlb	0	; () banked
  1066  000A62  51CD               	movf	_alarma& (0+255),w,b
  1067  000A64  11CE               	iorwf	(_alarma+1)& (0+255),w,b
  1068  000A66  A4D8               	btfss	status,2,c
  1069  000A68  EF38  F005         	goto	u1661
  1070  000A6C  EF3A  F005         	goto	u1660
  1071  000A70                     u1661:
  1072  000A70  EF45  F004         	goto	l85
  1073  000A74                     u1660:
  1074  000A74                     
  1075                           ; BSR set to: 0
  1076                           ;RTC.c: 123:             if (!PORTBbits.RB7) {
  1077  000A74  BE81               	btfsc	129,7,c	;volatile
  1078  000A76  EF3F  F005         	goto	u1671
  1079  000A7A  EF41  F005         	goto	u1670
  1080  000A7E                     u1671:
  1081  000A7E  EF52  F005         	goto	l2297
  1082  000A82                     u1670:
  1083  000A82                     
  1084                           ; BSR set to: 0
  1085                           ;RTC.c: 124:                 MSdelay(50);
  1086  000A82  0E00               	movlw	0
  1087  000A84  6E02               	movwf	(MSdelay@val+1)^0,c
  1088  000A86  0E32               	movlw	50
  1089  000A88  6E01               	movwf	MSdelay@val^0,c
  1090  000A8A  EC56  F00B         	call	_MSdelay	;wreg free
  1091  000A8E                     
  1092                           ;RTC.c: 125:                 counter_min = 0;
  1093  000A8E  0E00               	movlw	0
  1094  000A90  0100               	movlb	0	; () banked
  1095  000A92  6FCA               	movwf	(_counter_min+1)& (0+255),b
  1096  000A94  0E00               	movlw	0
  1097  000A96  6FC9               	movwf	_counter_min& (0+255),b
  1098  000A98                     
  1099                           ; BSR set to: 0
  1100                           ;RTC.c: 126:                 counter_sec = 0;
  1101  000A98  0E00               	movlw	0
  1102  000A9A  6FCC               	movwf	(_counter_sec+1)& (0+255),b
  1103  000A9C  0E00               	movlw	0
  1104  000A9E  6FCB               	movwf	_counter_sec& (0+255),b
  1105  000AA0                     
  1106                           ; BSR set to: 0
  1107                           ;RTC.c: 127:                 count_pomo_fail++;
  1108  000AA0  4BC3               	infsnz	_count_pomo_fail& (0+255),f,b
  1109  000AA2  2BC4               	incf	(_count_pomo_fail+1)& (0+255),f,b
  1110  000AA4                     l2297:
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;RTC.c: 130:             if (run) {
  1114  000AA4  51C7               	movf	_run& (0+255),w,b
  1115  000AA6  11C8               	iorwf	(_run+1)& (0+255),w,b
  1116  000AA8  B4D8               	btfsc	status,2,c
  1117  000AAA  EF59  F005         	goto	u1681
  1118  000AAE  EF5B  F005         	goto	u1680
  1119  000AB2                     u1681:
  1120  000AB2  EF5E  F005         	goto	l93
  1121  000AB6                     u1680:
  1122  000AB6                     
  1123                           ; BSR set to: 0
  1124                           ;RTC.c: 131:                 LATDbits.LATD0 = 1;
  1125  000AB6  808C               	bsf	140,0,c	;volatile
  1126                           
  1127                           ;RTC.c: 132:             } else {
  1128  000AB8  EF5F  F005         	goto	l2301
  1129  000ABC                     l93:
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;RTC.c: 133:                 LATDbits.LATD1 = 1;
  1133  000ABC  828C               	bsf	140,1,c	;volatile
  1134  000ABE                     l2301:
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;RTC.c: 136:             int aux = Bcd2Dec(sec);
  1138  000ABE  C0DB  F007         	movff	_sec,Bcd2Dec@bcd
  1139  000AC2  C0DC  F008         	movff	_sec+1,Bcd2Dec@bcd+1
  1140  000AC6  ECC0  F00B         	call	_Bcd2Dec	;wreg free
  1141  000ACA  C007  F0B1         	movff	?_Bcd2Dec,main@aux
  1142  000ACE  C008  F0B2         	movff	?_Bcd2Dec+1,main@aux+1
  1143  000AD2                     
  1144                           ;RTC.c: 137:             RTC_Read_Clock(0);
  1145  000AD2  0E00               	movlw	0
  1146  000AD4  EC7B  F00B         	call	_RTC_Read_Clock
  1147  000AD8                     
  1148                           ;RTC.c: 138:             I2C_Stop();
  1149  000AD8  EC31  F00D         	call	_I2C_Stop	;wreg free
  1150  000ADC                     
  1151                           ;RTC.c: 139:             if (aux < Bcd2Dec(sec)) {
  1152  000ADC  C0DB  F007         	movff	_sec,Bcd2Dec@bcd
  1153  000AE0  C0DC  F008         	movff	_sec+1,Bcd2Dec@bcd+1
  1154  000AE4  ECC0  F00B         	call	_Bcd2Dec	;wreg free
  1155  000AE8  5007               	movf	?_Bcd2Dec^0,w,c
  1156  000AEA  0100               	movlb	0	; () banked
  1157  000AEC  5DB1               	subwf	main@aux& (0+255),w,b
  1158  000AEE  51B2               	movf	(main@aux+1)& (0+255),w,b
  1159  000AF0  0A80               	xorlw	128
  1160  000AF2  6F72               	movwf	??_main& (0+255),b
  1161  000AF4  5008               	movf	(?_Bcd2Dec+1)^0,w,c
  1162  000AF6  0A80               	xorlw	128
  1163  000AF8  5972               	subwfb	??_main& (0+255),w,b
  1164  000AFA  B0D8               	btfsc	status,0,c
  1165  000AFC  EF82  F005         	goto	u1691
  1166  000B00  EF84  F005         	goto	u1690
  1167  000B04                     u1691:
  1168  000B04  EF4B  F006         	goto	l2353
  1169  000B08                     u1690:
  1170  000B08                     
  1171                           ; BSR set to: 0
  1172                           ;RTC.c: 140:                 if(counter_sec >= 59) {
  1173  000B08  BFCC               	btfsc	(_counter_sec+1)& (0+255),7,b
  1174  000B0A  EF90  F005         	goto	u1701
  1175  000B0E  51CC               	movf	(_counter_sec+1)& (0+255),w,b
  1176  000B10  E109               	bnz	u1700
  1177  000B12  0E3B               	movlw	59
  1178  000B14  5DCB               	subwf	_counter_sec& (0+255),w,b
  1179  000B16  A0D8               	btfss	status,0,c
  1180  000B18  EF90  F005         	goto	u1701
  1181  000B1C  EF92  F005         	goto	u1700
  1182  000B20                     u1701:
  1183  000B20  EFA7  F005         	goto	l2317
  1184  000B24                     u1700:
  1185  000B24                     
  1186                           ; BSR set to: 0
  1187                           ;RTC.c: 141:                     counter_sec = (counter_sec % 59) - 1;
  1188  000B24  C0CB  F001         	movff	_counter_sec,___awmod@dividend
  1189  000B28  C0CC  F002         	movff	_counter_sec+1,___awmod@dividend+1
  1190  000B2C  0E00               	movlw	0
  1191  000B2E  6E04               	movwf	(___awmod@divisor+1)^0,c
  1192  000B30  0E3B               	movlw	59
  1193  000B32  6E03               	movwf	___awmod@divisor^0,c
  1194  000B34  ECCE  F009         	call	___awmod	;wreg free
  1195  000B38  0EFF               	movlw	255
  1196  000B3A  2401               	addwf	?___awmod^0,w,c
  1197  000B3C  0100               	movlb	0	; () banked
  1198  000B3E  6FCB               	movwf	_counter_sec& (0+255),b
  1199  000B40  0EFF               	movlw	255
  1200  000B42  2002               	addwfc	(?___awmod+1)^0,w,c
  1201  000B44  6FCC               	movwf	(_counter_sec+1)& (0+255),b
  1202  000B46                     
  1203                           ; BSR set to: 0
  1204                           ;RTC.c: 142:                     counter_min++;
  1205  000B46  4BC9               	infsnz	_counter_min& (0+255),f,b
  1206  000B48  2BCA               	incf	(_counter_min+1)& (0+255),f,b
  1207  000B4A                     
  1208                           ; BSR set to: 0
  1209                           ;RTC.c: 143:                     LCD_Clear();
  1210  000B4A  EC27  F00D         	call	_LCD_Clear	;wreg free
  1211  000B4E                     l2317:
  1212                           
  1213                           ;RTC.c: 145:                 if(run) {
  1214  000B4E  0100               	movlb	0	; () banked
  1215  000B50  51C7               	movf	_run& (0+255),w,b
  1216  000B52  11C8               	iorwf	(_run+1)& (0+255),w,b
  1217  000B54  B4D8               	btfsc	status,2,c
  1218  000B56  EFAF  F005         	goto	u1711
  1219  000B5A  EFB1  F005         	goto	u1710
  1220  000B5E                     u1711:
  1221  000B5E  EFC6  F005         	goto	l2325
  1222  000B62                     u1710:
  1223  000B62                     
  1224                           ; BSR set to: 0
  1225                           ;RTC.c: 146:                     if (counter_sec == 5) {
  1226  000B62  0E05               	movlw	5
  1227  000B64  19CB               	xorwf	_counter_sec& (0+255),w,b
  1228  000B66  11CC               	iorwf	(_counter_sec+1)& (0+255),w,b
  1229  000B68  A4D8               	btfss	status,2,c
  1230  000B6A  EFB9  F005         	goto	u1721
  1231  000B6E  EFBB  F005         	goto	u1720
  1232  000B72                     u1721:
  1233  000B72  EFDB  F005         	goto	l2333
  1234  000B76                     u1720:
  1235  000B76                     
  1236                           ; BSR set to: 0
  1237                           ;RTC.c: 147:                         counter_sec = 0;
  1238  000B76  0E00               	movlw	0
  1239  000B78  6FCC               	movwf	(_counter_sec+1)& (0+255),b
  1240  000B7A  0E00               	movlw	0
  1241  000B7C  6FCB               	movwf	_counter_sec& (0+255),b
  1242                           
  1243                           ;RTC.c: 148:                         run = 0;
  1244  000B7E  0E00               	movlw	0
  1245  000B80  6FC8               	movwf	(_run+1)& (0+255),b
  1246  000B82  0E00               	movlw	0
  1247  000B84  6FC7               	movwf	_run& (0+255),b
  1248  000B86                     
  1249                           ; BSR set to: 0
  1250                           ;RTC.c: 149:                         LATDbits.LATD0 = 0;
  1251  000B86  908C               	bcf	140,0,c	;volatile
  1252  000B88  EFDB  F005         	goto	l2333
  1253  000B8C                     l2325:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;RTC.c: 152:                     if (counter_sec == 3) {
  1257  000B8C  0E03               	movlw	3
  1258  000B8E  19CB               	xorwf	_counter_sec& (0+255),w,b
  1259  000B90  11CC               	iorwf	(_counter_sec+1)& (0+255),w,b
  1260  000B92  A4D8               	btfss	status,2,c
  1261  000B94  EFCE  F005         	goto	u1731
  1262  000B98  EFD0  F005         	goto	u1730
  1263  000B9C                     u1731:
  1264  000B9C  EFDB  F005         	goto	l2333
  1265  000BA0                     u1730:
  1266  000BA0                     
  1267                           ; BSR set to: 0
  1268                           ;RTC.c: 153:                         counter_sec = 0;
  1269  000BA0  0E00               	movlw	0
  1270  000BA2  6FCC               	movwf	(_counter_sec+1)& (0+255),b
  1271  000BA4  0E00               	movlw	0
  1272  000BA6  6FCB               	movwf	_counter_sec& (0+255),b
  1273                           
  1274                           ;RTC.c: 154:                         run = 1;
  1275  000BA8  0E00               	movlw	0
  1276  000BAA  6FC8               	movwf	(_run+1)& (0+255),b
  1277  000BAC  0E01               	movlw	1
  1278  000BAE  6FC7               	movwf	_run& (0+255),b
  1279  000BB0                     
  1280                           ; BSR set to: 0
  1281                           ;RTC.c: 155:                         LATDbits.LATD1 = 0;
  1282  000BB0  928C               	bcf	140,1,c	;volatile
  1283  000BB2                     
  1284                           ; BSR set to: 0
  1285                           ;RTC.c: 156:                         count_pomo++;
  1286  000BB2  4BC5               	infsnz	_count_pomo& (0+255),f,b
  1287  000BB4  2BC6               	incf	(_count_pomo+1)& (0+255),f,b
  1288  000BB6                     l2333:
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;RTC.c: 160:                 int print_sec = Dec2Bcd(++counter_sec);
  1292  000BB6  4BCB               	infsnz	_counter_sec& (0+255),f,b
  1293  000BB8  2BCC               	incf	(_counter_sec+1)& (0+255),f,b
  1294  000BBA  C0CB  F009         	movff	_counter_sec,Dec2Bcd@dec
  1295  000BBE  C0CC  F00A         	movff	_counter_sec+1,Dec2Bcd@dec+1
  1296  000BC2  ECB5  F00A         	call	_Dec2Bcd	;wreg free
  1297  000BC6  C009  F0B3         	movff	?_Dec2Bcd,main@print_sec
  1298  000BCA  C00A  F0B4         	movff	?_Dec2Bcd+1,main@print_sec+1
  1299  000BCE                     
  1300                           ;RTC.c: 161:                 int print_min = Dec2Bcd(counter_min);
  1301  000BCE  C0C9  F009         	movff	_counter_min,Dec2Bcd@dec
  1302  000BD2  C0CA  F00A         	movff	_counter_min+1,Dec2Bcd@dec+1
  1303  000BD6  ECB5  F00A         	call	_Dec2Bcd	;wreg free
  1304  000BDA  C009  F0B5         	movff	?_Dec2Bcd,main@print_min
  1305  000BDE  C00A  F0B6         	movff	?_Dec2Bcd+1,main@print_min+1
  1306  000BE2                     
  1307                           ;RTC.c: 162:                 int print_pomo = Dec2Bcd(count_pomo);
  1308  000BE2  C0C5  F009         	movff	_count_pomo,Dec2Bcd@dec
  1309  000BE6  C0C6  F00A         	movff	_count_pomo+1,Dec2Bcd@dec+1
  1310  000BEA  ECB5  F00A         	call	_Dec2Bcd	;wreg free
  1311  000BEE  C009  F0B7         	movff	?_Dec2Bcd,main@print_pomo
  1312  000BF2  C00A  F0B8         	movff	?_Dec2Bcd+1,main@print_pomo+1
  1313  000BF6                     
  1314                           ;RTC.c: 163:                 int print_fail = Dec2Bcd(count_pomo_fail);
  1315  000BF6  C0C3  F009         	movff	_count_pomo_fail,Dec2Bcd@dec
  1316  000BFA  C0C4  F00A         	movff	_count_pomo_fail+1,Dec2Bcd@dec+1
  1317  000BFE  ECB5  F00A         	call	_Dec2Bcd	;wreg free
  1318  000C02  C009  F0B9         	movff	?_Dec2Bcd,main@print_fail
  1319  000C06  C00A  F0BA         	movff	?_Dec2Bcd+1,main@print_fail+1
  1320  000C0A                     
  1321                           ;RTC.c: 165:                 sprintf(counters_min,"Tempom:%x",print_min);
  1322  000C0A  0E7F               	movlw	low main@counters_min
  1323  000C0C  0100               	movlb	0	; () banked
  1324  000C0E  6F60               	movwf	sprintf@s& (0+255),b
  1325  000C10  0E00               	movlw	high main@counters_min
  1326  000C12  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1327  000C14  0E01               	movlw	low STR_9
  1328  000C16  6F62               	movwf	sprintf@fmt& (0+255),b
  1329  000C18  0E08               	movlw	high STR_9
  1330  000C1A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1331  000C1C  C0B5  F064         	movff	main@print_min,?_sprintf+4
  1332  000C20  C0B6  F065         	movff	main@print_min+1,?_sprintf+5
  1333  000C24  ECE1  F00A         	call	_sprintf	;wreg free
  1334  000C28                     
  1335                           ;RTC.c: 166:                 sprintf(counters_sec,"-%x",print_sec);
  1336  000C28  0E75               	movlw	low main@counters_sec
  1337  000C2A  0100               	movlb	0	; () banked
  1338  000C2C  6F60               	movwf	sprintf@s& (0+255),b
  1339  000C2E  0E00               	movlw	high main@counters_sec
  1340  000C30  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1341  000C32  0E20               	movlw	low STR_10
  1342  000C34  6F62               	movwf	sprintf@fmt& (0+255),b
  1343  000C36  0E08               	movlw	high STR_10
  1344  000C38  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1345  000C3A  C0B3  F064         	movff	main@print_sec,?_sprintf+4
  1346  000C3E  C0B4  F065         	movff	main@print_sec+1,?_sprintf+5
  1347  000C42  ECE1  F00A         	call	_sprintf	;wreg free
  1348  000C46                     
  1349                           ;RTC.c: 167:                 sprintf(counters_pomos," E%x F%x", print_pomo, print_fail);
  1350  000C46  0E89               	movlw	low main@counters_pomos
  1351  000C48  0100               	movlb	0	; () banked
  1352  000C4A  6F60               	movwf	sprintf@s& (0+255),b
  1353  000C4C  0E00               	movlw	high main@counters_pomos
  1354  000C4E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1355  000C50  0E0B               	movlw	low STR_11
  1356  000C52  6F62               	movwf	sprintf@fmt& (0+255),b
  1357  000C54  0E08               	movlw	high STR_11
  1358  000C56  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1359  000C58  C0B7  F064         	movff	main@print_pomo,?_sprintf+4
  1360  000C5C  C0B8  F065         	movff	main@print_pomo+1,?_sprintf+5
  1361  000C60  C0B9  F066         	movff	main@print_fail,?_sprintf+6
  1362  000C64  C0BA  F067         	movff	main@print_fail+1,?_sprintf+7
  1363  000C68  ECE1  F00A         	call	_sprintf	;wreg free
  1364  000C6C                     
  1365                           ;RTC.c: 168:                 LCD_String_xy(2,0,counters_min);
  1366  000C6C  0E00               	movlw	0
  1367  000C6E  6E0B               	movwf	LCD_String_xy@pos^0,c
  1368  000C70  0E7F               	movlw	low main@counters_min
  1369  000C72  6E0C               	movwf	LCD_String_xy@msg^0,c
  1370  000C74  0E00               	movlw	high main@counters_min
  1371  000C76  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1372  000C78  0E02               	movlw	2
  1373  000C7A  ECE1  F00B         	call	_LCD_String_xy
  1374  000C7E                     
  1375                           ;RTC.c: 169:                 LCD_String(counters_sec);
  1376  000C7E  0E75               	movlw	low main@counters_sec
  1377  000C80  6E09               	movwf	LCD_String@msg^0,c
  1378  000C82  0E00               	movlw	high main@counters_sec
  1379  000C84  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1380  000C86  EC86  F00A         	call	_LCD_String	;wreg free
  1381  000C8A                     
  1382                           ;RTC.c: 170:                 LCD_String(counters_pomos);
  1383  000C8A  0E89               	movlw	low main@counters_pomos
  1384  000C8C  6E09               	movwf	LCD_String@msg^0,c
  1385  000C8E  0E00               	movlw	high main@counters_pomos
  1386  000C90  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1387  000C92  EC86  F00A         	call	_LCD_String	;wreg free
  1388  000C96                     l2353:
  1389                           
  1390                           ;RTC.c: 172:             alarma=1;
  1391  000C96  0E00               	movlw	0
  1392  000C98  0100               	movlb	0	; () banked
  1393  000C9A  6FCE               	movwf	(_alarma+1)& (0+255),b
  1394  000C9C  0E01               	movlw	1
  1395  000C9E  6FCD               	movwf	_alarma& (0+255),b
  1396  000CA0  EF45  F004         	goto	l85
  1397  000CA4  EF00  F000         	goto	start
  1398  000CA8                     __end_of_main:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _sprintf *****************
  1402 ;; Defined at:
  1403 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1406 ;;		 -> main@counters_pomos(10), main@counters_sec(10), main@counters_min(10), main@hours(10), 
  1407 ;;		 -> main@mins(10), main@secs(10), 
  1408 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1409 ;;		 -> STR_11(9), STR_10(4), STR_9(10), STR_8(8), 
  1410 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(4), 
  1411 ;;		 -> STR_3(4), 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  f               6   12[BANK0 ] struct _IO_FILE
  1414 ;;  ap              2   10[BANK0 ] PTR void [1]
  1415 ;;		 -> ?_sprintf(2), 
  1416 ;;  ret             2    0        int 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  2    0[BANK0 ] int 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1426 ;;      Params:         0       8       0       0       0       0       0       0       0
  1427 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1429 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1430 ;;Total ram usage:       18 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    7
  1433 ;; This function calls:
  1434 ;;		_vfprintf
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text1
  1441  0015C2                     __ptext1:
  1442                           	callstack 0
  1443  0015C2                     _sprintf:
  1444                           	callstack 23
  1445  0015C2  0E64               	movlw	low (?_sprintf+4)
  1446  0015C4  0100               	movlb	0	; () banked
  1447  0015C6  6F6A               	movwf	sprintf@ap& (0+255),b
  1448  0015C8  0E00               	movlw	high (?_sprintf+4)
  1449  0015CA  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1450  0015CC  C060  F06C         	movff	sprintf@s,sprintf@f
  1451  0015D0  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
  1452  0015D4                     
  1453                           ; BSR set to: 0
  1454  0015D4  0E00               	movlw	0
  1455  0015D6  6F6F               	movwf	(sprintf@f+3)& (0+255),b
  1456  0015D8  0E00               	movlw	0
  1457  0015DA  6F6E               	movwf	(sprintf@f+2)& (0+255),b
  1458  0015DC                     
  1459                           ; BSR set to: 0
  1460  0015DC  0E00               	movlw	0
  1461  0015DE  6F71               	movwf	(sprintf@f+5)& (0+255),b
  1462  0015E0  0E00               	movlw	0
  1463  0015E2  6F70               	movwf	(sprintf@f+4)& (0+255),b
  1464  0015E4                     
  1465                           ; BSR set to: 0
  1466  0015E4  0E6C               	movlw	low sprintf@f
  1467  0015E6  6E56               	movwf	vfprintf@fp^0,c
  1468  0015E8  0E00               	movlw	high sprintf@f
  1469  0015EA  6E57               	movwf	(vfprintf@fp+1)^0,c
  1470  0015EC  C062  F058         	movff	sprintf@fmt,vfprintf@fmt
  1471  0015F0  C063  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1472  0015F4  0E6A               	movlw	low sprintf@ap
  1473  0015F6  6E5A               	movwf	vfprintf@ap^0,c
  1474  0015F8  0E00               	movlw	high sprintf@ap
  1475  0015FA  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1476  0015FC  EC26  F00A         	call	_vfprintf	;wreg free
  1477  001600  0100               	movlb	0	; () banked
  1478  001602  516E               	movf	(sprintf@f+2)& (0+255),w,b
  1479  001604  2560               	addwf	sprintf@s& (0+255),w,b
  1480  001606  6ED9               	movwf	fsr2l,c
  1481  001608  516F               	movf	(sprintf@f+3)& (0+255),w,b
  1482  00160A  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1483  00160C  6EDA               	movwf	fsr2h,c
  1484  00160E  0E00               	movlw	0
  1485  001610  6EDF               	movwf	indf2,c
  1486  001612                     
  1487                           ; BSR set to: 0
  1488  001612  0012               	return		;funcret
  1489  001614                     __end_of_sprintf:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function _vfprintf *****************
  1493 ;; Defined at:
  1494 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1497 ;;		 -> sprintf@f(6), 
  1498 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1499 ;;		 -> STR_11(9), STR_10(4), STR_9(10), STR_8(8), 
  1500 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(4), 
  1501 ;;		 -> STR_3(4), 
  1502 ;;  ap              2   89[COMRAM] PTR PTR void 
  1503 ;;		 -> sprintf@ap(2), 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1506 ;;		 -> STR_11(9), STR_10(4), STR_9(10), STR_8(8), 
  1507 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(4), 
  1508 ;;		 -> STR_3(4), 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  2   85[COMRAM] int 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1518 ;;      Params:         6       0       0       0       0       0       0       0       0
  1519 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1521 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1522 ;;Total ram usage:        8 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    6
  1525 ;; This function calls:
  1526 ;;		_vfpfcnvrt
  1527 ;; This function is called by:
  1528 ;;		_sprintf
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text2
  1533  00144C                     __ptext2:
  1534                           	callstack 0
  1535  00144C                     _vfprintf:
  1536                           	callstack 23
  1537  00144C                     
  1538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1539  00144C  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1540  001450  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1541  001454                     
  1542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1543  001454  0E00               	movlw	0
  1544  001456  0100               	movlb	0	; () banked
  1545  001458  6FBE               	movwf	(_nout+1)& (0+255),b
  1546  00145A  0E00               	movlw	0
  1547  00145C  6FBD               	movwf	_nout& (0+255),b
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1550  00145E  EF44  F00A         	goto	l2129
  1551  001462                     l2127:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1555  001462  C056  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1556  001466  C057  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1557  00146A  0E5C               	movlw	low vfprintf@cfmt
  1558  00146C  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1559  00146E  0E00               	movlw	high vfprintf@cfmt
  1560  001470  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1561  001472  C05A  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1562  001476  C05B  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1563  00147A  ECBE  F007         	call	_vfpfcnvrt	;wreg free
  1564  00147E  5043               	movf	?_vfpfcnvrt^0,w,c
  1565  001480  0100               	movlb	0	; () banked
  1566  001482  27BD               	addwf	_nout& (0+255),f,b
  1567  001484  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1568  001486  23BE               	addwfc	(_nout+1)& (0+255),f,b
  1569  001488                     l2129:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1573  001488  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1574  00148C  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1575  001490                     	if	0	;tblptru may be non-zero
  1576  001490                     	endif
  1577  001490                     	if	0	;tblptru may be non-zero
  1578  001490                     	endif
  1579  001490  0008               	tblrd		*
  1580  001492  50F5               	movf	tablat,w,c
  1581  001494  0900               	iorlw	0
  1582  001496  A4D8               	btfss	status,2,c
  1583  001498  EF50  F00A         	goto	u1571
  1584  00149C  EF52  F00A         	goto	u1570
  1585  0014A0                     u1571:
  1586  0014A0  EF31  F00A         	goto	l2127
  1587  0014A4                     u1570:
  1588  0014A4                     
  1589                           ; BSR set to: 0
  1590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1591  0014A4  C0BD  F056         	movff	_nout,?_vfprintf
  1592  0014A8  C0BE  F057         	movff	_nout+1,?_vfprintf+1
  1593  0014AC                     
  1594                           ; BSR set to: 0
  1595  0014AC  0012               	return		;funcret
  1596  0014AE                     __end_of_vfprintf:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _vfpfcnvrt *****************
  1600 ;; Defined at:
  1601 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1604 ;;		 -> sprintf@f(6), 
  1605 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1606 ;;		 -> vfprintf@cfmt(2), 
  1607 ;;  ap              2   70[COMRAM] PTR PTR void 
  1608 ;;		 -> sprintf@ap(2), 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  llu             8   76[COMRAM] unsigned long long 
  1611 ;;  ll              8    0        long long 
  1612 ;;  f               4    0        long long 
  1613 ;;  vp              3    0        PTR void 
  1614 ;;  ct              3    0        unsigned char [3]
  1615 ;;  cp              3    0        PTR unsigned char 
  1616 ;;  i               2    0        int 
  1617 ;;  done            2    0        int 
  1618 ;;  c               1   84[COMRAM] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2   66[COMRAM] int 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1628 ;;      Params:         6       0       0       0       0       0       0       0       0
  1629 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1630 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1631 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1632 ;;Total ram usage:       19 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    5
  1635 ;; This function calls:
  1636 ;;		_fputc
  1637 ;;		_xtoa
  1638 ;; This function is called by:
  1639 ;;		_vfprintf
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text3
  1644  000F7C                     __ptext3:
  1645                           	callstack 0
  1646  000F7C                     _vfpfcnvrt:
  1647                           	callstack 23
  1648  000F7C                     
  1649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1650  000F7C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1651  000F80  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1652  000F84  CFDE FFF6          	movff	postinc2,tblptrl
  1653  000F88  CFDD FFF7          	movff	postdec2,tblptrh
  1654  000F8C                     	if	0	;tblptru may be non-zero
  1655  000F8C                     	endif
  1656  000F8C                     	if	0	;tblptru may be non-zero
  1657  000F8C                     	endif
  1658  000F8C  0008               	tblrd		*
  1659  000F8E  50F5               	movf	tablat,w,c
  1660  000F90  0A25               	xorlw	37
  1661  000F92  A4D8               	btfss	status,2,c
  1662  000F94  EFCE  F007         	goto	u1321
  1663  000F98  EFD0  F007         	goto	u1320
  1664  000F9C                     u1321:
  1665  000F9C  EF8A  F008         	goto	l1969
  1666  000FA0                     u1320:
  1667  000FA0                     
  1668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1669  000FA0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1670  000FA4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1671  000FA8  2ADE               	incf	postinc2,f,c
  1672  000FAA  0E00               	movlw	0
  1673  000FAC  22DD               	addwfc	postdec2,f,c
  1674  000FAE                     
  1675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1676  000FAE  0E00               	movlw	0
  1677  000FB0  0100               	movlb	0	; () banked
  1678  000FB2  6FC0               	movwf	(_width+1)& (0+255),b
  1679  000FB4  0E00               	movlw	0
  1680  000FB6  6FBF               	movwf	_width& (0+255),b
  1681  000FB8  C0BF  F05E         	movff	_width,_flags
  1682  000FBC  C0C0  F05F         	movff	_width+1,_flags+1
  1683  000FC0                     
  1684                           ; BSR set to: 0
  1685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1686  000FC0  69C1               	setf	_prec& (0+255),b
  1687  000FC2  69C2               	setf	(_prec+1)& (0+255),b
  1688  000FC4                     
  1689                           ; BSR set to: 0
  1690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1691  000FC4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1692  000FC8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1693  000FCC  CFDE FFF6          	movff	postinc2,tblptrl
  1694  000FD0  CFDD FFF7          	movff	postdec2,tblptrh
  1695  000FD4                     	if	0	;tblptru may be non-zero
  1696  000FD4                     	endif
  1697  000FD4                     	if	0	;tblptru may be non-zero
  1698  000FD4                     	endif
  1699  000FD4  0008               	tblrd		*
  1700  000FD6  50F5               	movf	tablat,w,c
  1701  000FD8  0A78               	xorlw	120
  1702  000FDA  B4D8               	btfsc	status,2,c
  1703  000FDC  EFF2  F007         	goto	u1331
  1704  000FE0  EFF4  F007         	goto	u1330
  1705  000FE4                     u1331:
  1706  000FE4  EF06  F008         	goto	l1943
  1707  000FE8                     u1330:
  1708  000FE8                     
  1709                           ; BSR set to: 0
  1710  000FE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1711  000FEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1712  000FF0  CFDE FFF6          	movff	postinc2,tblptrl
  1713  000FF4  CFDD FFF7          	movff	postdec2,tblptrh
  1714  000FF8                     	if	0	;tblptru may be non-zero
  1715  000FF8                     	endif
  1716  000FF8                     	if	0	;tblptru may be non-zero
  1717  000FF8                     	endif
  1718  000FF8  0008               	tblrd		*
  1719  000FFA  50F5               	movf	tablat,w,c
  1720  000FFC  0A58               	xorlw	88
  1721  000FFE  A4D8               	btfss	status,2,c
  1722  001000  EF04  F008         	goto	u1341
  1723  001004  EF06  F008         	goto	u1340
  1724  001008                     u1341:
  1725  001008  EF54  F008         	goto	l1953
  1726  00100C                     u1340:
  1727  00100C                     l1943:
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1731  00100C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1732  001010  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1733  001014  CFDE FFF6          	movff	postinc2,tblptrl
  1734  001018  CFDD FFF7          	movff	postdec2,tblptrh
  1735  00101C                     	if	0	;tblptru may be non-zero
  1736  00101C                     	endif
  1737  00101C                     	if	0	;tblptru may be non-zero
  1738  00101C                     	endif
  1739  00101C  0008               	tblrd		*
  1740  00101E  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1741  001022                     
  1742                           ; BSR set to: 0
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1744  001022  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1745  001026  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1746  00102A  2ADE               	incf	postinc2,f,c
  1747  00102C  0E00               	movlw	0
  1748  00102E  22DD               	addwfc	postdec2,f,c
  1749  001030                     
  1750                           ; BSR set to: 0
  1751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1752  001030  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1753  001034  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1754  001038  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1755  00103C  0E02               	movlw	2
  1756  00103E  26DE               	addwf	postinc2,f,c
  1757  001040  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1758  001044  0E00               	movlw	0
  1759  001046  22DD               	addwfc	postdec2,f,c
  1760  001048  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1761  00104C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1762  001050  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  1763  001054  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  1764  001058  C04B  F04D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1765  00105C  C04C  F04E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1766  001060  6A4F               	clrf	(vfpfcnvrt@llu+2)^0,c
  1767  001062  6A50               	clrf	(vfpfcnvrt@llu+3)^0,c
  1768  001064  6A51               	clrf	(vfpfcnvrt@llu+4)^0,c
  1769  001066  6A52               	clrf	(vfpfcnvrt@llu+5)^0,c
  1770  001068  6A53               	clrf	(vfpfcnvrt@llu+6)^0,c
  1771  00106A  6A54               	clrf	(vfpfcnvrt@llu+7)^0,c
  1772  00106C                     
  1773                           ; BSR set to: 0
  1774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1775  00106C  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1776  001070  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1777  001074  C04D  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1778  001078  C04E  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1779  00107C  C04F  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1780  001080  C050  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1781  001084  C051  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1782  001088  C052  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1783  00108C  C053  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1784  001090  C054  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1785  001094  C055  F026         	movff	vfpfcnvrt@c,xtoa@x
  1786  001098  EC54  F006         	call	_xtoa	;wreg free
  1787  00109C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  1788  0010A0  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1789  0010A4  EFA5  F008         	goto	l1014
  1790  0010A8                     l1953:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1794  0010A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1795  0010AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1796  0010B0  CFDE FFF6          	movff	postinc2,tblptrl
  1797  0010B4  CFDD FFF7          	movff	postdec2,tblptrh
  1798  0010B8                     	if	0	;tblptru may be non-zero
  1799  0010B8                     	endif
  1800  0010B8                     	if	0	;tblptru may be non-zero
  1801  0010B8                     	endif
  1802  0010B8  0008               	tblrd		*
  1803  0010BA  50F5               	movf	tablat,w,c
  1804  0010BC  0A25               	xorlw	37
  1805  0010BE  A4D8               	btfss	status,2,c
  1806  0010C0  EF64  F008         	goto	u1351
  1807  0010C4  EF66  F008         	goto	u1350
  1808  0010C8                     u1351:
  1809  0010C8  EF7D  F008         	goto	l1963
  1810  0010CC                     u1350:
  1811  0010CC                     
  1812                           ; BSR set to: 0
  1813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1814  0010CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1815  0010D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1816  0010D4  2ADE               	incf	postinc2,f,c
  1817  0010D6  0E00               	movlw	0
  1818  0010D8  22DD               	addwfc	postdec2,f,c
  1819  0010DA                     
  1820                           ; BSR set to: 0
  1821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1822  0010DA  0E00               	movlw	0
  1823  0010DC  6E02               	movwf	(fputc@c+1)^0,c
  1824  0010DE  0E25               	movlw	37
  1825  0010E0  6E01               	movwf	fputc@c^0,c
  1826  0010E2  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1827  0010E6  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1828  0010EA  ECA6  F008         	call	_fputc	;wreg free
  1829  0010EE                     l1959:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1832  0010EE  0E00               	movlw	0
  1833  0010F0  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1834  0010F2  0E01               	movlw	1
  1835  0010F4  6E43               	movwf	?_vfpfcnvrt^0,c
  1836  0010F6  EFA5  F008         	goto	l1014
  1837  0010FA                     l1963:
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1841  0010FA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1842  0010FE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1843  001102  2ADE               	incf	postinc2,f,c
  1844  001104  0E00               	movlw	0
  1845  001106  22DD               	addwfc	postdec2,f,c
  1846  001108                     
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1849  001108  0E00               	movlw	0
  1850  00110A  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1851  00110C  0E00               	movlw	0
  1852  00110E  6E43               	movwf	?_vfpfcnvrt^0,c
  1853  001110  EFA5  F008         	goto	l1014
  1854  001114                     l1969:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1857  001114  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1858  001118  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1859  00111C  CFDE FFF6          	movff	postinc2,tblptrl
  1860  001120  CFDD FFF7          	movff	postdec2,tblptrh
  1861  001124                     	if	0	;tblptru may be non-zero
  1862  001124                     	endif
  1863  001124                     	if	0	;tblptru may be non-zero
  1864  001124                     	endif
  1865  001124  0008               	tblrd		*
  1866  001126  50F5               	movf	tablat,w,c
  1867  001128  6E01               	movwf	fputc@c^0,c
  1868  00112A  6A02               	clrf	(fputc@c+1)^0,c
  1869  00112C  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1870  001130  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1871  001134  ECA6  F008         	call	_fputc	;wreg free
  1872  001138                     
  1873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1874  001138  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1875  00113C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1876  001140  2ADE               	incf	postinc2,f,c
  1877  001142  0E00               	movlw	0
  1878  001144  22DD               	addwfc	postdec2,f,c
  1879  001146  EF77  F008         	goto	l1959
  1880  00114A                     l1014:
  1881  00114A  0012               	return		;funcret
  1882  00114C                     __end_of_vfpfcnvrt:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _xtoa *****************
  1886 ;; Defined at:
  1887 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1890 ;;		 -> sprintf@f(6), 
  1891 ;;  d               8   29[COMRAM] unsigned long long 
  1892 ;;  x               1   37[COMRAM] unsigned char 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  n               8   54[COMRAM] unsigned long long 
  1895 ;;  c               2   64[COMRAM] int 
  1896 ;;  i               2   62[COMRAM] int 
  1897 ;;  w               2   52[COMRAM] int 
  1898 ;;  p               2   50[COMRAM] int 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  2   27[COMRAM] int 
  1901 ;; Registers used:
  1902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1908 ;;      Params:        11       0       0       0       0       0       0       0       0
  1909 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1910 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1911 ;;      Totals:        39       0       0       0       0       0       0       0       0
  1912 ;;Total ram usage:       39 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    4
  1915 ;; This function calls:
  1916 ;;		_isalpha
  1917 ;;		_isupper
  1918 ;;		_pad
  1919 ;;		_toupper
  1920 ;; This function is called by:
  1921 ;;		_vfpfcnvrt
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text4
  1926  000CA8                     __ptext4:
  1927                           	callstack 0
  1928  000CA8                     _xtoa:
  1929                           	callstack 23
  1930  000CA8                     
  1931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1932  000CA8  0100               	movlb	0	; () banked
  1933  000CAA  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  1934  000CAC  EF5A  F006         	goto	u1121
  1935  000CB0  EF5C  F006         	goto	u1120
  1936  000CB4                     u1121:
  1937  000CB4  EF5D  F006         	goto	l1829
  1938  000CB8                     u1120:
  1939  000CB8                     
  1940                           ; BSR set to: 0
  1941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1942  000CB8  925E               	bcf	_flags^0,1,c
  1943  000CBA                     l1829:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1947  000CBA  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  1948  000CBC  EF6A  F006         	goto	u1130
  1949  000CC0  51C2               	movf	(_prec+1)& (0+255),w,b
  1950  000CC2  E106               	bnz	u1131
  1951  000CC4  05C1               	decf	_prec& (0+255),w,b
  1952  000CC6  B0D8               	btfsc	status,0,c
  1953  000CC8  EF68  F006         	goto	u1131
  1954  000CCC  EF6A  F006         	goto	u1130
  1955  000CD0                     u1131:
  1956  000CD0  EF70  F006         	goto	l982
  1957  000CD4                     u1130:
  1958  000CD4                     
  1959                           ; BSR set to: 0
  1960  000CD4  0E00               	movlw	0
  1961  000CD6  6E34               	movwf	(xtoa@p+1)^0,c
  1962  000CD8  0E01               	movlw	1
  1963  000CDA  6E33               	movwf	xtoa@p^0,c
  1964  000CDC  EF74  F006         	goto	l984
  1965  000CE0                     l982:
  1966                           
  1967                           ; BSR set to: 0
  1968  000CE0  C0C1  F033         	movff	_prec,xtoa@p
  1969  000CE4  C0C2  F034         	movff	_prec+1,xtoa@p+1
  1970  000CE8                     l984:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  1974  000CE8  C0BF  F035         	movff	_width,xtoa@w
  1975  000CEC  C0C0  F036         	movff	_width+1,xtoa@w+1
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1978  000CF0  A85E               	btfss	_flags^0,4,c
  1979  000CF2  EF7D  F006         	goto	u1141
  1980  000CF6  EF7F  F006         	goto	u1140
  1981  000CFA                     u1141:
  1982  000CFA  EF83  F006         	goto	l1835
  1983  000CFE                     u1140:
  1984  000CFE                     
  1985                           ; BSR set to: 0
  1986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  1987  000CFE  0EFE               	movlw	254
  1988  000D00  2635               	addwf	xtoa@w^0,f,c
  1989  000D02  0EFF               	movlw	255
  1990  000D04  2236               	addwfc	(xtoa@w+1)^0,f,c
  1991  000D06                     l1835:
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  1995  000D06  C01E  F037         	movff	xtoa@d,xtoa@n
  1996  000D0A  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  1997  000D0E  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  1998  000D12  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  1999  000D16  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  2000  000D1A  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  2001  000D1E  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  2002  000D22  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  2003  000D26                     
  2004                           ; BSR set to: 0
  2005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  2006  000D26  0E00               	movlw	0
  2007  000D28  6E40               	movwf	(xtoa@i+1)^0,c
  2008  000D2A  0E1F               	movlw	31
  2009  000D2C  6E3F               	movwf	xtoa@i^0,c
  2010  000D2E                     
  2011                           ; BSR set to: 0
  2012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  2013  000D2E  0E00               	movlw	0
  2014  000D30  6FFC               	movwf	(_dbuf+31)& (0+255),b
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2017  000D32  EF4E  F007         	goto	l1871
  2018  000D36                     l1841:
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  2021  000D36  063F               	decf	xtoa@i^0,f,c
  2022  000D38  A0D8               	btfss	status,0,c
  2023  000D3A  0640               	decf	(xtoa@i+1)^0,f,c
  2024  000D3C                     
  2025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  2026  000D3C  0E0F               	movlw	15
  2027  000D3E  1437               	andwf	xtoa@n^0,w,c
  2028  000D40  6E41               	movwf	xtoa@c^0,c
  2029  000D42  6A42               	clrf	(xtoa@c+1)^0,c
  2030  000D44                     
  2031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2032  000D44  BE42               	btfsc	(xtoa@c+1)^0,7,c
  2033  000D46  EFAE  F006         	goto	u1151
  2034  000D4A  5042               	movf	(xtoa@c+1)^0,w,c
  2035  000D4C  E109               	bnz	u1150
  2036  000D4E  0E0A               	movlw	10
  2037  000D50  5C41               	subwf	xtoa@c^0,w,c
  2038  000D52  A0D8               	btfss	status,0,c
  2039  000D54  EFAE  F006         	goto	u1151
  2040  000D58  EFB0  F006         	goto	u1150
  2041  000D5C                     u1151:
  2042  000D5C  EFB8  F006         	goto	l1849
  2043  000D60                     u1150:
  2044  000D60  0E57               	movlw	87
  2045  000D62  2441               	addwf	xtoa@c^0,w,c
  2046  000D64  6E41               	movwf	xtoa@c^0,c
  2047  000D66  0E00               	movlw	0
  2048  000D68  2042               	addwfc	(xtoa@c+1)^0,w,c
  2049  000D6A  6E42               	movwf	(xtoa@c+1)^0,c
  2050  000D6C  EFBE  F006         	goto	l991
  2051  000D70                     l1849:
  2052  000D70  0E30               	movlw	48
  2053  000D72  2441               	addwf	xtoa@c^0,w,c
  2054  000D74  6E41               	movwf	xtoa@c^0,c
  2055  000D76  0E00               	movlw	0
  2056  000D78  2042               	addwfc	(xtoa@c+1)^0,w,c
  2057  000D7A  6E42               	movwf	(xtoa@c+1)^0,c
  2058  000D7C                     l991:
  2059  000D7C  0EBF               	movlw	191
  2060  000D7E  6E27               	movwf	??_xtoa^0,c
  2061  000D80  0EFF               	movlw	255
  2062  000D82  6E28               	movwf	(??_xtoa+1)^0,c
  2063  000D84  5026               	movf	xtoa@x^0,w,c
  2064  000D86  6E29               	movwf	(??_xtoa+2)^0,c
  2065  000D88  6A2A               	clrf	(??_xtoa+3)^0,c
  2066  000D8A  5027               	movf	??_xtoa^0,w,c
  2067  000D8C  2629               	addwf	(??_xtoa+2)^0,f,c
  2068  000D8E  5028               	movf	(??_xtoa+1)^0,w,c
  2069  000D90  222A               	addwfc	(??_xtoa+3)^0,f,c
  2070  000D92  502A               	movf	(??_xtoa+3)^0,w,c
  2071  000D94  E10A               	bnz	u1160
  2072  000D96  0E1A               	movlw	26
  2073  000D98  5C29               	subwf	(??_xtoa+2)^0,w,c
  2074  000D9A  A0D8               	btfss	status,0,c
  2075  000D9C  EFD2  F006         	goto	u1161
  2076  000DA0  EFD5  F006         	goto	u1160
  2077  000DA4                     u1161:
  2078  000DA4  0E01               	movlw	1
  2079  000DA6  EFD6  F006         	goto	u1170
  2080  000DAA                     u1160:
  2081  000DAA  0E00               	movlw	0
  2082  000DAC                     u1170:
  2083  000DAC  6E2F               	movwf	_xtoa$1119^0,c
  2084  000DAE  6A30               	clrf	(_xtoa$1119+1)^0,c
  2085  000DB0  502F               	movf	_xtoa$1119^0,w,c
  2086  000DB2  1030               	iorwf	(_xtoa$1119+1)^0,w,c
  2087  000DB4  B4D8               	btfsc	status,2,c
  2088  000DB6  EFDF  F006         	goto	u1181
  2089  000DBA  EFE1  F006         	goto	u1180
  2090  000DBE                     u1181:
  2091  000DBE  EF11  F007         	goto	l1863
  2092  000DC2                     u1180:
  2093  000DC2  0E9F               	movlw	159
  2094  000DC4  6E27               	movwf	??_xtoa^0,c
  2095  000DC6  0EFF               	movlw	255
  2096  000DC8  6E28               	movwf	(??_xtoa+1)^0,c
  2097  000DCA  0E20               	movlw	32
  2098  000DCC  1041               	iorwf	xtoa@c^0,w,c
  2099  000DCE  6E29               	movwf	(??_xtoa+2)^0,c
  2100  000DD0  0E00               	movlw	0
  2101  000DD2  1042               	iorwf	(xtoa@c+1)^0,w,c
  2102  000DD4  6E2A               	movwf	(??_xtoa+3)^0,c
  2103  000DD6  5027               	movf	??_xtoa^0,w,c
  2104  000DD8  2629               	addwf	(??_xtoa+2)^0,f,c
  2105  000DDA  5028               	movf	(??_xtoa+1)^0,w,c
  2106  000DDC  222A               	addwfc	(??_xtoa+3)^0,f,c
  2107  000DDE  502A               	movf	(??_xtoa+3)^0,w,c
  2108  000DE0  E10A               	bnz	u1190
  2109  000DE2  0E1A               	movlw	26
  2110  000DE4  5C29               	subwf	(??_xtoa+2)^0,w,c
  2111  000DE6  A0D8               	btfss	status,0,c
  2112  000DE8  EFF8  F006         	goto	u1191
  2113  000DEC  EFFB  F006         	goto	u1190
  2114  000DF0                     u1191:
  2115  000DF0  0E01               	movlw	1
  2116  000DF2  EFFC  F006         	goto	u1200
  2117  000DF6                     u1190:
  2118  000DF6  0E00               	movlw	0
  2119  000DF8                     u1200:
  2120  000DF8  6E31               	movwf	_xtoa$1120^0,c
  2121  000DFA  6A32               	clrf	(_xtoa$1120+1)^0,c
  2122  000DFC  5031               	movf	_xtoa$1120^0,w,c
  2123  000DFE  1032               	iorwf	(_xtoa$1120+1)^0,w,c
  2124  000E00  B4D8               	btfsc	status,2,c
  2125  000E02  EF05  F007         	goto	u1211
  2126  000E06  EF07  F007         	goto	u1210
  2127  000E0A                     u1211:
  2128  000E0A  EF11  F007         	goto	l1863
  2129  000E0E                     u1210:
  2130  000E0E                     
  2131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2132  000E0E  C041  F007         	movff	xtoa@c,toupper@c
  2133  000E12  C042  F008         	movff	xtoa@c+1,toupper@c+1
  2134  000E16  EC57  F00A         	call	_toupper	;wreg free
  2135  000E1A  C007  F041         	movff	?_toupper,xtoa@c
  2136  000E1E  C008  F042         	movff	?_toupper+1,xtoa@c+1
  2137  000E22                     l1863:
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2140  000E22  0EDD               	movlw	low _dbuf
  2141  000E24  243F               	addwf	xtoa@i^0,w,c
  2142  000E26  6ED9               	movwf	fsr2l,c
  2143  000E28  0E00               	movlw	high _dbuf
  2144  000E2A  2040               	addwfc	(xtoa@i+1)^0,w,c
  2145  000E2C  6EDA               	movwf	fsr2h,c
  2146  000E2E  C041  FFDF         	movff	xtoa@c,indf2
  2147  000E32                     
  2148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  2149  000E32  0633               	decf	xtoa@p^0,f,c
  2150  000E34  A0D8               	btfss	status,0,c
  2151  000E36  0634               	decf	(xtoa@p+1)^0,f,c
  2152  000E38                     
  2153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  2154  000E38  0635               	decf	xtoa@w^0,f,c
  2155  000E3A  A0D8               	btfss	status,0,c
  2156  000E3C  0636               	decf	(xtoa@w+1)^0,f,c
  2157  000E3E                     
  2158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2159  000E3E  C037  F027         	movff	xtoa@n,??_xtoa
  2160  000E42  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  2161  000E46  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  2162  000E4A  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  2163  000E4E  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  2164  000E52  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  2165  000E56  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  2166  000E5A  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  2167  000E5E  0E05               	movlw	5
  2168  000E60  EF3B  F007         	goto	u1220
  2169  000E64                     u1225:
  2170  000E64  90D8               	bcf	status,0,c
  2171  000E66  322E               	rrcf	(??_xtoa+7)^0,f,c
  2172  000E68  322D               	rrcf	(??_xtoa+6)^0,f,c
  2173  000E6A  322C               	rrcf	(??_xtoa+5)^0,f,c
  2174  000E6C  322B               	rrcf	(??_xtoa+4)^0,f,c
  2175  000E6E  322A               	rrcf	(??_xtoa+3)^0,f,c
  2176  000E70  3229               	rrcf	(??_xtoa+2)^0,f,c
  2177  000E72  3228               	rrcf	(??_xtoa+1)^0,f,c
  2178  000E74  3227               	rrcf	??_xtoa^0,f,c
  2179  000E76                     u1220:
  2180  000E76  2EE8               	decfsz	wreg,f,c
  2181  000E78  EF32  F007         	goto	u1225
  2182  000E7C  C027  F037         	movff	??_xtoa,xtoa@n
  2183  000E80  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  2184  000E84  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  2185  000E88  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  2186  000E8C  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  2187  000E90  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  2188  000E94  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  2189  000E98  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  2190  000E9C                     l1871:
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2193  000E9C  BE40               	btfsc	(xtoa@i+1)^0,7,c
  2194  000E9E  EF5A  F007         	goto	u1231
  2195  000EA2  5040               	movf	(xtoa@i+1)^0,w,c
  2196  000EA4  E109               	bnz	u1230
  2197  000EA6  0E02               	movlw	2
  2198  000EA8  5C3F               	subwf	xtoa@i^0,w,c
  2199  000EAA  A0D8               	btfss	status,0,c
  2200  000EAC  EF5A  F007         	goto	u1231
  2201  000EB0  EF5C  F007         	goto	u1230
  2202  000EB4                     u1231:
  2203  000EB4  EF8C  F007         	goto	l1005
  2204  000EB8                     u1230:
  2205  000EB8  5037               	movf	xtoa@n^0,w,c
  2206  000EBA  1038               	iorwf	(xtoa@n+1)^0,w,c
  2207  000EBC  1039               	iorwf	(xtoa@n+2)^0,w,c
  2208  000EBE  103A               	iorwf	(xtoa@n+3)^0,w,c
  2209  000EC0  103B               	iorwf	(xtoa@n+4)^0,w,c
  2210  000EC2  103C               	iorwf	(xtoa@n+5)^0,w,c
  2211  000EC4  103D               	iorwf	(xtoa@n+6)^0,w,c
  2212  000EC6  103E               	iorwf	(xtoa@n+7)^0,w,c
  2213  000EC8  A4D8               	btfss	status,2,c
  2214  000ECA  EF69  F007         	goto	u1241
  2215  000ECE  EF6B  F007         	goto	u1240
  2216  000ED2                     u1241:
  2217  000ED2  EF9B  F006         	goto	l1841
  2218  000ED6                     u1240:
  2219  000ED6  BE34               	btfsc	(xtoa@p+1)^0,7,c
  2220  000ED8  EF78  F007         	goto	u1250
  2221  000EDC  5034               	movf	(xtoa@p+1)^0,w,c
  2222  000EDE  E106               	bnz	u1251
  2223  000EE0  0433               	decf	xtoa@p^0,w,c
  2224  000EE2  B0D8               	btfsc	status,0,c
  2225  000EE4  EF76  F007         	goto	u1251
  2226  000EE8  EF78  F007         	goto	u1250
  2227  000EEC                     u1251:
  2228  000EEC  EF9B  F006         	goto	l1841
  2229  000EF0                     u1250:
  2230  000EF0  BE36               	btfsc	(xtoa@w+1)^0,7,c
  2231  000EF2  EF83  F007         	goto	u1261
  2232  000EF6  5036               	movf	(xtoa@w+1)^0,w,c
  2233  000EF8  E108               	bnz	u1260
  2234  000EFA  0435               	decf	xtoa@w^0,w,c
  2235  000EFC  A0D8               	btfss	status,0,c
  2236  000EFE  EF83  F007         	goto	u1261
  2237  000F02  EF85  F007         	goto	u1260
  2238  000F06                     u1261:
  2239  000F06  EF8C  F007         	goto	l1005
  2240  000F0A                     u1260:
  2241  000F0A  B25E               	btfsc	_flags^0,1,c
  2242  000F0C  EF8A  F007         	goto	u1271
  2243  000F10  EF8C  F007         	goto	u1270
  2244  000F14                     u1271:
  2245  000F14  EF9B  F006         	goto	l1841
  2246  000F18                     u1270:
  2247  000F18                     l1005:
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2250  000F18  A85E               	btfss	_flags^0,4,c
  2251  000F1A  EF91  F007         	goto	u1281
  2252  000F1E  EF93  F007         	goto	u1280
  2253  000F22                     u1281:
  2254  000F22  EFA9  F007         	goto	l1887
  2255  000F26                     u1280:
  2256  000F26                     
  2257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  2258  000F26  063F               	decf	xtoa@i^0,f,c
  2259  000F28  A0D8               	btfss	status,0,c
  2260  000F2A  0640               	decf	(xtoa@i+1)^0,f,c
  2261  000F2C                     
  2262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2263  000F2C  0EDD               	movlw	low _dbuf
  2264  000F2E  243F               	addwf	xtoa@i^0,w,c
  2265  000F30  6ED9               	movwf	fsr2l,c
  2266  000F32  0E00               	movlw	high _dbuf
  2267  000F34  2040               	addwfc	(xtoa@i+1)^0,w,c
  2268  000F36  6EDA               	movwf	fsr2h,c
  2269  000F38  C026  FFDF         	movff	xtoa@x,indf2
  2270  000F3C                     
  2271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  2272  000F3C  063F               	decf	xtoa@i^0,f,c
  2273  000F3E  A0D8               	btfss	status,0,c
  2274  000F40  0640               	decf	(xtoa@i+1)^0,f,c
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2277  000F42  0EDD               	movlw	low _dbuf
  2278  000F44  243F               	addwf	xtoa@i^0,w,c
  2279  000F46  6ED9               	movwf	fsr2l,c
  2280  000F48  0E00               	movlw	high _dbuf
  2281  000F4A  2040               	addwfc	(xtoa@i+1)^0,w,c
  2282  000F4C  6EDA               	movwf	fsr2h,c
  2283  000F4E  0E30               	movlw	48
  2284  000F50  6EDF               	movwf	indf2,c
  2285  000F52                     l1887:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2288  000F52  C01C  F011         	movff	xtoa@fp,pad@fp
  2289  000F56  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2290  000F5A  0EDD               	movlw	low _dbuf
  2291  000F5C  243F               	addwf	xtoa@i^0,w,c
  2292  000F5E  6E13               	movwf	pad@buf^0,c
  2293  000F60  0E00               	movlw	high _dbuf
  2294  000F62  2040               	addwfc	(xtoa@i+1)^0,w,c
  2295  000F64  6E14               	movwf	(pad@buf+1)^0,c
  2296  000F66  C035  F015         	movff	xtoa@w,pad@p
  2297  000F6A  C036  F016         	movff	xtoa@w+1,pad@p+1
  2298  000F6E  EC6D  F009         	call	_pad	;wreg free
  2299  000F72  C011  F01C         	movff	?_pad,?_xtoa
  2300  000F76  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2301  000F7A  0012               	return		;funcret
  2302  000F7C                     __end_of_xtoa:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _toupper *****************
  2306 ;; Defined at:
  2307 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  c               2    6[COMRAM] int 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  2    6[COMRAM] int 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2321 ;;      Params:         2       0       0       0       0       0       0       0       0
  2322 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2323 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2324 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2325 ;;Total ram usage:        8 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    1
  2328 ;; This function calls:
  2329 ;;		_islower
  2330 ;; This function is called by:
  2331 ;;		_xtoa
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text5
  2336  0014AE                     __ptext5:
  2337                           	callstack 0
  2338  0014AE                     _toupper:
  2339                           	callstack 25
  2340  0014AE  0E9F               	movlw	159
  2341  0014B0  6E09               	movwf	??_toupper^0,c
  2342  0014B2  0EFF               	movlw	255
  2343  0014B4  6E0A               	movwf	(??_toupper+1)^0,c
  2344  0014B6  C007  F00B         	movff	toupper@c,??_toupper+2
  2345  0014BA  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2346  0014BE  5009               	movf	??_toupper^0,w,c
  2347  0014C0  260B               	addwf	(??_toupper+2)^0,f,c
  2348  0014C2  500A               	movf	(??_toupper+1)^0,w,c
  2349  0014C4  220C               	addwfc	(??_toupper+3)^0,f,c
  2350  0014C6  500C               	movf	(??_toupper+3)^0,w,c
  2351  0014C8  E10A               	bnz	u1060
  2352  0014CA  0E1A               	movlw	26
  2353  0014CC  5C0B               	subwf	(??_toupper+2)^0,w,c
  2354  0014CE  A0D8               	btfss	status,0,c
  2355  0014D0  EF6C  F00A         	goto	u1061
  2356  0014D4  EF6F  F00A         	goto	u1060
  2357  0014D8                     u1061:
  2358  0014D8  0E01               	movlw	1
  2359  0014DA  EF70  F00A         	goto	u1070
  2360  0014DE                     u1060:
  2361  0014DE  0E00               	movlw	0
  2362  0014E0                     u1070:
  2363  0014E0  6E0D               	movwf	_toupper$1202^0,c
  2364  0014E2  6A0E               	clrf	(_toupper$1202+1)^0,c
  2365  0014E4  500D               	movf	_toupper$1202^0,w,c
  2366  0014E6  100E               	iorwf	(_toupper$1202+1)^0,w,c
  2367  0014E8  B4D8               	btfsc	status,2,c
  2368  0014EA  EF79  F00A         	goto	u1081
  2369  0014EE  EF7B  F00A         	goto	u1080
  2370  0014F2                     u1081:
  2371  0014F2  EF81  F00A         	goto	l1067
  2372  0014F6                     u1080:
  2373  0014F6  0E5F               	movlw	95
  2374  0014F8  1407               	andwf	toupper@c^0,w,c
  2375  0014FA  6E07               	movwf	?_toupper^0,c
  2376  0014FC  6A08               	clrf	(?_toupper+1)^0,c
  2377  0014FE  EF85  F00A         	goto	l1072
  2378  001502                     l1067:
  2379  001502  C007  F007         	movff	toupper@c,?_toupper
  2380  001506  C008  F008         	movff	toupper@c+1,?_toupper+1
  2381  00150A                     l1072:
  2382  00150A  0012               	return		;funcret
  2383  00150C                     __end_of_toupper:
  2384                           	callstack 0
  2385                           
  2386 ;; *************** function _islower *****************
  2387 ;; Defined at:
  2388 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  c               2    0[COMRAM] int 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;		None
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  2    0[COMRAM] int 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2402 ;;      Params:         2       0       0       0       0       0       0       0       0
  2403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2404 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2405 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2406 ;;Total ram usage:        6 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_toupper
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text6
  2416  001878                     __ptext6:
  2417                           	callstack 0
  2418  001878                     _islower:
  2419                           	callstack 25
  2420  001878  0E9F               	movlw	159
  2421  00187A  6E03               	movwf	??_islower^0,c
  2422  00187C  0EFF               	movlw	255
  2423  00187E  6E04               	movwf	(??_islower+1)^0,c
  2424  001880  C001  F005         	movff	islower@c,??_islower+2
  2425  001884  C002  F006         	movff	islower@c+1,??_islower+3
  2426  001888  5003               	movf	??_islower^0,w,c
  2427  00188A  2605               	addwf	(??_islower+2)^0,f,c
  2428  00188C  5004               	movf	(??_islower+1)^0,w,c
  2429  00188E  2206               	addwfc	(??_islower+3)^0,f,c
  2430  001890  5006               	movf	(??_islower+3)^0,w,c
  2431  001892  E10A               	bnz	u960
  2432  001894  0E1A               	movlw	26
  2433  001896  5C05               	subwf	(??_islower+2)^0,w,c
  2434  001898  A0D8               	btfss	status,0,c
  2435  00189A  EF51  F00C         	goto	u961
  2436  00189E  EF54  F00C         	goto	u960
  2437  0018A2                     u961:
  2438  0018A2  0E01               	movlw	1
  2439  0018A4  EF55  F00C         	goto	u970
  2440  0018A8                     u960:
  2441  0018A8  0E00               	movlw	0
  2442  0018AA                     u970:
  2443  0018AA  6E01               	movwf	?_islower^0,c
  2444  0018AC  6A02               	clrf	(?_islower+1)^0,c
  2445  0018AE  0012               	return		;funcret
  2446  0018B0                     __end_of_islower:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _pad *****************
  2450 ;; Defined at:
  2451 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2454 ;;		 -> sprintf@f(6), 
  2455 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2456 ;;		 -> dbuf(32), 
  2457 ;;  p               2   20[COMRAM] int 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  w               2   25[COMRAM] int 
  2460 ;;  i               2   23[COMRAM] int 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  2   16[COMRAM] int 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2470 ;;      Params:         6       0       0       0       0       0       0       0       0
  2471 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2472 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2473 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2474 ;;Total ram usage:       11 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    3
  2477 ;; This function calls:
  2478 ;;		_fputc
  2479 ;;		_fputs
  2480 ;;		_strlen
  2481 ;; This function is called by:
  2482 ;;		_xtoa
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text7
  2487  0012DA                     __ptext7:
  2488                           	callstack 0
  2489  0012DA                     _pad:
  2490                           	callstack 23
  2491  0012DA                     
  2492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2493  0012DA  A05E               	btfss	_flags^0,0,c
  2494  0012DC  EF72  F009         	goto	u981
  2495  0012E0  EF74  F009         	goto	u980
  2496  0012E4                     u981:
  2497  0012E4  EF7E  F009         	goto	l1771
  2498  0012E8                     u980:
  2499  0012E8                     
  2500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2501  0012E8  C013  F00A         	movff	pad@buf,fputs@s
  2502  0012EC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2503  0012F0  C011  F00C         	movff	pad@fp,fputs@fp
  2504  0012F4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2505  0012F8  EC9E  F00B         	call	_fputs	;wreg free
  2506  0012FC                     l1771:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2509  0012FC  BE16               	btfsc	(pad@p+1)^0,7,c
  2510  0012FE  EF83  F009         	goto	u991
  2511  001302  EF85  F009         	goto	u990
  2512  001306                     u991:
  2513  001306  EF8B  F009         	goto	l1775
  2514  00130A                     u990:
  2515  00130A  C015  F01A         	movff	pad@p,pad@w
  2516  00130E  C016  F01B         	movff	pad@p+1,pad@w+1
  2517  001312  EF8F  F009         	goto	l972
  2518  001316                     l1775:
  2519  001316  0E00               	movlw	0
  2520  001318  6E1B               	movwf	(pad@w+1)^0,c
  2521  00131A  0E00               	movlw	0
  2522  00131C  6E1A               	movwf	pad@w^0,c
  2523  00131E                     l972:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2526  00131E  0E00               	movlw	0
  2527  001320  6E19               	movwf	(pad@i+1)^0,c
  2528  001322  0E00               	movlw	0
  2529  001324  6E18               	movwf	pad@i^0,c
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2532  001326  EFA1  F009         	goto	l1781
  2533  00132A                     l1777:
  2534                           
  2535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2536  00132A  0E00               	movlw	0
  2537  00132C  6E02               	movwf	(fputc@c+1)^0,c
  2538  00132E  0E20               	movlw	32
  2539  001330  6E01               	movwf	fputc@c^0,c
  2540  001332  C011  F003         	movff	pad@fp,fputc@fp
  2541  001336  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2542  00133A  ECA6  F008         	call	_fputc	;wreg free
  2543  00133E                     
  2544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2545  00133E  4A18               	infsnz	pad@i^0,f,c
  2546  001340  2A19               	incf	(pad@i+1)^0,f,c
  2547  001342                     l1781:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2550  001342  501A               	movf	pad@w^0,w,c
  2551  001344  5C18               	subwf	pad@i^0,w,c
  2552  001346  5019               	movf	(pad@i+1)^0,w,c
  2553  001348  0A80               	xorlw	128
  2554  00134A  6E17               	movwf	??_pad^0,c
  2555  00134C  501B               	movf	(pad@w+1)^0,w,c
  2556  00134E  0A80               	xorlw	128
  2557  001350  5817               	subwfb	??_pad^0,w,c
  2558  001352  A0D8               	btfss	status,0,c
  2559  001354  EFAE  F009         	goto	u1001
  2560  001358  EFB0  F009         	goto	u1000
  2561  00135C                     u1001:
  2562  00135C  EF95  F009         	goto	l1777
  2563  001360                     u1000:
  2564  001360                     
  2565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2566  001360  B05E               	btfsc	_flags^0,0,c
  2567  001362  EFB5  F009         	goto	u1011
  2568  001366  EFB7  F009         	goto	u1010
  2569  00136A                     u1011:
  2570  00136A  EFC1  F009         	goto	l1785
  2571  00136E                     u1010:
  2572  00136E                     
  2573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2574  00136E  C013  F00A         	movff	pad@buf,fputs@s
  2575  001372  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2576  001376  C011  F00C         	movff	pad@fp,fputs@fp
  2577  00137A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2578  00137E  EC9E  F00B         	call	_fputs	;wreg free
  2579  001382                     l1785:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2582  001382  C013  F001         	movff	pad@buf,strlen@s
  2583  001386  C014  F002         	movff	pad@buf+1,strlen@s+1
  2584  00138A  EC74  F00C         	call	_strlen	;wreg free
  2585  00138E  501A               	movf	pad@w^0,w,c
  2586  001390  2401               	addwf	?_strlen^0,w,c
  2587  001392  6E11               	movwf	?_pad^0,c
  2588  001394  501B               	movf	(pad@w+1)^0,w,c
  2589  001396  2002               	addwfc	(?_strlen+1)^0,w,c
  2590  001398  6E12               	movwf	(?_pad+1)^0,c
  2591  00139A  0012               	return		;funcret
  2592  00139C                     __end_of_pad:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _strlen *****************
  2596 ;; Defined at:
  2597 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2600 ;;		 -> dbuf(32), 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2603 ;;		 -> dbuf(32), 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  2    0[COMRAM] unsigned int 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2613 ;;      Params:         2       0       0       0       0       0       0       0       0
  2614 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2616 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2617 ;;Total ram usage:        4 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_pad
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text8
  2627  0018E8                     __ptext8:
  2628                           	callstack 0
  2629  0018E8                     _strlen:
  2630                           	callstack 25
  2631  0018E8  C001  F003         	movff	strlen@s,strlen@a
  2632  0018EC  C002  F004         	movff	strlen@s+1,strlen@a+1
  2633  0018F0  EF7C  F00C         	goto	l1757
  2634  0018F4                     l1755:
  2635  0018F4  4A01               	infsnz	strlen@s^0,f,c
  2636  0018F6  2A02               	incf	(strlen@s+1)^0,f,c
  2637  0018F8                     l1757:
  2638  0018F8  C001  FFD9         	movff	strlen@s,fsr2l
  2639  0018FC  C002  FFDA         	movff	strlen@s+1,fsr2h
  2640  001900  50DF               	movf	indf2,w,c
  2641  001902  A4D8               	btfss	status,2,c
  2642  001904  EF86  F00C         	goto	u951
  2643  001908  EF88  F00C         	goto	u950
  2644  00190C                     u951:
  2645  00190C  EF7A  F00C         	goto	l1755
  2646  001910                     u950:
  2647  001910  5003               	movf	strlen@a^0,w,c
  2648  001912  5C01               	subwf	strlen@s^0,w,c
  2649  001914  6E01               	movwf	?_strlen^0,c
  2650  001916  5004               	movf	(strlen@a+1)^0,w,c
  2651  001918  5802               	subwfb	(strlen@s+1)^0,w,c
  2652  00191A  6E02               	movwf	(?_strlen+1)^0,c
  2653  00191C  0012               	return		;funcret
  2654  00191E                     __end_of_strlen:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _fputs *****************
  2658 ;; Defined at:
  2659 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2662 ;;		 -> dbuf(32), 
  2663 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2664 ;;		 -> sprintf@f(6), 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  i               2   14[COMRAM] int 
  2667 ;;  c               1   13[COMRAM] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  2    9[COMRAM] int 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2677 ;;      Params:         4       0       0       0       0       0       0       0       0
  2678 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2680 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2681 ;;Total ram usage:        7 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    2
  2684 ;; This function calls:
  2685 ;;		_fputc
  2686 ;; This function is called by:
  2687 ;;		_pad
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text9
  2692  00173C                     __ptext9:
  2693                           	callstack 0
  2694  00173C                     _fputs:
  2695                           	callstack 23
  2696  00173C  0E00               	movlw	0
  2697  00173E  6E10               	movwf	(fputs@i+1)^0,c
  2698  001740  0E00               	movlw	0
  2699  001742  6E0F               	movwf	fputs@i^0,c
  2700  001744  EFAF  F00B         	goto	l1751
  2701  001748                     l1747:
  2702  001748  C00E  F001         	movff	fputs@c,fputc@c
  2703  00174C  6A02               	clrf	(fputc@c+1)^0,c
  2704  00174E  C00C  F003         	movff	fputs@fp,fputc@fp
  2705  001752  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2706  001756  ECA6  F008         	call	_fputc	;wreg free
  2707  00175A  4A0F               	infsnz	fputs@i^0,f,c
  2708  00175C  2A10               	incf	(fputs@i+1)^0,f,c
  2709  00175E                     l1751:
  2710  00175E  500F               	movf	fputs@i^0,w,c
  2711  001760  240A               	addwf	fputs@s^0,w,c
  2712  001762  6ED9               	movwf	fsr2l,c
  2713  001764  5010               	movf	(fputs@i+1)^0,w,c
  2714  001766  200B               	addwfc	(fputs@s+1)^0,w,c
  2715  001768  6EDA               	movwf	fsr2h,c
  2716  00176A  50DF               	movf	indf2,w,c
  2717  00176C  6E0E               	movwf	fputs@c^0,c
  2718  00176E  500E               	movf	fputs@c^0,w,c
  2719  001770  A4D8               	btfss	status,2,c
  2720  001772  EFBD  F00B         	goto	u941
  2721  001776  EFBF  F00B         	goto	u940
  2722  00177A                     u941:
  2723  00177A  EFA4  F00B         	goto	l1747
  2724  00177E                     u940:
  2725  00177E  0012               	return		;funcret
  2726  001780                     __end_of_fputs:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _fputc *****************
  2730 ;; Defined at:
  2731 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  c               2    0[COMRAM] int 
  2734 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2735 ;;		 -> sprintf@f(6), 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2    0[COMRAM] int 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2747 ;;      Params:         4       0       0       0       0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2749 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2750 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2751 ;;Total ram usage:        9 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    1
  2754 ;; This function calls:
  2755 ;;		_putch
  2756 ;; This function is called by:
  2757 ;;		_pad
  2758 ;;		_vfpfcnvrt
  2759 ;;		_fputs
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text10
  2764  00114C                     __ptext10:
  2765                           	callstack 0
  2766  00114C                     _fputc:
  2767                           	callstack 23
  2768  00114C  5003               	movf	fputc@fp^0,w,c
  2769  00114E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2770  001150  B4D8               	btfsc	status,2,c
  2771  001152  EFAD  F008         	goto	u901
  2772  001156  EFAF  F008         	goto	u900
  2773  00115A                     u901:
  2774  00115A  EFB8  F008         	goto	l1735
  2775  00115E                     u900:
  2776  00115E  5003               	movf	fputc@fp^0,w,c
  2777  001160  1004               	iorwf	(fputc@fp+1)^0,w,c
  2778  001162  A4D8               	btfss	status,2,c
  2779  001164  EFB6  F008         	goto	u911
  2780  001168  EFB8  F008         	goto	u910
  2781  00116C                     u911:
  2782  00116C  EFBD  F008         	goto	l1737
  2783  001170                     u910:
  2784  001170                     l1735:
  2785  001170  5001               	movf	fputc@c^0,w,c
  2786  001172  EC44  F00D         	call	_putch
  2787  001176  EF0A  F009         	goto	l1045
  2788  00117A                     l1737:
  2789  00117A  EE20 F004          	lfsr	2,4
  2790  00117E  5003               	movf	fputc@fp^0,w,c
  2791  001180  26D9               	addwf	fsr2l,f,c
  2792  001182  5004               	movf	(fputc@fp+1)^0,w,c
  2793  001184  22DA               	addwfc	fsr2h,f,c
  2794  001186  50DE               	movf	postinc2,w,c
  2795  001188  10DE               	iorwf	postinc2,w,c
  2796  00118A  B4D8               	btfsc	status,2,c
  2797  00118C  EFCA  F008         	goto	u921
  2798  001190  EFCC  F008         	goto	u920
  2799  001194                     u921:
  2800  001194  EFE7  F008         	goto	l1741
  2801  001198                     u920:
  2802  001198  EE20 F004          	lfsr	2,4
  2803  00119C  5003               	movf	fputc@fp^0,w,c
  2804  00119E  26D9               	addwf	fsr2l,f,c
  2805  0011A0  5004               	movf	(fputc@fp+1)^0,w,c
  2806  0011A2  22DA               	addwfc	fsr2h,f,c
  2807  0011A4  EE10 F002          	lfsr	1,2
  2808  0011A8  5003               	movf	fputc@fp^0,w,c
  2809  0011AA  26E1               	addwf	fsr1l,f,c
  2810  0011AC  5004               	movf	(fputc@fp+1)^0,w,c
  2811  0011AE  22E2               	addwfc	fsr1h,f,c
  2812  0011B0  50DE               	movf	postinc2,w,c
  2813  0011B2  5CE6               	subwf	postinc1,w,c
  2814  0011B4  50E6               	movf	postinc1,w,c
  2815  0011B6  0A80               	xorlw	128
  2816  0011B8  6E09               	movwf	(??_fputc+4)^0,c
  2817  0011BA  50DE               	movf	postinc2,w,c
  2818  0011BC  0A80               	xorlw	128
  2819  0011BE  5809               	subwfb	(??_fputc+4)^0,w,c
  2820  0011C0  B0D8               	btfsc	status,0,c
  2821  0011C2  EFE5  F008         	goto	u931
  2822  0011C6  EFE7  F008         	goto	u930
  2823  0011CA                     u931:
  2824  0011CA  EF0A  F009         	goto	l1045
  2825  0011CE                     u930:
  2826  0011CE                     l1741:
  2827  0011CE  EE20 F002          	lfsr	2,2
  2828  0011D2  5003               	movf	fputc@fp^0,w,c
  2829  0011D4  26D9               	addwf	fsr2l,f,c
  2830  0011D6  5004               	movf	(fputc@fp+1)^0,w,c
  2831  0011D8  22DA               	addwfc	fsr2h,f,c
  2832  0011DA  CFDE F005          	movff	postinc2,??_fputc
  2833  0011DE  CFDD F006          	movff	postdec2,??_fputc+1
  2834  0011E2  C003  FFD9         	movff	fputc@fp,fsr2l
  2835  0011E6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2836  0011EA  CFDE F007          	movff	postinc2,??_fputc+2
  2837  0011EE  CFDD F008          	movff	postdec2,??_fputc+3
  2838  0011F2  5005               	movf	??_fputc^0,w,c
  2839  0011F4  2407               	addwf	(??_fputc+2)^0,w,c
  2840  0011F6  6ED9               	movwf	fsr2l,c
  2841  0011F8  5006               	movf	(??_fputc+1)^0,w,c
  2842  0011FA  2008               	addwfc	(??_fputc+3)^0,w,c
  2843  0011FC  6EDA               	movwf	fsr2h,c
  2844  0011FE  C001  FFDF         	movff	fputc@c,indf2
  2845  001202  EE20 F002          	lfsr	2,2
  2846  001206  5003               	movf	fputc@fp^0,w,c
  2847  001208  26D9               	addwf	fsr2l,f,c
  2848  00120A  5004               	movf	(fputc@fp+1)^0,w,c
  2849  00120C  22DA               	addwfc	fsr2h,f,c
  2850  00120E  2ADE               	incf	postinc2,f,c
  2851  001210  0E00               	movlw	0
  2852  001212  22DD               	addwfc	postdec2,f,c
  2853  001214                     l1045:
  2854  001214  0012               	return		;funcret
  2855  001216                     __end_of_fputc:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function _putch *****************
  2859 ;; Defined at:
  2860 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  c               1    wreg     unsigned char 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  c               1    0[COMRAM] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2874 ;;      Params:         0       0       0       0       0       0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2877 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_fputc
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text11
  2888  001A88                     __ptext11:
  2889                           	callstack 0
  2890  001A88                     _putch:
  2891                           	callstack 23
  2892  001A88  0012               	return		;funcret
  2893  001A8A                     __end_of_putch:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _isupper *****************
  2897 ;; Defined at:
  2898 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  c               2    0[COMRAM] int 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  2    0[COMRAM] int 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2912 ;;      Params:         2       0       0       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2914 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2915 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2916 ;;Total ram usage:        6 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_xtoa
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text12
  2926  0018B0                     __ptext12:
  2927                           	callstack 0
  2928  0018B0                     _isupper:
  2929                           	callstack 26
  2930  0018B0  0EBF               	movlw	191
  2931  0018B2  6E03               	movwf	??_isupper^0,c
  2932  0018B4  0EFF               	movlw	255
  2933  0018B6  6E04               	movwf	(??_isupper+1)^0,c
  2934  0018B8  C001  F005         	movff	isupper@c,??_isupper+2
  2935  0018BC  C002  F006         	movff	isupper@c+1,??_isupper+3
  2936  0018C0  5003               	movf	??_isupper^0,w,c
  2937  0018C2  2605               	addwf	(??_isupper+2)^0,f,c
  2938  0018C4  5004               	movf	(??_isupper+1)^0,w,c
  2939  0018C6  2206               	addwfc	(??_isupper+3)^0,f,c
  2940  0018C8  5006               	movf	(??_isupper+3)^0,w,c
  2941  0018CA  E10A               	bnz	u1020
  2942  0018CC  0E1A               	movlw	26
  2943  0018CE  5C05               	subwf	(??_isupper+2)^0,w,c
  2944  0018D0  A0D8               	btfss	status,0,c
  2945  0018D2  EF6D  F00C         	goto	u1021
  2946  0018D6  EF70  F00C         	goto	u1020
  2947  0018DA                     u1021:
  2948  0018DA  0E01               	movlw	1
  2949  0018DC  EF71  F00C         	goto	u1030
  2950  0018E0                     u1020:
  2951  0018E0  0E00               	movlw	0
  2952  0018E2                     u1030:
  2953  0018E2  6E01               	movwf	?_isupper^0,c
  2954  0018E4  6A02               	clrf	(?_isupper+1)^0,c
  2955  0018E6  0012               	return		;funcret
  2956  0018E8                     __end_of_isupper:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _isalpha *****************
  2960 ;; Defined at:
  2961 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  c               2    0[COMRAM] int 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  2    0[COMRAM] int 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2975 ;;      Params:         2       0       0       0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2977 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2978 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2979 ;;Total ram usage:        6 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_xtoa
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text13
  2989  001802                     __ptext13:
  2990                           	callstack 0
  2991  001802                     _isalpha:
  2992                           	callstack 26
  2993  001802  0E9F               	movlw	159
  2994  001804  6E03               	movwf	??_isalpha^0,c
  2995  001806  0EFF               	movlw	255
  2996  001808  6E04               	movwf	(??_isalpha+1)^0,c
  2997  00180A  0E20               	movlw	32
  2998  00180C  1001               	iorwf	isalpha@c^0,w,c
  2999  00180E  6E05               	movwf	(??_isalpha+2)^0,c
  3000  001810  0E00               	movlw	0
  3001  001812  1002               	iorwf	(isalpha@c+1)^0,w,c
  3002  001814  6E06               	movwf	(??_isalpha+3)^0,c
  3003  001816  5003               	movf	??_isalpha^0,w,c
  3004  001818  2605               	addwf	(??_isalpha+2)^0,f,c
  3005  00181A  5004               	movf	(??_isalpha+1)^0,w,c
  3006  00181C  2206               	addwfc	(??_isalpha+3)^0,f,c
  3007  00181E  5006               	movf	(??_isalpha+3)^0,w,c
  3008  001820  E10A               	bnz	u1040
  3009  001822  0E1A               	movlw	26
  3010  001824  5C05               	subwf	(??_isalpha+2)^0,w,c
  3011  001826  A0D8               	btfss	status,0,c
  3012  001828  EF18  F00C         	goto	u1041
  3013  00182C  EF1B  F00C         	goto	u1040
  3014  001830                     u1041:
  3015  001830  0E01               	movlw	1
  3016  001832  EF1C  F00C         	goto	u1050
  3017  001836                     u1040:
  3018  001836  0E00               	movlw	0
  3019  001838                     u1050:
  3020  001838  6E01               	movwf	?_isalpha^0,c
  3021  00183A  6A02               	clrf	(?_isalpha+1)^0,c
  3022  00183C  0012               	return		;funcret
  3023  00183E                     __end_of_isalpha:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _RTC_Read_Clock *****************
  3027 ;; Defined at:
  3028 ;;		line 23 in file "RTC.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  read_clock_a    1    wreg     unsigned char 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0
  3043 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3044 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3045 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3046 ;;Total ram usage:        2 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    3
  3049 ;; This function calls:
  3050 ;;		_I2C_Read
  3051 ;;		_I2C_Repeated_Start
  3052 ;;		_I2C_Start
  3053 ;;		_I2C_Write
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text14
  3060  0016F6                     __ptext14:
  3061                           	callstack 0
  3062  0016F6                     _RTC_Read_Clock:
  3063                           	callstack 27
  3064                           
  3065                           ;incstack = 0
  3066                           ;RTC_Read_Clock@read_clock_address stored from wreg
  3067  0016F6  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  3068  0016F8                     
  3069                           ;RTC.c: 23: void RTC_Read_Clock(char read_clock_address);RTC.c: 24: {;RTC.c: 25:     I2C
      +                          _Start(0xD0);
  3070  0016F8  0ED0               	movlw	208
  3071  0016FA  ECA7  F00C         	call	_I2C_Start
  3072                           
  3073                           ;RTC.c: 26:     I2C_Write(read_clock_address);
  3074  0016FE  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  3075  001700  ECE8  F00C         	call	_I2C_Write
  3076                           
  3077                           ;RTC.c: 27:     I2C_Repeated_Start(0xD1);
  3078  001704  0ED1               	movlw	209
  3079  001706  ECBE  F00C         	call	_I2C_Repeated_Start
  3080  00170A                     
  3081                           ;RTC.c: 28:     sec = I2C_Read(0);
  3082  00170A  0E00               	movlw	0
  3083  00170C  EC1F  F00C         	call	_I2C_Read
  3084  001710  6E03               	movwf	??_RTC_Read_Clock^0,c
  3085  001712  5003               	movf	??_RTC_Read_Clock^0,w,c
  3086  001714  0100               	movlb	0	; () banked
  3087  001716  6FDB               	movwf	_sec& (0+255),b
  3088  001718  6BDC               	clrf	(_sec+1)& (0+255),b
  3089  00171A                     
  3090                           ; BSR set to: 0
  3091                           ;RTC.c: 29:     min = I2C_Read(0);
  3092  00171A  0E00               	movlw	0
  3093  00171C  EC1F  F00C         	call	_I2C_Read
  3094  001720  6E03               	movwf	??_RTC_Read_Clock^0,c
  3095  001722  5003               	movf	??_RTC_Read_Clock^0,w,c
  3096  001724  0100               	movlb	0	; () banked
  3097  001726  6FD9               	movwf	_min& (0+255),b
  3098  001728  6BDA               	clrf	(_min+1)& (0+255),b
  3099  00172A                     
  3100                           ; BSR set to: 0
  3101                           ;RTC.c: 30:     hour= I2C_Read(1);
  3102  00172A  0E01               	movlw	1
  3103  00172C  EC1F  F00C         	call	_I2C_Read
  3104  001730  6E03               	movwf	??_RTC_Read_Clock^0,c
  3105  001732  5003               	movf	??_RTC_Read_Clock^0,w,c
  3106  001734  0100               	movlb	0	; () banked
  3107  001736  6FD7               	movwf	_hour& (0+255),b
  3108  001738  6BD8               	clrf	(_hour+1)& (0+255),b
  3109  00173A                     
  3110                           ; BSR set to: 0
  3111  00173A  0012               	return		;funcret
  3112  00173C                     __end_of_RTC_Read_Clock:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _I2C_Start *****************
  3116 ;; Defined at:
  3117 ;;		line 68 in file "PIC18F4550_I2C_Source_File.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  slave_write_    1    wreg     unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  slave_write_    1    1[COMRAM] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      unsigned char 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0
  3132 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3134 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3135 ;;Total ram usage:        1 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    2
  3138 ;; This function calls:
  3139 ;;		_I2C_Write
  3140 ;; This function is called by:
  3141 ;;		_RTC_Read_Clock
  3142 ;;		_RTC_Clock_Write
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text15
  3147  00194E                     __ptext15:
  3148                           	callstack 0
  3149  00194E                     _I2C_Start:
  3150                           	callstack 27
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;incstack = 0
  3154                           ;I2C_Start@slave_write_address stored from wreg
  3155  00194E  6E02               	movwf	I2C_Start@slave_write_address^0,c
  3156  001950                     
  3157                           ;PIC18F4550_I2C_Source_File.c: 68: char I2C_Start(char slave_write_address);PIC18F4550_I
      +                          2C_Source_File.c: 69: {;PIC18F4550_I2C_Source_File.c: 70:     SSPCON2bits.SEN=1;
  3158  001950  80C5               	bsf	197,0,c	;volatile
  3159  001952                     l223:
  3160  001952  B0C5               	btfsc	197,0,c	;volatile
  3161  001954  EFAE  F00C         	goto	u1361
  3162  001958  EFB0  F00C         	goto	u1360
  3163  00195C                     u1361:
  3164  00195C  EFA9  F00C         	goto	l223
  3165  001960                     u1360:
  3166  001960                     
  3167                           ;PIC18F4550_I2C_Source_File.c: 72:  SSPIF=0;
  3168  001960  969E               	bcf	3998,3,c	;volatile
  3169                           
  3170                           ;PIC18F4550_I2C_Source_File.c: 73:     if(!SSPSTATbits.S)
  3171  001962  B6C7               	btfsc	199,3,c	;volatile
  3172  001964  EFB6  F00C         	goto	u1371
  3173  001968  EFB8  F00C         	goto	u1370
  3174  00196C                     u1371:
  3175  00196C  EFBA  F00C         	goto	l1981
  3176  001970                     u1370:
  3177  001970  EFBD  F00C         	goto	l227
  3178  001974                     l1981:
  3179                           
  3180                           ;PIC18F4550_I2C_Source_File.c: 75:     return (I2C_Write(slave_write_address));;	Return 
      +                          value of _I2C_Start is never used
  3181  001974  5002               	movf	I2C_Start@slave_write_address^0,w,c
  3182  001976  ECE8  F00C         	call	_I2C_Write
  3183  00197A                     l227:
  3184  00197A  0012               	return		;funcret
  3185  00197C                     __end_of_I2C_Start:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _I2C_Repeated_Start *****************
  3189 ;; Defined at:
  3190 ;;		line 79 in file "PIC18F4550_I2C_Source_File.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  slave_read_a    1    wreg     unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      unsigned char 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3204 ;;      Params:         0       0       0       0       0       0       0       0       0
  3205 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3207 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3208 ;;Total ram usage:        1 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    2
  3211 ;; This function calls:
  3212 ;;		_I2C_Write
  3213 ;; This function is called by:
  3214 ;;		_RTC_Read_Clock
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text16
  3219  00197C                     __ptext16:
  3220                           	callstack 0
  3221  00197C                     _I2C_Repeated_Start:
  3222                           	callstack 27
  3223                           
  3224                           ;incstack = 0
  3225                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  3226  00197C  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  3227  00197E                     
  3228                           ;PIC18F4550_I2C_Source_File.c: 79: char I2C_Repeated_Start(char slave_read_address);PIC1
      +                          8F4550_I2C_Source_File.c: 80: {;PIC18F4550_I2C_Source_File.c: 81:     RSEN = 1;
  3229  00197E  82C5               	bsf	4037,1,c	;volatile
  3230  001980                     l230:
  3231  001980  B2C5               	btfsc	4037,1,c	;volatile
  3232  001982  EFC5  F00C         	goto	u1381
  3233  001986  EFC7  F00C         	goto	u1380
  3234  00198A                     u1381:
  3235  00198A  EFC0  F00C         	goto	l230
  3236  00198E                     u1380:
  3237  00198E                     
  3238                           ;PIC18F4550_I2C_Source_File.c: 83:     SSPIF = 0;
  3239  00198E  969E               	bcf	3998,3,c	;volatile
  3240                           
  3241                           ;PIC18F4550_I2C_Source_File.c: 84:  if(!SSPSTATbits.S)
  3242  001990  B6C7               	btfsc	199,3,c	;volatile
  3243  001992  EFCD  F00C         	goto	u1391
  3244  001996  EFCF  F00C         	goto	u1390
  3245  00199A                     u1391:
  3246  00199A  EFD1  F00C         	goto	l1989
  3247  00199E                     u1390:
  3248  00199E  EFD4  F00C         	goto	l234
  3249  0019A2                     l1989:
  3250                           
  3251                           ;PIC18F4550_I2C_Source_File.c: 86:     I2C_Write(slave_read_address);
  3252  0019A2  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  3253  0019A4  ECE8  F00C         	call	_I2C_Write
  3254  0019A8                     l234:
  3255  0019A8  0012               	return		;funcret
  3256  0019AA                     __end_of_I2C_Repeated_Start:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function _I2C_Write *****************
  3260 ;; Defined at:
  3261 ;;		line 101 in file "PIC18F4550_I2C_Source_File.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  data            1    wreg     unsigned char 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  data            1    0[COMRAM] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      unsigned char 
  3268 ;; Registers used:
  3269 ;;		wreg, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3275 ;;      Params:         0       0       0       0       0       0       0       0       0
  3276 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3278 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3279 ;;Total ram usage:        1 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    1
  3282 ;; This function calls:
  3283 ;;		_I2C_Ready
  3284 ;; This function is called by:
  3285 ;;		_RTC_Read_Clock
  3286 ;;		_I2C_Start
  3287 ;;		_I2C_Repeated_Start
  3288 ;;		_RTC_Clock_Write
  3289 ;;		_I2C_Start_Wait
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text17
  3294  0019D0                     __ptext17:
  3295                           	callstack 0
  3296  0019D0                     _I2C_Write:
  3297                           	callstack 28
  3298                           
  3299                           ;incstack = 0
  3300                           ;I2C_Write@data stored from wreg
  3301  0019D0  6E01               	movwf	I2C_Write@data^0,c
  3302  0019D2                     
  3303                           ;PIC18F4550_I2C_Source_File.c: 101: char I2C_Write(unsigned char data);PIC18F4550_I2C_So
      +                          urce_File.c: 102: {;PIC18F4550_I2C_Source_File.c: 103:       SSPBUF = data;
  3304  0019D2  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3305  0019D6                     
  3306                           ;PIC18F4550_I2C_Source_File.c: 104:       I2C_Ready();
  3307  0019D6  EC3B  F00D         	call	_I2C_Ready	;wreg free
  3308  0019DA                     
  3309                           ;PIC18F4550_I2C_Source_File.c: 105:       if (ACKSTAT)
  3310  0019DA  ACC5               	btfss	4037,6,c	;volatile
  3311  0019DC  EFF2  F00C         	goto	u1291
  3312  0019E0  EFF4  F00C         	goto	u1290
  3313  0019E4                     u1291:
  3314  0019E4  EFF7  F00C         	goto	l1903
  3315  0019E8                     u1290:
  3316  0019E8                     
  3317                           ;PIC18F4550_I2C_Source_File.c: 106:         return 1;
  3318  0019E8  0E01               	movlw	1
  3319  0019EA  EFF8  F00C         	goto	l247
  3320  0019EE                     l1903:
  3321                           
  3322                           ;PIC18F4550_I2C_Source_File.c: 108:         return 2;
  3323  0019EE  0E02               	movlw	2
  3324  0019F0                     l247:
  3325  0019F0  0012               	return		;funcret
  3326  0019F2                     __end_of_I2C_Write:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function _I2C_Read *****************
  3330 ;; Defined at:
  3331 ;;		line 12 in file "PIC18F4550_I2C_Source_File.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  flag            1    wreg     unsigned char 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  flag            1    0[COMRAM] unsigned char 
  3336 ;;  buffer          1    1[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      unsigned char 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0
  3347 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3349 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3350 ;;Total ram usage:        2 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    1
  3353 ;; This function calls:
  3354 ;;		_I2C_Ack
  3355 ;;		_I2C_Nack
  3356 ;;		_I2C_Ready
  3357 ;; This function is called by:
  3358 ;;		_RTC_Read_Clock
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text18
  3363  00183E                     __ptext18:
  3364                           	callstack 0
  3365  00183E                     _I2C_Read:
  3366                           	callstack 28
  3367                           
  3368                           ;incstack = 0
  3369                           ;I2C_Read@flag stored from wreg
  3370  00183E  6E01               	movwf	I2C_Read@flag^0,c
  3371  001840                     
  3372                           ;PIC18F4550_I2C_Source_File.c: 12: char I2C_Read(char flag);PIC18F4550_I2C_Source_File.c
      +                          : 14: {;PIC18F4550_I2C_Source_File.c: 15:         char buffer;;PIC18F4550_I2C_Source_Fil
      +                          e.c: 16:         RCEN = 1;
  3373  001840  86C5               	bsf	4037,3,c	;volatile
  3374  001842                     l195:
  3375  001842  A0C7               	btfss	199,0,c	;volatile
  3376  001844  EF26  F00C         	goto	u1401
  3377  001848  EF28  F00C         	goto	u1400
  3378  00184C                     u1401:
  3379  00184C  EF21  F00C         	goto	l195
  3380  001850                     u1400:
  3381  001850                     
  3382                           ;PIC18F4550_I2C_Source_File.c: 19:         buffer = SSPBUF;
  3383  001850  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3384  001854                     
  3385                           ;PIC18F4550_I2C_Source_File.c: 21:         if(flag==0)
  3386  001854  5001               	movf	I2C_Read@flag^0,w,c
  3387  001856  A4D8               	btfss	status,2,c
  3388  001858  EF30  F00C         	goto	u1411
  3389  00185C  EF32  F00C         	goto	u1410
  3390  001860                     u1411:
  3391  001860  EF36  F00C         	goto	l2003
  3392  001864                     u1410:
  3393  001864                     
  3394                           ;PIC18F4550_I2C_Source_File.c: 22:             I2C_Ack();
  3395  001864  EC1D  F00D         	call	_I2C_Ack	;wreg free
  3396  001868  EF38  F00C         	goto	l199
  3397  00186C                     l2003:
  3398                           
  3399                           ;PIC18F4550_I2C_Source_File.c: 24:             I2C_Nack();
  3400  00186C  EC13  F00D         	call	_I2C_Nack	;wreg free
  3401  001870                     l199:
  3402                           
  3403                           ;PIC18F4550_I2C_Source_File.c: 25:         I2C_Ready();
  3404  001870  EC3B  F00D         	call	_I2C_Ready	;wreg free
  3405  001874                     
  3406                           ;PIC18F4550_I2C_Source_File.c: 26:         return(buffer);
  3407  001874  5002               	movf	I2C_Read@buffer^0,w,c
  3408  001876  0012               	return		;funcret
  3409  001878                     __end_of_I2C_Read:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _I2C_Ready *****************
  3413 ;; Defined at:
  3414 ;;		line 43 in file "PIC18F4550_I2C_Source_File.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		None
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3431 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_I2C_Read
  3438 ;;		_I2C_Write
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text19
  3443  001A76                     __ptext19:
  3444                           	callstack 0
  3445  001A76                     _I2C_Ready:
  3446                           	callstack 28
  3447  001A76                     l206:
  3448  001A76  A69E               	btfss	3998,3,c	;volatile
  3449  001A78  EF40  F00D         	goto	u1111
  3450  001A7C  EF42  F00D         	goto	u1110
  3451  001A80                     u1111:
  3452  001A80  EF3B  F00D         	goto	l206
  3453  001A84                     u1110:
  3454  001A84                     
  3455                           ;PIC18F4550_I2C_Source_File.c: 46:     SSPIF=0;
  3456  001A84  969E               	bcf	3998,3,c	;volatile
  3457  001A86  0012               	return		;funcret
  3458  001A88                     __end_of_I2C_Ready:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function _I2C_Nack *****************
  3462 ;; Defined at:
  3463 ;;		line 118 in file "PIC18F4550_I2C_Source_File.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		None
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3480 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_I2C_Read
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text20
  3491  001A26                     __ptext20:
  3492                           	callstack 0
  3493  001A26                     _I2C_Nack:
  3494                           	callstack 28
  3495  001A26                     
  3496                           ;PIC18F4550_I2C_Source_File.c: 120:     ACKDT=1;
  3497  001A26  8AC5               	bsf	4037,5,c	;volatile
  3498                           
  3499                           ;PIC18F4550_I2C_Source_File.c: 121:  ACKEN=1;
  3500  001A28  88C5               	bsf	4037,4,c	;volatile
  3501  001A2A                     l257:
  3502  001A2A  B8C5               	btfsc	4037,4,c	;volatile
  3503  001A2C  EF1A  F00D         	goto	u1311
  3504  001A30  EF1C  F00D         	goto	u1310
  3505  001A34                     u1311:
  3506  001A34  EF15  F00D         	goto	l257
  3507  001A38                     u1310:
  3508  001A38  0012               	return		;funcret
  3509  001A3A                     __end_of_I2C_Nack:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _I2C_Ack *****************
  3513 ;; Defined at:
  3514 ;;		line 111 in file "PIC18F4550_I2C_Source_File.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		None
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3531 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_I2C_Read
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text21
  3542  001A3A                     __ptext21:
  3543                           	callstack 0
  3544  001A3A                     _I2C_Ack:
  3545                           	callstack 28
  3546  001A3A                     
  3547                           ;PIC18F4550_I2C_Source_File.c: 113:     ACKDT=0;
  3548  001A3A  9AC5               	bcf	4037,5,c	;volatile
  3549                           
  3550                           ;PIC18F4550_I2C_Source_File.c: 114:  ACKEN=1;
  3551  001A3C  88C5               	bsf	4037,4,c	;volatile
  3552  001A3E                     l251:
  3553  001A3E  B8C5               	btfsc	4037,4,c	;volatile
  3554  001A40  EF24  F00D         	goto	u1301
  3555  001A44  EF26  F00D         	goto	u1300
  3556  001A48                     u1301:
  3557  001A48  EF1F  F00D         	goto	l251
  3558  001A4C                     u1300:
  3559  001A4C  0012               	return		;funcret
  3560  001A4E                     __end_of_I2C_Ack:
  3561                           	callstack 0
  3562                           
  3563 ;; *************** function _LCD_String_xy *****************
  3564 ;; Defined at:
  3565 ;;		line 63 in file "LCD_16x2_4bit_mode.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  row             1    wreg     unsigned char 
  3568 ;;  pos             1   10[COMRAM] unsigned char 
  3569 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  3570 ;;		 -> main@counters_min(10), main@hours(10), STR_2(3), STR_1(3), 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  row             1   13[COMRAM] unsigned char 
  3573 ;;  location        1   14[COMRAM] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3583 ;;      Params:         3       0       0       0       0       0       0       0       0
  3584 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3586 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3587 ;;Total ram usage:        5 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    3
  3590 ;; This function calls:
  3591 ;;		_LCD_Command
  3592 ;;		_LCD_String
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text22
  3599  0017C2                     __ptext22:
  3600                           	callstack 0
  3601  0017C2                     _LCD_String_xy:
  3602                           	callstack 27
  3603                           
  3604                           ;incstack = 0
  3605                           ;LCD_String_xy@row stored from wreg
  3606  0017C2  6E0E               	movwf	LCD_String_xy@row^0,c
  3607  0017C4                     
  3608                           ;LCD_16x2_4bit_mode.c: 66:     if(row<=1)
  3609  0017C4  0E02               	movlw	2
  3610  0017C6  600E               	cpfslt	LCD_String_xy@row^0,c
  3611  0017C8  EFE8  F00B         	goto	u1601
  3612  0017CC  EFEA  F00B         	goto	u1600
  3613  0017D0                     u1601:
  3614  0017D0  EFF3  F00B         	goto	l2185
  3615  0017D4                     u1600:
  3616  0017D4                     
  3617                           ;LCD_16x2_4bit_mode.c: 67:     {;LCD_16x2_4bit_mode.c: 68:         location = (0x80) | (
      +                          (pos) & 0x0f);
  3618  0017D4  500B               	movf	LCD_String_xy@pos^0,w,c
  3619  0017D6  0B0F               	andlw	15
  3620  0017D8  0980               	iorlw	128
  3621  0017DA  6E0F               	movwf	LCD_String_xy@location^0,c
  3622  0017DC                     
  3623                           ;LCD_16x2_4bit_mode.c: 69:         LCD_Command(location);
  3624  0017DC  500F               	movf	LCD_String_xy@location^0,w,c
  3625  0017DE  EC30  F00B         	call	_LCD_Command
  3626                           
  3627                           ;LCD_16x2_4bit_mode.c: 70:     }
  3628  0017E2  EFFA  F00B         	goto	l2189
  3629  0017E6                     l2185:
  3630                           
  3631                           ;LCD_16x2_4bit_mode.c: 72:     {;LCD_16x2_4bit_mode.c: 73:         location = (0xC0) | (
      +                          (pos) & 0x0f);
  3632  0017E6  500B               	movf	LCD_String_xy@pos^0,w,c
  3633  0017E8  0B0F               	andlw	15
  3634  0017EA  09C0               	iorlw	192
  3635  0017EC  6E0F               	movwf	LCD_String_xy@location^0,c
  3636  0017EE                     
  3637                           ;LCD_16x2_4bit_mode.c: 74:         LCD_Command(location);
  3638  0017EE  500F               	movf	LCD_String_xy@location^0,w,c
  3639  0017F0  EC30  F00B         	call	_LCD_Command
  3640  0017F4                     l2189:
  3641                           
  3642                           ;LCD_16x2_4bit_mode.c: 78:     LCD_String(msg);
  3643  0017F4  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
  3644  0017F8  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3645  0017FC  EC86  F00A         	call	_LCD_String	;wreg free
  3646  001800  0012               	return		;funcret
  3647  001802                     __end_of_LCD_String_xy:
  3648                           	callstack 0
  3649                           
  3650 ;; *************** function _LCD_String *****************
  3651 ;; Defined at:
  3652 ;;		line 53 in file "LCD_16x2_4bit_mode.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  msg             2    8[COMRAM] PTR const unsigned char 
  3655 ;;		 -> main@counters_pomos(10), main@counters_sec(10), main@counters_min(10), main@hours(10), 
  3656 ;;		 -> main@mins(10), main@secs(10), STR_2(3), STR_1(3), 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3668 ;;      Params:         2       0       0       0       0       0       0       0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3671 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3672 ;;Total ram usage:        2 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    2
  3675 ;; This function calls:
  3676 ;;		_LCD_Char
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;;		_LCD_String_xy
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text23
  3684  00150C                     __ptext23:
  3685                           	callstack 0
  3686  00150C                     _LCD_String:
  3687                           	callstack 27
  3688  00150C                     
  3689                           ;LCD_16x2_4bit_mode.c: 53: void LCD_String(const char *msg);LCD_16x2_4bit_mode.c: 54: {;
      +                          LCD_16x2_4bit_mode.c: 55:  while((*msg)!=0)
  3690  00150C  EF9C  F00A         	goto	l2015
  3691  001510                     l2011:
  3692                           
  3693                           ;LCD_16x2_4bit_mode.c: 56:  {;LCD_16x2_4bit_mode.c: 57:    LCD_Char(*msg);
  3694  001510  C009  FFF6         	movff	LCD_String@msg,tblptrl
  3695  001514  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  3696  001518  6AF8               	clrf	tblptru,c
  3697  00151A  0E07               	movlw	(high __ramtop+-1)
  3698  00151C  64F7               	cpfsgt	tblptrh,c
  3699  00151E  D003               	bra	u1427
  3700  001520  0008               	tblrd		*
  3701  001522  50F5               	movf	tablat,w,c
  3702  001524  D005               	bra	u1420
  3703  001526                     u1427:
  3704  001526  CFF6 FFE1          	movff	tblptrl,fsr1l
  3705  00152A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3706  00152E  50E7               	movf	indf1,w,c
  3707  001530                     u1420:
  3708  001530  EC0A  F00B         	call	_LCD_Char
  3709  001534                     
  3710                           ;LCD_16x2_4bit_mode.c: 58:    msg++;
  3711  001534  4A09               	infsnz	LCD_String@msg^0,f,c
  3712  001536  2A0A               	incf	(LCD_String@msg+1)^0,f,c
  3713  001538                     l2015:
  3714                           
  3715                           ;LCD_16x2_4bit_mode.c: 55:  while((*msg)!=0)
  3716  001538  C009  FFF6         	movff	LCD_String@msg,tblptrl
  3717  00153C  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  3718  001540  6AF8               	clrf	tblptru,c
  3719  001542  0E07               	movlw	(high __ramtop+-1)
  3720  001544  64F7               	cpfsgt	tblptrh,c
  3721  001546  D003               	bra	u1437
  3722  001548  0008               	tblrd		*
  3723  00154A  50F5               	movf	tablat,w,c
  3724  00154C  D005               	bra	u1430
  3725  00154E                     u1437:
  3726  00154E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3727  001552  CFF7 FFE2          	movff	tblptrh,fsr1h
  3728  001556  50E7               	movf	indf1,w,c
  3729  001558                     u1430:
  3730  001558  0900               	iorlw	0
  3731  00155A  A4D8               	btfss	status,2,c
  3732  00155C  EFB2  F00A         	goto	u1441
  3733  001560  EFB4  F00A         	goto	u1440
  3734  001564                     u1441:
  3735  001564  EF88  F00A         	goto	l2011
  3736  001568                     u1440:
  3737  001568  0012               	return		;funcret
  3738  00156A                     __end_of_LCD_String:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function _LCD_Char *****************
  3742 ;; Defined at:
  3743 ;;		line 39 in file "LCD_16x2_4bit_mode.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  dat             1    wreg     unsigned char 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  dat             1    7[COMRAM] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0
  3758 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3759 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3760 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3761 ;;Total ram usage:        2 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    1
  3764 ;; This function calls:
  3765 ;;		_MSdelay
  3766 ;; This function is called by:
  3767 ;;		_LCD_String
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text24
  3772  001614                     __ptext24:
  3773                           	callstack 0
  3774  001614                     _LCD_Char:
  3775                           	callstack 27
  3776                           
  3777                           ;incstack = 0
  3778                           ;LCD_Char@dat stored from wreg
  3779  001614  6E08               	movwf	LCD_Char@dat^0,c
  3780  001616                     
  3781                           ;LCD_16x2_4bit_mode.c: 39: void LCD_Char(unsigned char dat);LCD_16x2_4bit_mode.c: 40: {;
      +                          LCD_16x2_4bit_mode.c: 41:  LATD = (LATD & 0x0f) | (0xF0 & dat);
  3782  001616  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  3783  00161A  0EF0               	movlw	240
  3784  00161C  1607               	andwf	??_LCD_Char^0,f,c
  3785  00161E  508C               	movf	140,w,c	;volatile
  3786  001620  0B0F               	andlw	15
  3787  001622  1007               	iorwf	??_LCD_Char^0,w,c
  3788  001624  6E8C               	movwf	140,c	;volatile
  3789  001626                     
  3790                           ;LCD_16x2_4bit_mode.c: 42:  LATD2 = 1;
  3791  001626  848C               	bsf	3980,2,c	;volatile
  3792  001628                     
  3793                           ;LCD_16x2_4bit_mode.c: 43:  LATD3 = 1;
  3794  001628  868C               	bsf	3980,3,c	;volatile
  3795  00162A                     
  3796                           ;LCD_16x2_4bit_mode.c: 44:  __nop();
  3797  00162A  F000               	nop	
  3798  00162C                     
  3799                           ;LCD_16x2_4bit_mode.c: 45:  LATD3 = 0;
  3800  00162C  968C               	bcf	3980,3,c	;volatile
  3801  00162E                     
  3802                           ;LCD_16x2_4bit_mode.c: 46:  MSdelay(1);
  3803  00162E  0E00               	movlw	0
  3804  001630  6E02               	movwf	(MSdelay@val+1)^0,c
  3805  001632  0E01               	movlw	1
  3806  001634  6E01               	movwf	MSdelay@val^0,c
  3807  001636  EC56  F00B         	call	_MSdelay	;wreg free
  3808  00163A                     
  3809                           ;LCD_16x2_4bit_mode.c: 47:     LATD = (LATD & 0x0f) | (dat<<4);
  3810  00163A  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  3811  00163E  3A07               	swapf	??_LCD_Char^0,f,c
  3812  001640  0EF0               	movlw	240
  3813  001642  1607               	andwf	??_LCD_Char^0,f,c
  3814  001644  508C               	movf	140,w,c	;volatile
  3815  001646  0B0F               	andlw	15
  3816  001648  1007               	iorwf	??_LCD_Char^0,w,c
  3817  00164A  6E8C               	movwf	140,c	;volatile
  3818  00164C                     
  3819                           ;LCD_16x2_4bit_mode.c: 48:  LATD3 = 1;
  3820  00164C  868C               	bsf	3980,3,c	;volatile
  3821  00164E                     
  3822                           ;LCD_16x2_4bit_mode.c: 49:  __nop();
  3823  00164E  F000               	nop	
  3824  001650                     
  3825                           ;LCD_16x2_4bit_mode.c: 50:  LATD3 = 0;
  3826  001650  968C               	bcf	3980,3,c	;volatile
  3827                           
  3828                           ;LCD_16x2_4bit_mode.c: 51:  MSdelay(3);
  3829  001652  0E00               	movlw	0
  3830  001654  6E02               	movwf	(MSdelay@val+1)^0,c
  3831  001656  0E03               	movlw	3
  3832  001658  6E01               	movwf	MSdelay@val^0,c
  3833  00165A  EC56  F00B         	call	_MSdelay	;wreg free
  3834  00165E  0012               	return		;funcret
  3835  001660                     __end_of_LCD_Char:
  3836                           	callstack 0
  3837                           
  3838 ;; *************** function _LCD_Init *****************
  3839 ;; Defined at:
  3840 ;;		line 8 in file "LCD_16x2_4bit_mode.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;		None
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;		None
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  1    wreg      void 
  3847 ;; Registers used:
  3848 ;;		wreg, status,2, status,0, cstack
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3854 ;;      Params:         0       0       0       0       0       0       0       0       0
  3855 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3857 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3858 ;;Total ram usage:        0 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; Hardware stack levels required when called:    2
  3861 ;; This function calls:
  3862 ;;		_LCD_Command
  3863 ;;		_MSdelay
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text25
  3870  00191E                     __ptext25:
  3871                           	callstack 0
  3872  00191E                     _LCD_Init:
  3873                           	callstack 28
  3874  00191E                     
  3875                           ;LCD_16x2_4bit_mode.c: 10:     TRISD = 0;
  3876  00191E  0E00               	movlw	0
  3877  001920  6E95               	movwf	149,c	;volatile
  3878  001922                     
  3879                           ;LCD_16x2_4bit_mode.c: 11:     MSdelay(20);
  3880  001922  0E00               	movlw	0
  3881  001924  6E02               	movwf	(MSdelay@val+1)^0,c
  3882  001926  0E14               	movlw	20
  3883  001928  6E01               	movwf	MSdelay@val^0,c
  3884  00192A  EC56  F00B         	call	_MSdelay	;wreg free
  3885  00192E                     
  3886                           ;LCD_16x2_4bit_mode.c: 12:     LCD_Command(0x02);
  3887  00192E  0E02               	movlw	2
  3888  001930  EC30  F00B         	call	_LCD_Command
  3889  001934                     
  3890                           ;LCD_16x2_4bit_mode.c: 14:     LCD_Command(0x28);
  3891  001934  0E28               	movlw	40
  3892  001936  EC30  F00B         	call	_LCD_Command
  3893  00193A                     
  3894                           ;LCD_16x2_4bit_mode.c: 16:  LCD_Command(0x01);
  3895  00193A  0E01               	movlw	1
  3896  00193C  EC30  F00B         	call	_LCD_Command
  3897  001940                     
  3898                           ;LCD_16x2_4bit_mode.c: 17:     LCD_Command(0x0c);
  3899  001940  0E0C               	movlw	12
  3900  001942  EC30  F00B         	call	_LCD_Command
  3901  001946                     
  3902                           ;LCD_16x2_4bit_mode.c: 18:  LCD_Command(0x06);
  3903  001946  0E06               	movlw	6
  3904  001948  EC30  F00B         	call	_LCD_Command
  3905  00194C  0012               	return		;funcret
  3906  00194E                     __end_of_LCD_Init:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function _LCD_Clear *****************
  3910 ;; Defined at:
  3911 ;;		line 82 in file "LCD_16x2_4bit_mode.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3928 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3929 ;;Total ram usage:        0 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    2
  3932 ;; This function calls:
  3933 ;;		_LCD_Command
  3934 ;;		_MSdelay
  3935 ;; This function is called by:
  3936 ;;		_main
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text26
  3941  001A4E                     __ptext26:
  3942                           	callstack 0
  3943  001A4E                     _LCD_Clear:
  3944                           	callstack 28
  3945  001A4E                     
  3946                           ;LCD_16x2_4bit_mode.c: 84:     LCD_Command(0x01);
  3947  001A4E  0E01               	movlw	1
  3948  001A50  EC30  F00B         	call	_LCD_Command
  3949                           
  3950                           ;LCD_16x2_4bit_mode.c: 85:     MSdelay(3);
  3951  001A54  0E00               	movlw	0
  3952  001A56  6E02               	movwf	(MSdelay@val+1)^0,c
  3953  001A58  0E03               	movlw	3
  3954  001A5A  6E01               	movwf	MSdelay@val^0,c
  3955  001A5C  EC56  F00B         	call	_MSdelay	;wreg free
  3956  001A60  0012               	return		;funcret
  3957  001A62                     __end_of_LCD_Clear:
  3958                           	callstack 0
  3959                           
  3960 ;; *************** function _LCD_Command *****************
  3961 ;; Defined at:
  3962 ;;		line 21 in file "LCD_16x2_4bit_mode.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  cmd             1    wreg     unsigned char 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  cmd             1    7[COMRAM] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3976 ;;      Params:         0       0       0       0       0       0       0       0       0
  3977 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3978 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3979 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3980 ;;Total ram usage:        2 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    1
  3983 ;; This function calls:
  3984 ;;		_MSdelay
  3985 ;; This function is called by:
  3986 ;;		_LCD_Init
  3987 ;;		_LCD_String_xy
  3988 ;;		_LCD_Clear
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text27
  3993  001660                     __ptext27:
  3994                           	callstack 0
  3995  001660                     _LCD_Command:
  3996                           	callstack 28
  3997                           
  3998                           ;incstack = 0
  3999                           ;LCD_Command@cmd stored from wreg
  4000  001660  6E08               	movwf	LCD_Command@cmd^0,c
  4001  001662                     
  4002                           ;LCD_16x2_4bit_mode.c: 21: void LCD_Command(unsigned char cmd );LCD_16x2_4bit_mode.c: 22
      +                          : {;LCD_16x2_4bit_mode.c: 23:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
  4003  001662  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  4004  001666  0EF0               	movlw	240
  4005  001668  1607               	andwf	??_LCD_Command^0,f,c
  4006  00166A  508C               	movf	140,w,c	;volatile
  4007  00166C  0B0F               	andlw	15
  4008  00166E  1007               	iorwf	??_LCD_Command^0,w,c
  4009  001670  6E8C               	movwf	140,c	;volatile
  4010  001672                     
  4011                           ;LCD_16x2_4bit_mode.c: 24:  LATD2 = 0;
  4012  001672  948C               	bcf	3980,2,c	;volatile
  4013  001674                     
  4014                           ;LCD_16x2_4bit_mode.c: 25:  LATD3 = 1;
  4015  001674  868C               	bsf	3980,3,c	;volatile
  4016  001676                     
  4017                           ;LCD_16x2_4bit_mode.c: 26:  __nop();
  4018  001676  F000               	nop	
  4019  001678                     
  4020                           ;LCD_16x2_4bit_mode.c: 27:  LATD3 = 0;
  4021  001678  968C               	bcf	3980,3,c	;volatile
  4022  00167A                     
  4023                           ;LCD_16x2_4bit_mode.c: 28:  MSdelay(1);
  4024  00167A  0E00               	movlw	0
  4025  00167C  6E02               	movwf	(MSdelay@val+1)^0,c
  4026  00167E  0E01               	movlw	1
  4027  001680  6E01               	movwf	MSdelay@val^0,c
  4028  001682  EC56  F00B         	call	_MSdelay	;wreg free
  4029  001686                     
  4030                           ;LCD_16x2_4bit_mode.c: 29:     LATD = (LATD & 0x0f) | (cmd<<4);
  4031  001686  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  4032  00168A  3A07               	swapf	??_LCD_Command^0,f,c
  4033  00168C  0EF0               	movlw	240
  4034  00168E  1607               	andwf	??_LCD_Command^0,f,c
  4035  001690  508C               	movf	140,w,c	;volatile
  4036  001692  0B0F               	andlw	15
  4037  001694  1007               	iorwf	??_LCD_Command^0,w,c
  4038  001696  6E8C               	movwf	140,c	;volatile
  4039  001698                     
  4040                           ;LCD_16x2_4bit_mode.c: 30:  LATD3 = 1;
  4041  001698  868C               	bsf	3980,3,c	;volatile
  4042  00169A                     
  4043                           ;LCD_16x2_4bit_mode.c: 31:  __nop();
  4044  00169A  F000               	nop	
  4045  00169C                     
  4046                           ;LCD_16x2_4bit_mode.c: 32:  LATD3 = 0;
  4047  00169C  968C               	bcf	3980,3,c	;volatile
  4048                           
  4049                           ;LCD_16x2_4bit_mode.c: 33:  MSdelay(3);
  4050  00169E  0E00               	movlw	0
  4051  0016A0  6E02               	movwf	(MSdelay@val+1)^0,c
  4052  0016A2  0E03               	movlw	3
  4053  0016A4  6E01               	movwf	MSdelay@val^0,c
  4054  0016A6  EC56  F00B         	call	_MSdelay	;wreg free
  4055  0016AA  0012               	return		;funcret
  4056  0016AC                     __end_of_LCD_Command:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _MSdelay *****************
  4060 ;; Defined at:
  4061 ;;		line 88 in file "LCD_16x2_4bit_mode.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  val             2    0[COMRAM] unsigned int 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  j               2    4[COMRAM] unsigned int 
  4066 ;;  i               2    2[COMRAM] unsigned int 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4076 ;;      Params:         2       0       0       0       0       0       0       0       0
  4077 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4079 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4080 ;;Total ram usage:        6 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_main
  4086 ;;		_LCD_Init
  4087 ;;		_LCD_Command
  4088 ;;		_LCD_Char
  4089 ;;		_LCD_Clear
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text28
  4094  0016AC                     __ptext28:
  4095                           	callstack 0
  4096  0016AC                     _MSdelay:
  4097                           	callstack 30
  4098  0016AC                     
  4099                           ;LCD_16x2_4bit_mode.c: 88: void MSdelay(unsigned int val);LCD_16x2_4bit_mode.c: 89: {;LC
      +                          D_16x2_4bit_mode.c: 90:  unsigned int i,j;;LCD_16x2_4bit_mode.c: 91:  for(i=0;i<val;i++)
  4100  0016AC  0E00               	movlw	0
  4101  0016AE  6E04               	movwf	(MSdelay@i+1)^0,c
  4102  0016B0  0E00               	movlw	0
  4103  0016B2  6E03               	movwf	MSdelay@i^0,c
  4104  0016B4  EF6F  F00B         	goto	l1821
  4105  0016B8                     l1809:
  4106                           
  4107                           ;LCD_16x2_4bit_mode.c: 92:      for(j=0;j<165;j++);
  4108  0016B8  0E00               	movlw	0
  4109  0016BA  6E06               	movwf	(MSdelay@j+1)^0,c
  4110  0016BC  0E00               	movlw	0
  4111  0016BE  6E05               	movwf	MSdelay@j^0,c
  4112  0016C0                     l1815:
  4113  0016C0  4A05               	infsnz	MSdelay@j^0,f,c
  4114  0016C2  2A06               	incf	(MSdelay@j+1)^0,f,c
  4115  0016C4  5006               	movf	(MSdelay@j+1)^0,w,c
  4116  0016C6  E109               	bnz	u1090
  4117  0016C8  0EA5               	movlw	165
  4118  0016CA  5C05               	subwf	MSdelay@j^0,w,c
  4119  0016CC  A0D8               	btfss	status,0,c
  4120  0016CE  EF6B  F00B         	goto	u1091
  4121  0016D2  EF6D  F00B         	goto	u1090
  4122  0016D6                     u1091:
  4123  0016D6  EF60  F00B         	goto	l1815
  4124  0016DA                     u1090:
  4125  0016DA  4A03               	infsnz	MSdelay@i^0,f,c
  4126  0016DC  2A04               	incf	(MSdelay@i+1)^0,f,c
  4127  0016DE                     l1821:
  4128  0016DE  5001               	movf	MSdelay@val^0,w,c
  4129  0016E0  5C03               	subwf	MSdelay@i^0,w,c
  4130  0016E2  5002               	movf	(MSdelay@val+1)^0,w,c
  4131  0016E4  5804               	subwfb	(MSdelay@i+1)^0,w,c
  4132  0016E6  A0D8               	btfss	status,0,c
  4133  0016E8  EF78  F00B         	goto	u1101
  4134  0016EC  EF7A  F00B         	goto	u1100
  4135  0016F0                     u1101:
  4136  0016F0  EF5C  F00B         	goto	l1809
  4137  0016F4                     u1100:
  4138  0016F4  0012               	return		;funcret
  4139  0016F6                     __end_of_MSdelay:
  4140                           	callstack 0
  4141                           
  4142 ;; *************** function _I2C_Stop *****************
  4143 ;; Defined at:
  4144 ;;		line 93 in file "PIC18F4550_I2C_Source_File.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      unsigned char 
  4151 ;; Registers used:
  4152 ;;		wreg
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_main
  4168 ;;		_RTC_Clock_Write
  4169 ;;		_I2C_Start_Wait
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text29
  4174  001A62                     __ptext29:
  4175                           	callstack 0
  4176  001A62                     _I2C_Stop:
  4177                           	callstack 30
  4178  001A62                     
  4179                           ;PIC18F4550_I2C_Source_File.c: 95:     PEN = 1;
  4180  001A62  84C5               	bsf	4037,2,c	;volatile
  4181  001A64                     l239:
  4182  001A64  B4C5               	btfsc	4037,2,c	;volatile
  4183  001A66  EF37  F00D         	goto	u1581
  4184  001A6A  EF39  F00D         	goto	u1580
  4185  001A6E                     u1581:
  4186  001A6E  EF32  F00D         	goto	l239
  4187  001A72                     u1580:
  4188  001A72                     
  4189                           ;PIC18F4550_I2C_Source_File.c: 97:     if(!SSPSTATbits.P);
  4190  001A72  50C7               	movf	199,w,c	;volatile
  4191  001A74  0012               	return		;funcret
  4192  001A76                     __end_of_I2C_Stop:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _I2C_Init *****************
  4196 ;; Defined at:
  4197 ;;		line 29 in file "PIC18F4550_I2C_Source_File.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4214 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4215 ;;Total ram usage:        0 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_main
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text30
  4225  001A0C                     __ptext30:
  4226                           	callstack 0
  4227  001A0C                     _I2C_Init:
  4228                           	callstack 30
  4229  001A0C                     
  4230                           ;PIC18F4550_I2C_Source_File.c: 31:     TRISB0=1;
  4231  001A0C  8093               	bsf	3987,0,c	;volatile
  4232                           
  4233                           ;PIC18F4550_I2C_Source_File.c: 32:  TRISB1=1;
  4234  001A0E  8293               	bsf	3987,1,c	;volatile
  4235  001A10                     
  4236                           ;PIC18F4550_I2C_Source_File.c: 33:  SSPSTAT=80;
  4237  001A10  0E50               	movlw	80
  4238  001A12  6EC7               	movwf	199,c	;volatile
  4239                           
  4240                           ;PIC18F4550_I2C_Source_File.c: 34:     SSPCON1=0x28;
  4241  001A14  0E28               	movlw	40
  4242  001A16  6EC6               	movwf	198,c	;volatile
  4243                           
  4244                           ;PIC18F4550_I2C_Source_File.c: 36:  SSPCON2=0;
  4245  001A18  0E00               	movlw	0
  4246  001A1A  6EC5               	movwf	197,c	;volatile
  4247                           
  4248                           ;PIC18F4550_I2C_Source_File.c: 37:     SSPADD=((8000000/(4*100000))-1);
  4249  001A1C  0E13               	movlw	19
  4250  001A1E  6EC8               	movwf	200,c	;volatile
  4251  001A20                     
  4252                           ;PIC18F4550_I2C_Source_File.c: 38:     SSPIE=1;
  4253  001A20  869D               	bsf	3997,3,c	;volatile
  4254  001A22                     
  4255                           ;PIC18F4550_I2C_Source_File.c: 39:     SSPIF=0;
  4256  001A22  969E               	bcf	3998,3,c	;volatile
  4257  001A24  0012               	return		;funcret
  4258  001A26                     __end_of_I2C_Init:
  4259                           	callstack 0
  4260                           
  4261 ;; *************** function _Dec2Bcd *****************
  4262 ;; Defined at:
  4263 ;;		line 52 in file "RTC.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  dec             2    8[COMRAM] int 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  bdc             2   12[COMRAM] int 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  2    8[COMRAM] int 
  4270 ;; Registers used:
  4271 ;;		wreg, status,2, status,0, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4277 ;;      Params:         2       0       0       0       0       0       0       0       0
  4278 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4279 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4280 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4281 ;;Total ram usage:        6 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    1
  4284 ;; This function calls:
  4285 ;;		___awdiv
  4286 ;;		___awmod
  4287 ;; This function is called by:
  4288 ;;		_main
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text31
  4293  00156A                     __ptext31:
  4294                           	callstack 0
  4295  00156A                     _Dec2Bcd:
  4296                           	callstack 29
  4297  00156A                     
  4298                           ;RTC.c: 53:     int bdc;;RTC.c: 54:     bdc = ((dec/10) << 4) + (dec % 10);
  4299  00156A  C009  F001         	movff	Dec2Bcd@dec,___awdiv@dividend
  4300  00156E  C00A  F002         	movff	Dec2Bcd@dec+1,___awdiv@dividend+1
  4301  001572  0E00               	movlw	0
  4302  001574  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4303  001576  0E0A               	movlw	10
  4304  001578  6E03               	movwf	___awdiv@divisor^0,c
  4305  00157A  EC0B  F009         	call	___awdiv	;wreg free
  4306  00157E  C001  F00B         	movff	?___awdiv,??_Dec2Bcd
  4307  001582  C002  F00C         	movff	?___awdiv+1,??_Dec2Bcd+1
  4308  001586  3A0B               	swapf	??_Dec2Bcd^0,f,c
  4309  001588  3A0C               	swapf	(??_Dec2Bcd+1)^0,f,c
  4310  00158A  0EF0               	movlw	240
  4311  00158C  160C               	andwf	(??_Dec2Bcd+1)^0,f,c
  4312  00158E  500B               	movf	??_Dec2Bcd^0,w,c
  4313  001590  0B0F               	andlw	15
  4314  001592  120C               	iorwf	(??_Dec2Bcd+1)^0,f,c
  4315  001594  0EF0               	movlw	240
  4316  001596  160B               	andwf	??_Dec2Bcd^0,f,c
  4317  001598  C009  F001         	movff	Dec2Bcd@dec,___awmod@dividend
  4318  00159C  C00A  F002         	movff	Dec2Bcd@dec+1,___awmod@dividend+1
  4319  0015A0  0E00               	movlw	0
  4320  0015A2  6E04               	movwf	(___awmod@divisor+1)^0,c
  4321  0015A4  0E0A               	movlw	10
  4322  0015A6  6E03               	movwf	___awmod@divisor^0,c
  4323  0015A8  ECCE  F009         	call	___awmod	;wreg free
  4324  0015AC  5001               	movf	?___awmod^0,w,c
  4325  0015AE  240B               	addwf	??_Dec2Bcd^0,w,c
  4326  0015B0  6E0D               	movwf	Dec2Bcd@bdc^0,c
  4327  0015B2  5002               	movf	(?___awmod+1)^0,w,c
  4328  0015B4  200C               	addwfc	(??_Dec2Bcd+1)^0,w,c
  4329  0015B6  6E0E               	movwf	(Dec2Bcd@bdc+1)^0,c
  4330  0015B8                     
  4331                           ;RTC.c: 55:     return bdc;
  4332  0015B8  C00D  F009         	movff	Dec2Bcd@bdc,?_Dec2Bcd
  4333  0015BC  C00E  F00A         	movff	Dec2Bcd@bdc+1,?_Dec2Bcd+1
  4334  0015C0  0012               	return		;funcret
  4335  0015C2                     __end_of_Dec2Bcd:
  4336                           	callstack 0
  4337                           
  4338 ;; *************** function ___awmod *****************
  4339 ;; Defined at:
  4340 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  dividend        2    0[COMRAM] int 
  4343 ;;  divisor         2    2[COMRAM] int 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  sign            1    5[COMRAM] unsigned char 
  4346 ;;  counter         1    4[COMRAM] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  2    0[COMRAM] int 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4356 ;;      Params:         4       0       0       0       0       0       0       0       0
  4357 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4359 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4360 ;;Total ram usage:        6 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_Dec2Bcd
  4366 ;;		_main
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text32
  4371  00139C                     __ptext32:
  4372                           	callstack 0
  4373  00139C                     ___awmod:
  4374                           	callstack 30
  4375  00139C  0E00               	movlw	0
  4376  00139E  6E06               	movwf	___awmod@sign^0,c
  4377  0013A0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4378  0013A2  EFD7  F009         	goto	u1510
  4379  0013A6  EFD5  F009         	goto	u1511
  4380  0013AA                     u1511:
  4381  0013AA  EFDD  F009         	goto	l2095
  4382  0013AE                     u1510:
  4383  0013AE  6C01               	negf	___awmod@dividend^0,c
  4384  0013B0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4385  0013B2  B0D8               	btfsc	status,0,c
  4386  0013B4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4387  0013B6  0E01               	movlw	1
  4388  0013B8  6E06               	movwf	___awmod@sign^0,c
  4389  0013BA                     l2095:
  4390  0013BA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4391  0013BC  EFE4  F009         	goto	u1520
  4392  0013C0  EFE2  F009         	goto	u1521
  4393  0013C4                     u1521:
  4394  0013C4  EFE8  F009         	goto	l2099
  4395  0013C8                     u1520:
  4396  0013C8  6C03               	negf	___awmod@divisor^0,c
  4397  0013CA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4398  0013CC  B0D8               	btfsc	status,0,c
  4399  0013CE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4400  0013D0                     l2099:
  4401  0013D0  5003               	movf	___awmod@divisor^0,w,c
  4402  0013D2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4403  0013D4  B4D8               	btfsc	status,2,c
  4404  0013D6  EFEF  F009         	goto	u1531
  4405  0013DA  EFF1  F009         	goto	u1530
  4406  0013DE                     u1531:
  4407  0013DE  EF15  F00A         	goto	l2115
  4408  0013E2                     u1530:
  4409  0013E2  0E01               	movlw	1
  4410  0013E4  6E05               	movwf	___awmod@counter^0,c
  4411  0013E6  EFF9  F009         	goto	l2105
  4412  0013EA                     l2103:
  4413  0013EA  90D8               	bcf	status,0,c
  4414  0013EC  3603               	rlcf	___awmod@divisor^0,f,c
  4415  0013EE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4416  0013F0  2A05               	incf	___awmod@counter^0,f,c
  4417  0013F2                     l2105:
  4418  0013F2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4419  0013F4  EFFE  F009         	goto	u1541
  4420  0013F8  EF00  F00A         	goto	u1540
  4421  0013FC                     u1541:
  4422  0013FC  EFF5  F009         	goto	l2103
  4423  001400                     u1540:
  4424  001400                     l2107:
  4425  001400  5003               	movf	___awmod@divisor^0,w,c
  4426  001402  5C01               	subwf	___awmod@dividend^0,w,c
  4427  001404  5004               	movf	(___awmod@divisor+1)^0,w,c
  4428  001406  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4429  001408  A0D8               	btfss	status,0,c
  4430  00140A  EF09  F00A         	goto	u1551
  4431  00140E  EF0B  F00A         	goto	u1550
  4432  001412                     u1551:
  4433  001412  EF0F  F00A         	goto	l2111
  4434  001416                     u1550:
  4435  001416  5003               	movf	___awmod@divisor^0,w,c
  4436  001418  5E01               	subwf	___awmod@dividend^0,f,c
  4437  00141A  5004               	movf	(___awmod@divisor+1)^0,w,c
  4438  00141C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4439  00141E                     l2111:
  4440  00141E  90D8               	bcf	status,0,c
  4441  001420  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4442  001422  3203               	rrcf	___awmod@divisor^0,f,c
  4443  001424  2E05               	decfsz	___awmod@counter^0,f,c
  4444  001426  EF00  F00A         	goto	l2107
  4445  00142A                     l2115:
  4446  00142A  5006               	movf	___awmod@sign^0,w,c
  4447  00142C  B4D8               	btfsc	status,2,c
  4448  00142E  EF1B  F00A         	goto	u1561
  4449  001432  EF1D  F00A         	goto	u1560
  4450  001436                     u1561:
  4451  001436  EF21  F00A         	goto	l2119
  4452  00143A                     u1560:
  4453  00143A  6C01               	negf	___awmod@dividend^0,c
  4454  00143C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4455  00143E  B0D8               	btfsc	status,0,c
  4456  001440  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4457  001442                     l2119:
  4458  001442  C001  F001         	movff	___awmod@dividend,?___awmod
  4459  001446  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4460  00144A  0012               	return		;funcret
  4461  00144C                     __end_of___awmod:
  4462                           	callstack 0
  4463                           
  4464 ;; *************** function ___awdiv *****************
  4465 ;; Defined at:
  4466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  dividend        2    0[COMRAM] int 
  4469 ;;  divisor         2    2[COMRAM] int 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  quotient        2    6[COMRAM] int 
  4472 ;;  sign            1    5[COMRAM] unsigned char 
  4473 ;;  counter         1    4[COMRAM] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  2    0[COMRAM] int 
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4483 ;;      Params:         4       0       0       0       0       0       0       0       0
  4484 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4486 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4487 ;;Total ram usage:        8 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_Dec2Bcd
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text33
  4497  001216                     __ptext33:
  4498                           	callstack 0
  4499  001216                     ___awdiv:
  4500                           	callstack 29
  4501  001216  0E00               	movlw	0
  4502  001218  6E06               	movwf	___awdiv@sign^0,c
  4503  00121A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4504  00121C  EF14  F009         	goto	u1450
  4505  001220  EF12  F009         	goto	u1451
  4506  001224                     u1451:
  4507  001224  EF1A  F009         	goto	l2051
  4508  001228                     u1450:
  4509  001228  6C03               	negf	___awdiv@divisor^0,c
  4510  00122A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4511  00122C  B0D8               	btfsc	status,0,c
  4512  00122E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4513  001230  0E01               	movlw	1
  4514  001232  6E06               	movwf	___awdiv@sign^0,c
  4515  001234                     l2051:
  4516  001234  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4517  001236  EF21  F009         	goto	u1460
  4518  00123A  EF1F  F009         	goto	u1461
  4519  00123E                     u1461:
  4520  00123E  EF27  F009         	goto	l2057
  4521  001242                     u1460:
  4522  001242  6C01               	negf	___awdiv@dividend^0,c
  4523  001244  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4524  001246  B0D8               	btfsc	status,0,c
  4525  001248  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4526  00124A  0E01               	movlw	1
  4527  00124C  1A06               	xorwf	___awdiv@sign^0,f,c
  4528  00124E                     l2057:
  4529  00124E  0E00               	movlw	0
  4530  001250  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4531  001252  0E00               	movlw	0
  4532  001254  6E07               	movwf	___awdiv@quotient^0,c
  4533  001256  5003               	movf	___awdiv@divisor^0,w,c
  4534  001258  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4535  00125A  B4D8               	btfsc	status,2,c
  4536  00125C  EF32  F009         	goto	u1471
  4537  001260  EF34  F009         	goto	u1470
  4538  001264                     u1471:
  4539  001264  EF5C  F009         	goto	l2079
  4540  001268                     u1470:
  4541  001268  0E01               	movlw	1
  4542  00126A  6E05               	movwf	___awdiv@counter^0,c
  4543  00126C  EF3C  F009         	goto	l2065
  4544  001270                     l2063:
  4545  001270  90D8               	bcf	status,0,c
  4546  001272  3603               	rlcf	___awdiv@divisor^0,f,c
  4547  001274  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4548  001276  2A05               	incf	___awdiv@counter^0,f,c
  4549  001278                     l2065:
  4550  001278  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4551  00127A  EF41  F009         	goto	u1481
  4552  00127E  EF43  F009         	goto	u1480
  4553  001282                     u1481:
  4554  001282  EF38  F009         	goto	l2063
  4555  001286                     u1480:
  4556  001286                     l2067:
  4557  001286  90D8               	bcf	status,0,c
  4558  001288  3607               	rlcf	___awdiv@quotient^0,f,c
  4559  00128A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4560  00128C  5003               	movf	___awdiv@divisor^0,w,c
  4561  00128E  5C01               	subwf	___awdiv@dividend^0,w,c
  4562  001290  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4563  001292  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4564  001294  A0D8               	btfss	status,0,c
  4565  001296  EF4F  F009         	goto	u1491
  4566  00129A  EF51  F009         	goto	u1490
  4567  00129E                     u1491:
  4568  00129E  EF56  F009         	goto	l2075
  4569  0012A2                     u1490:
  4570  0012A2  5003               	movf	___awdiv@divisor^0,w,c
  4571  0012A4  5E01               	subwf	___awdiv@dividend^0,f,c
  4572  0012A6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4573  0012A8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4574  0012AA  8007               	bsf	___awdiv@quotient^0,0,c
  4575  0012AC                     l2075:
  4576  0012AC  90D8               	bcf	status,0,c
  4577  0012AE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4578  0012B0  3203               	rrcf	___awdiv@divisor^0,f,c
  4579  0012B2  2E05               	decfsz	___awdiv@counter^0,f,c
  4580  0012B4  EF43  F009         	goto	l2067
  4581  0012B8                     l2079:
  4582  0012B8  5006               	movf	___awdiv@sign^0,w,c
  4583  0012BA  B4D8               	btfsc	status,2,c
  4584  0012BC  EF62  F009         	goto	u1501
  4585  0012C0  EF64  F009         	goto	u1500
  4586  0012C4                     u1501:
  4587  0012C4  EF68  F009         	goto	l2083
  4588  0012C8                     u1500:
  4589  0012C8  6C07               	negf	___awdiv@quotient^0,c
  4590  0012CA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4591  0012CC  B0D8               	btfsc	status,0,c
  4592  0012CE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4593  0012D0                     l2083:
  4594  0012D0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4595  0012D4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4596  0012D8  0012               	return		;funcret
  4597  0012DA                     __end_of___awdiv:
  4598                           	callstack 0
  4599                           
  4600 ;; *************** function _Bcd2Dec *****************
  4601 ;; Defined at:
  4602 ;;		line 58 in file "RTC.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  bcd             2    6[COMRAM] int 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  dec             2   11[COMRAM] int 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  2    6[COMRAM] int 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4616 ;;      Params:         2       0       0       0       0       0       0       0       0
  4617 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4618 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4619 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4620 ;;Total ram usage:        7 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    1
  4623 ;; This function calls:
  4624 ;;		___wmul
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text34
  4631  001780                     __ptext34:
  4632                           	callstack 0
  4633  001780                     _Bcd2Dec:
  4634                           	callstack 29
  4635  001780                     
  4636                           ;RTC.c: 59:     int dec;;RTC.c: 60:     dec = bcd + ((bcd & 0x70) >> 4) * 10;
  4637  001780  C007  F009         	movff	Bcd2Dec@bcd,??_Bcd2Dec
  4638  001784  C008  F00A         	movff	Bcd2Dec@bcd+1,??_Bcd2Dec+1
  4639  001788  0E04               	movlw	4
  4640  00178A  6E0B               	movwf	(??_Bcd2Dec+2)^0,c
  4641  00178C                     u1595:
  4642  00178C  340A               	rlcf	(??_Bcd2Dec+1)^0,w,c
  4643  00178E  320A               	rrcf	(??_Bcd2Dec+1)^0,f,c
  4644  001790  3209               	rrcf	??_Bcd2Dec^0,f,c
  4645  001792  2E0B               	decfsz	(??_Bcd2Dec+2)^0,f,c
  4646  001794  EFC6  F00B         	goto	u1595
  4647  001798  0E07               	movlw	7
  4648  00179A  1409               	andwf	??_Bcd2Dec^0,w,c
  4649  00179C  6E01               	movwf	___wmul@multiplier^0,c
  4650  00179E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4651  0017A0  0E00               	movlw	0
  4652  0017A2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4653  0017A4  0E0A               	movlw	10
  4654  0017A6  6E03               	movwf	___wmul@multiplicand^0,c
  4655  0017A8  ECD5  F00C         	call	___wmul	;wreg free
  4656  0017AC  5007               	movf	Bcd2Dec@bcd^0,w,c
  4657  0017AE  2401               	addwf	?___wmul^0,w,c
  4658  0017B0  6E0C               	movwf	Bcd2Dec@dec^0,c
  4659  0017B2  5008               	movf	(Bcd2Dec@bcd+1)^0,w,c
  4660  0017B4  2002               	addwfc	(?___wmul+1)^0,w,c
  4661  0017B6  6E0D               	movwf	(Bcd2Dec@dec+1)^0,c
  4662  0017B8                     
  4663                           ;RTC.c: 61:     return dec;
  4664  0017B8  C00C  F007         	movff	Bcd2Dec@dec,?_Bcd2Dec
  4665  0017BC  C00D  F008         	movff	Bcd2Dec@dec+1,?_Bcd2Dec+1
  4666  0017C0  0012               	return		;funcret
  4667  0017C2                     __end_of_Bcd2Dec:
  4668                           	callstack 0
  4669                           
  4670 ;; *************** function ___wmul *****************
  4671 ;; Defined at:
  4672 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  multiplier      2    0[COMRAM] unsigned int 
  4675 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  product         2    4[COMRAM] unsigned int 
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  2    0[COMRAM] unsigned int 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0, prodl, prodh
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4687 ;;      Params:         4       0       0       0       0       0       0       0       0
  4688 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4690 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4691 ;;Total ram usage:        6 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_Bcd2Dec
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text35
  4701  0019AA                     __ptext35:
  4702                           	callstack 0
  4703  0019AA                     ___wmul:
  4704                           	callstack 29
  4705  0019AA  5001               	movf	___wmul@multiplier^0,w,c
  4706  0019AC  0203               	mulwf	___wmul@multiplicand^0,c
  4707  0019AE  CFF3 F005          	movff	prodl,___wmul@product
  4708  0019B2  CFF4 F006          	movff	prodh,___wmul@product+1
  4709  0019B6  5001               	movf	___wmul@multiplier^0,w,c
  4710  0019B8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4711  0019BA  50F3               	movf	243,w,c
  4712  0019BC  2606               	addwf	(___wmul@product+1)^0,f,c
  4713  0019BE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4714  0019C0  0203               	mulwf	___wmul@multiplicand^0,c
  4715  0019C2  50F3               	movf	243,w,c
  4716  0019C4  2606               	addwf	(___wmul@product+1)^0,f,c
  4717  0019C6  C005  F001         	movff	___wmul@product,?___wmul
  4718  0019CA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4719  0019CE  0012               	return		;funcret
  4720  0019D0                     __end_of___wmul:
  4721                           	callstack 0
  4722                           
  4723                           	psect	rparam
  4724  0000                     
  4725                           	psect	idloc
  4726                           
  4727                           ;Config register IDLOC0 @ 0x200000
  4728                           ;	unspecified, using default values
  4729  200000                     	org	2097152
  4730  200000  FF                 	db	255
  4731                           
  4732                           ;Config register IDLOC1 @ 0x200001
  4733                           ;	unspecified, using default values
  4734  200001                     	org	2097153
  4735  200001  FF                 	db	255
  4736                           
  4737                           ;Config register IDLOC2 @ 0x200002
  4738                           ;	unspecified, using default values
  4739  200002                     	org	2097154
  4740  200002  FF                 	db	255
  4741                           
  4742                           ;Config register IDLOC3 @ 0x200003
  4743                           ;	unspecified, using default values
  4744  200003                     	org	2097155
  4745  200003  FF                 	db	255
  4746                           
  4747                           ;Config register IDLOC4 @ 0x200004
  4748                           ;	unspecified, using default values
  4749  200004                     	org	2097156
  4750  200004  FF                 	db	255
  4751                           
  4752                           ;Config register IDLOC5 @ 0x200005
  4753                           ;	unspecified, using default values
  4754  200005                     	org	2097157
  4755  200005  FF                 	db	255
  4756                           
  4757                           ;Config register IDLOC6 @ 0x200006
  4758                           ;	unspecified, using default values
  4759  200006                     	org	2097158
  4760  200006  FF                 	db	255
  4761                           
  4762                           ;Config register IDLOC7 @ 0x200007
  4763                           ;	unspecified, using default values
  4764  200007                     	org	2097159
  4765  200007  FF                 	db	255
  4766                           
  4767                           	psect	config
  4768                           
  4769                           ;Config register CONFIG1L @ 0x300000
  4770                           ;	PLL Prescaler Selection bits
  4771                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  4772                           ;	System Clock Postscaler Selection bits
  4773                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4774                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4775                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4776  300000                     	org	3145728
  4777  300000  01                 	db	1
  4778                           
  4779                           ;Config register CONFIG1H @ 0x300001
  4780                           ;	Oscillator Selection bits
  4781                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4782                           ;	Fail-Safe Clock Monitor Enable bit
  4783                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4784                           ;	Internal/External Oscillator Switchover bit
  4785                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4786  300001                     	org	3145729
  4787  300001  09                 	db	9
  4788                           
  4789                           ;Config register CONFIG2L @ 0x300002
  4790                           ;	Power-up Timer Enable bit
  4791                           ;	PWRT = OFF, PWRT disabled
  4792                           ;	Brown-out Reset Enable bits
  4793                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4794                           ;	Brown-out Reset Voltage bits
  4795                           ;	BORV = 3, Minimum setting 2.05V
  4796                           ;	USB Voltage Regulator Enable bit
  4797                           ;	VREGEN = OFF, USB voltage regulator disabled
  4798  300002                     	org	3145730
  4799  300002  1F                 	db	31
  4800                           
  4801                           ;Config register CONFIG2H @ 0x300003
  4802                           ;	Watchdog Timer Enable bit
  4803                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4804                           ;	Watchdog Timer Postscale Select bits
  4805                           ;	WDTPS = 32768, 1:32768
  4806  300003                     	org	3145731
  4807  300003  1E                 	db	30
  4808                           
  4809                           ; Padding undefined space
  4810  300004                     	org	3145732
  4811  300004  FF                 	db	255
  4812                           
  4813                           ;Config register CONFIG3H @ 0x300005
  4814                           ;	CCP2 MUX bit
  4815                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4816                           ;	PORTB A/D Enable bit
  4817                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4818                           ;	Low-Power Timer 1 Oscillator Enable bit
  4819                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4820                           ;	MCLR Pin Enable bit
  4821                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4822  300005                     	org	3145733
  4823  300005  01                 	db	1
  4824                           
  4825                           ;Config register CONFIG4L @ 0x300006
  4826                           ;	Stack Full/Underflow Reset Enable bit
  4827                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4828                           ;	Single-Supply ICSP Enable bit
  4829                           ;	LVP = OFF, Single-Supply ICSP disabled
  4830                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4831                           ;	ICPRT = OFF, ICPORT disabled
  4832                           ;	Extended Instruction Set Enable bit
  4833                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4834                           ;	Background Debugger Enable bit
  4835                           ;	DEBUG = 0x1, unprogrammed default
  4836  300006                     	org	3145734
  4837  300006  81                 	db	129
  4838                           
  4839                           ; Padding undefined space
  4840  300007                     	org	3145735
  4841  300007  FF                 	db	255
  4842                           
  4843                           ;Config register CONFIG5L @ 0x300008
  4844                           ;	Code Protection bit
  4845                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4846                           ;	Code Protection bit
  4847                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4848                           ;	Code Protection bit
  4849                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4850                           ;	Code Protection bit
  4851                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4852  300008                     	org	3145736
  4853  300008  0F                 	db	15
  4854                           
  4855                           ;Config register CONFIG5H @ 0x300009
  4856                           ;	Boot Block Code Protection bit
  4857                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4858                           ;	Data EEPROM Code Protection bit
  4859                           ;	CPD = OFF, Data EEPROM is not code-protected
  4860  300009                     	org	3145737
  4861  300009  C0                 	db	192
  4862                           
  4863                           ;Config register CONFIG6L @ 0x30000A
  4864                           ;	Write Protection bit
  4865                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4866                           ;	Write Protection bit
  4867                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4868                           ;	Write Protection bit
  4869                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4870                           ;	Write Protection bit
  4871                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4872  30000A                     	org	3145738
  4873  30000A  0F                 	db	15
  4874                           
  4875                           ;Config register CONFIG6H @ 0x30000B
  4876                           ;	Configuration Register Write Protection bit
  4877                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4878                           ;	Boot Block Write Protection bit
  4879                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4880                           ;	Data EEPROM Write Protection bit
  4881                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4882  30000B                     	org	3145739
  4883  30000B  E0                 	db	224
  4884                           
  4885                           ;Config register CONFIG7L @ 0x30000C
  4886                           ;	Table Read Protection bit
  4887                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4888                           ;	Table Read Protection bit
  4889                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4890                           ;	Table Read Protection bit
  4891                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4892                           ;	Table Read Protection bit
  4893                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4894  30000C                     	org	3145740
  4895  30000C  0F                 	db	15
  4896                           
  4897                           ;Config register CONFIG7H @ 0x30000D
  4898                           ;	Boot Block Table Read Protection bit
  4899                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4900  30000D                     	org	3145741
  4901  30000D  40                 	db	64
  4902                           tosu	equ	0xFFF
  4903                           tosh	equ	0xFFE
  4904                           tosl	equ	0xFFD
  4905                           stkptr	equ	0xFFC
  4906                           pclatu	equ	0xFFB
  4907                           pclath	equ	0xFFA
  4908                           pcl	equ	0xFF9
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           indf0	equ	0xFEF
  4916                           postinc0	equ	0xFEE
  4917                           postdec0	equ	0xFED
  4918                           preinc0	equ	0xFEC
  4919                           plusw0	equ	0xFEB
  4920                           fsr0h	equ	0xFEA
  4921                           fsr0l	equ	0xFE9
  4922                           wreg	equ	0xFE8
  4923                           indf1	equ	0xFE7
  4924                           postinc1	equ	0xFE6
  4925                           postdec1	equ	0xFE5
  4926                           preinc1	equ	0xFE4
  4927                           plusw1	equ	0xFE3
  4928                           fsr1h	equ	0xFE2
  4929                           fsr1l	equ	0xFE1
  4930                           bsr	equ	0xFE0
  4931                           indf2	equ	0xFDF
  4932                           postinc2	equ	0xFDE
  4933                           postdec2	equ	0xFDD
  4934                           preinc2	equ	0xFDC
  4935                           plusw2	equ	0xFDB
  4936                           fsr2h	equ	0xFDA
  4937                           fsr2l	equ	0xFD9
  4938                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     93     157
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[9]), STR_10(CODE[4]), STR_9(CODE[10]), STR_8(CODE[8]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[9]), STR_10(CODE[4]), STR_9(CODE[10]), STR_8(CODE[8]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[9]), STR_10(CODE[4]), STR_9(CODE[10]), STR_8(CODE[8]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1035_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@counters_min(BANK0[10]), main@hours(BANK0[10]), STR_2(CODE[3]), STR_1(CODE[3]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), main@secs(BANK0[10]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay
    _Dec2Bcd->___awdiv
    _Bcd2Dec->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                75    75      0   19515
                                             18 BANK0     75    75      0
                            _Bcd2Dec
                            _Dec2Bcd
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                     _RTC_Read_Clock
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    7623
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6056
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5701
                                             66 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4263
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    3112
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2    1397
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     820
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1596
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    1596
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     820
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     776
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dec2Bcd                                              6     4      2    1423
                                              8 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Bcd2Dec                                              7     5      2     622
                                              6 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bcd2Dec
     ___wmul
   _Dec2Bcd
     ___awdiv
     ___awmod
   _I2C_Init
   _I2C_Stop
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _RTC_Read_Clock
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Write
       _I2C_Ready
   ___awmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5D      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FC      20        0.0%
DATA                 0      0      FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 14 19:59:36 2020

                  __size_of_I2C_Ready 0012                    __size_of_I2C_Start 002E  
                        ?_LCD_Command 0001                           _SSPSTATbits 000FC7  
                  __size_of_I2C_Write 0022                                    l63 173A  
                                  l80 17C0                                    l77 15C0  
                                  l93 0ABC                                    l85 088A  
                        ___awdiv@sign 0006                   ___wmul@multiplicand 0003  
                         ?_LCD_String 0009                                   l120 194C  
                                 l200 1876                                   l203 1A24  
                                 l123 16AA                                   l140 1A60  
                                 l132 1568                                   l126 165E  
                                 l206 1A76                                   l230 1980  
                                 l223 1952                                   l208 1A84  
                                 l232 198E                                   l241 1A72  
                                 l137 1800                                   l209 1A86  
                                 l225 1960                                   l234 19A8  
                                 l243 1A74                                   l251 1A3E  
                                 l227 197A                                   l148 16F4  
                                 l260 1A38                                   l254 1A4C  
                                 l263 19CE                                   l239 1A64  
                                 l247 19F0                                   l257 1A2A  
                                 l507 144A                                   l195 1842  
                                 l197 1850                                   l199 1870  
                                 l494 12D8                                   l941 1612  
                                 l972 131E                                   l982 0CE0  
                                 l975 1360                                   l991 0D7C  
                                 l984 0CE8                                   l977 139A  
                                 _PEN 007E2A                                   u900 115E  
                                 u901 115A                                   u910 1170  
                                 u911 116C                                   u920 1198  
                                 u921 1194                                   u930 11CE  
                                 u931 11CA                                   u940 177E  
                                 u941 177A                                   u950 1910  
                                 u951 190C                                   u960 18A8  
                                 u961 18A2                                   u970 18AA  
                                 u980 12E8                                   u981 12E4  
                                 u990 130A                                   u991 1306  
                                 _Day 00D5                       __end_of_I2C_Ack 1A4E  
                                 _pad 12DA                                   _min 00D9  
                                 _sec 00DB                                   _run 00C7  
                        ___awmod@sign 0006                                   wreg 000FE8  
                         LCD_Char@dat 0008                                  l1020 14A4  
                                l1005 0F18                                  l1021 14AC  
                                l1030 18E6                                  l1014 114A  
                                l1007 0F7A                                  l1024 183C  
                                l2001 1864                                  l2011 1510  
                                l2003 186C                                  l2101 13E2  
                                l2021 1674                                  l2013 1534  
                                l2005 1874                                  l1045 1214  
                                l1053 177E                                  l1062 191C  
                                l2111 141E                                  l2103 13EA  
                                l2031 1698                                  l2023 1676  
                                l2015 1538                                  l1056 1A88  
                                l1072 150A                                  l2113 1424  
                                l2105 13F2                                  l2033 169A  
                                l2025 1678                                  l2017 1662  
                                l2009 150C                                  l2051 1234  
                                l2043 1216                                  l2107 1400  
                                l2115 142A                                  l2035 169C  
                                l2027 167A                                  l2019 1672  
                                l2131 16F8                                  l1067 1502  
                                l2123 144C                                  l2037 19AA  
                                l2061 1268                                  l2053 1242  
                                l2045 121A                                  l2117 143A  
                                l2109 1416                                  l2141 156A  
                                l2029 1686                                  l2133 170A  
                                l2125 1454                                  l2301 0ABE  
                                l2221 0840                                  l1078 18AE  
                                l2039 19C6                                  l2071 12A2  
                                l2063 1270                                  l2055 124A  
                                l2047 1228                                  l2119 1442  
                                l2143 15B8                                  l2135 171A  
                                l2127 1462                                  l2311 0B24  
                                l2303 0AD2                                  l2231 0862  
                                l2223 0844                                  l2081 12C8  
                                l2073 12AA                                  l2065 1278  
                                l2057 124E                                  l2049 1230  
                                l2153 1A0C                                  l2161 191E  
                                l2137 172A                                  l2129 1488  
                                l2321 0B76                                  l2313 0B46  
                                l2305 0AD8                                  l2241 089C  
                                l2233 086A                                  l2225 0848  
                                l2217 082C                                  l2147 1780  
                                l2083 12D0                                  l2075 12AC  
                                l2067 1286                                  l2059 1256  
                                l2091 13AE                                  l2155 1A10  
                                l2139 1A62                                  l2171 1940  
                                l2163 1922                                  l2331 0BB2  
                                l2323 0B86                                  l2315 0B4A  
                                l2307 0ADC                                  l2251 0932  
                                l2243 08A2                                  l2235 0872  
                                l2227 084C                                  l2219 0832  
                                l2149 17B8                                  l2077 12B2  
                                l2069 128C                                  l2093 13B6  
                                l2157 1A20                                  l2173 1946  
                                l2165 192E                                  l2181 17D4  
                                l2341 0C0A                                  l2333 0BB6  
                                l2325 0B8C                                  l2317 0B4E  
                                l2309 0B08                                  l2261 09A6  
                                l2253 0944                                  l2245 08A6  
                                l2237 087A                                  l2229 0858  
                                l2079 12B8                                  l2095 13BA  
                                l2087 139C                                  l2159 1A22  
                                l2175 1A4E                                  l2167 1934  
                                l2183 17DC                                  l2191 15C2  
                                l2351 0C8A                                  l2343 0C28  
                                l2335 0BCE                                  l2327 0BA0  
                                l2319 0B62                                  l2271 09F8  
                                l2263 09B8                                  l2255 094E  
                                l2247 08E2                                  l2239 0882  
                                l2097 13C8                                  l2089 13A0  
                                l2169 193A                                  l2185 17E6  
                                l2177 17C4                                  l1801 14E4  
                                l2193 15D4                                  l2345 0C46  
                                l2337 0BE2                                  l2329 0BB0  
                                l2353 0C96                                  l2273 0A16  
                                l2281 0A4A                                  l2265 09C4  
                                l2257 096A                                  l2249 091C  
                                l2099 13D0                                  l2187 17EE  
                                l2179 17C4                                  l1731 114C  
                                l1803 14F6                                  l2195 15DC  
                                l2347 0C6C                                  l2339 0BF6  
                                l2291 0A8E                                  l2275 0A34  
                                l2259 0988                                  l2267 09D4  
                                l2283 0A54                                  l1821 16DE  
                                l2189 17F4                                  l1741 11CE  
                                l1733 115E                                  l2197 15E4  
                                l2349 0C7E                                  l2293 0A98  
                                l2285 0A60                                  l2269 09DC  
                                l1815 16C0                                  l1807 16AC  
                                l1911 1628                                  l1823 1A76  
                                l1903 19EE                                  l1735 1170  
                                l1751 175E                                  l1831 0CD4  
                                l2199 1600                                  l2295 0AA0  
                                l2287 0A74                                  l1817 16C4  
                                l1809 16B8                                  l1921 164C  
                                l1913 162A                                  l1737 117A  
                                l1745 173C                                  l1753 18E8  
                                l1841 0D36                                  l1833 0CFE  
                                l1825 0CA8                                  l2289 0A82  
                                l2297 0AA4                                  l1819 16DA  
                                l1923 164E                                  l1915 162C  
                                l1907 1616                                  l1739 1198  
                                l1747 1748                                  l1755 18F4  
                                l1771 12FC                                  l1763 1878  
                                l1843 0D3C                                  l1835 0D06  
                                l1827 0CB8                                  l1931 0F7C  
                                l2299 0AB6                                  l1925 1650  
                                l1917 162E                                  l1909 1626  
                                l1749 175A                                  l1757 18F8  
                                l1781 1342                                  l1773 130A  
                                l1861 0E0E                                  l1853 0DB0  
                                l1845 0D44                                  l1837 0D26  
                                l1829 0CBA                                  l1941 0FE8  
                                l1933 0FA0                                  l1919 163A  
                                l1927 1A3A                                  l1759 1910  
                                l1783 136E                                  l1775 1316  
                                l1767 12DA                                  l1855 0DC2  
                                l1863 0E22                                  l1847 0D60  
                                l1871 0E9C                                  l1839 0D2E  
                                l1943 100C                                  l1935 0FAE  
                                l1929 1A26                                  l1793 1802  
                                l1785 1382                                  l1777 132A  
                                l1769 12E8                                  l1881 0F26  
                                l1873 0EB8                                  l1865 0E32  
                                l1849 0D70                                  l1945 1022  
                                l1953 10A8                                  l1937 0FC0  
                                l1891 19D2                                  l1779 133E  
                                l1883 0F2C                                  l1875 0ED6  
                                l1867 0E38                                  l1859 0DFC  
                                l1971 1138                                  l1955 10CC  
                                l1963 10FA                                  l1947 1030  
                                l1939 0FC4                                  l1893 19D6  
                                l1981 1974                                  l1789 18B0  
                                l1797 14AE                                  l1885 0F3C  
                                l1877 0EF0                                  l1869 0E3E  
                                l1965 1108                                  l1957 10DA  
                                l1949 106C                                  ?_pad 0011  
                                l1895 19DA                                  l1991 19A8  
                                l1887 0F52                                  l1879 0F0A  
                                l1959 10EE                                  l1897 19E8  
                                l1985 197E                                  l1977 1950  
                                l1969 1114                                  l1997 1840  
                                l1989 19A2                                  l1999 1854  
                                STR_1 0827                                  STR_2 0824  
                                STR_3 081C                                  STR_4 0818  
                                STR_5 0814                                  STR_6 081C  
                                STR_7 0818                                  STR_8 0814  
                                STR_9 0801                                  u1000 1360  
                                u1001 135C                                  u1010 136E  
                                u1011 136A                                  u1100 16F4  
                                u1020 18E0                                  u1101 16F0  
                                u1021 18DA                                  u1110 1A84  
                                u1030 18E2                                  u1111 1A80  
                                u1040 1836                                  u1200 0DF8  
                                u1120 0CB8                                  u1041 1830  
                                u1121 0CB4                                  u1050 1838  
                                u1210 0E0E                                  u1130 0CD4  
                                u1211 0E0A                                  u1131 0CD0  
                                u1300 1A4C                                  u1060 14DE  
                                u1220 0E76                                  u1140 0CFE  
                                u1301 1A48                                  u1061 14D8  
                                u1141 0CFA                                  u1310 1A38  
                                u1070 14E0                                  u1230 0EB8  
                                u1150 0D60                                  u1311 1A34  
                                u1231 0EB4                                  u1151 0D5C  
                                u1400 1850                                  u1080 14F6  
                                u1240 0ED6                                  u1160 0DAA  
                                u1320 0FA0                                  u1401 184C  
                                u1081 14F2                                  u1241 0ED2  
                                u1225 0E64                                  u1161 0DA4  
                                u1321 0F9C                                  u1090 16DA  
                                u1410 1864                                  u1250 0EF0  
                                u1170 0DAC                                  u1330 0FE8  
                                u1091 16D6                                  u1411 1860  
                                u1251 0EEC                                  u1331 0FE4  
                                u1500 12C8                                  u1420 1530  
                                u1260 0F0A                                  u1180 0DC2  
                                u1340 100C                                  u1501 12C4  
                                u1261 0F06                                  u1181 0DBE  
                                u1341 1008                                  u1510 13AE  
                                u1430 1558                                  u1270 0F18  
                                u1190 0DF6                                  u1350 10CC  
                                u1511 13AA                                  u1271 0F14  
                                u1191 0DF0                                  u1351 10C8  
                                u1520 13C8                                  u1440 1568  
                                u1600 17D4                                  u1360 1960  
                                u1280 0F26                                  _LATD 000F8C  
                                u1521 13C4                                  u1441 1564  
                                u1601 17D0                                  u1361 195C  
                                u1281 0F22                                  u1450 1228  
                                u1530 13E2                                  u1290 19E8  
                                u1370 1970                                  u1610 089C  
                                u1451 1224                                  u1531 13DE  
                                u1427 1526                                  u1291 19E4  
                                u1371 196C                                  u1611 0898  
                                u1460 1242                                  u1540 1400  
                                u1380 198E                                  u1700 0B24  
                                u1461 123E                                  u1541 13FC  
                                u1437 154E                                  u1381 198A  
                                u1701 0B20                                  u1470 1268  
                                u1550 1416                                  u1390 199E  
                                u1710 0B62                                  u1630 08E2  
                                u1471 1264                                  u1551 1412  
                                u1391 199A                                  u1711 0B5E  
                                u1631 08DE                                  u1480 1286  
                                u1560 143A                                  u1720 0B76  
                                u1624 08C0                                  u1481 1282  
                                u1561 1436                                  u1721 0B72  
                                u1625 08BA                                  u1490 12A2  
                                u1570 14A4                                  u1730 0BA0  
                                u1650 091C                                  u1491 129E  
                                u1571 14A0                                  u1731 0B9C  
                                u1651 0918                                  u1580 1A72  
                                u1660 0A74                                  u1644 08FA  
                                u1581 1A6E                                  u1661 0A70  
                                u1645 08F4                                  u1670 0A82  
                                u1671 0A7E                                  u1680 0AB6  
                                u1681 0AB2                                  u1690 0B08  
                                u1595 178C                                  u1691 0B04  
                                _RCEN 007E2B                                  _RSEN 007E29  
                     __end_of_Bcd2Dec 17C2                                  _Date 00D3  
                     __end_of_Dec2Bcd 15C2                                  _Year 00CF  
                      main@Clock_type 00BB                                  _dbuf 00DD  
                                _main 082C                       ?_RTC_Read_Clock 0001  
                                _hour 00D7                      __end_of_I2C_Nack 1A3A  
                  __size_of_LCD_Clear 0014                                  _prec 00C1  
                    __end_of_I2C_Init 1A26                      __end_of_I2C_Read 1878  
                                _nout 00BD                                  pad@i 0018  
                                pad@p 0015                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf1 000FE7  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 001A                                  fsr2l 000FD9  
                                _xtoa 0CA8                      __end_of_I2C_Stop 1A76  
                                prodh 000FF4                                  prodl 000FF3  
                                start 0000                       __end_of_MSdelay 16F6  
                       _LCD_String_xy 17C2                          ___param_bank 000000  
    RTC_Read_Clock@read_clock_address 0004                                 ??_pad 0017  
                    __end_of_LCD_Char 1660                      __end_of_LCD_Init 194E  
                               ?_main 0001                                 _ACKEN 007E2C  
                               _ACKDT 007E2D                       __end_of___awdiv 12DA  
                               STR_10 0820                                 STR_11 080B  
                     __end_of___awmod 144C                       ___awdiv@divisor 0003  
                               ?_xtoa 001C                                 _LATD2 007C62  
                               _LATD3 007C63                       ___awdiv@counter 0005  
                        vfpfcnvrt@fmt 0045                          vfpfcnvrt@llu 004D  
                               _TRISD 000F95                                 _SSPIE 007CEB  
                               _SSPIF 007CF3                                 _Month 00D1  
                               _flags 005E                                 _fputc 114C  
                     __end_of_isalpha 183E                                 _fputs 173C  
                   __end_of_I2C_Ready 1A88                                 pad@fp 0011  
                               _width 00BF                                 _putch 1A88  
                     __end_of_islower 18B0                     __end_of_I2C_Start 197C  
                   __end_of_I2C_Write 19F2                       __end_of_isupper 18E8  
                               tablat 000FF5                                 status 000FD8  
                 __size_of_LCD_String 005E                       __end_of_sprintf 1614  
                               xtoa@c 0041                                 xtoa@d 001E  
                               xtoa@i 003F                                 xtoa@n 0037  
                               xtoa@p 0033                                 xtoa@w 0035  
                               xtoa@x 0026                       __end_of_toupper 150C  
                      ?_LCD_String_xy 000B                          _toupper$1202 000D  
                     __initialization 19F2                          __end_of_main 0CA8  
                        __end_of_xtoa 0F7C                             ??_I2C_Ack 0001  
                              ??_main 0072                                ??_xtoa 0027  
                   __end_of_LCD_Clear 1A62                         __activetblptr 000002  
                           ??_Bcd2Dec 0009                             ??_Dec2Bcd 000B  
                              ?_fputc 0001                                ?_fputs 000A  
                    ___awdiv@dividend 0001                                ?_putch 0001  
                    LCD_String_xy@msg 000C                      LCD_String_xy@pos 000B  
                    LCD_String_xy@row 000E                             ??_MSdelay 0003  
                              _OSCCON 000FD3                                _SSPADD 000FC8  
                              _TRISB0 007C98                                _TRISB1 007C99  
                              _SSPBUF 000FC9                          vfprintf@cfmt 005C  
                              ___wmul 19AA                             ??___awdiv 0005  
                           ??___awmod 0005                                _alarma 00CD  
                              clear_0 19F8                      ___awdiv@quotient 0007  
                     ___awmod@divisor 0003                       ___awmod@counter 0005  
                  _I2C_Repeated_Start 197C                                pad@buf 0013  
                __size_of_LCD_Command 004C                                _strlen 18E8  
                              fputc@c 0001                                fputs@c 000E  
                              fputs@i 000F                             ?_I2C_Nack 0001  
                              fputs@s 000A                             ??_isalpha 0003  
                           ?_I2C_Init 0001                             ?_I2C_Read 0001  
                           ?_I2C_Stop 0001                         main@print_min 00B5  
                       main@print_sec 00B3                             ??_islower 0003  
                        __mediumconst 0000                                tblptrh 000FF7  
                           ??_isupper 0003                                tblptrl 000FF6  
                              tblptru 000FF8                   ?_I2C_Repeated_Start 0001  
                              putch@c 0001                      __end_of_vfprintf 14AE  
                           ??_sprintf 005E                                xtoa@fp 001C  
                           ??_toupper 0009                             ?_LCD_Char 0001  
                          __accesstop 0060               __end_of__initialization 1A02  
                           ?_LCD_Init 0001                       ??_LCD_String_xy 000E  
                       ___rparam_used 000001                  ??_I2C_Repeated_Start 0002  
                      __pcstackCOMRAM 0001                         __end_of_fputc 1216  
                       __end_of_fputs 1780                         __end_of_putch 1A8A  
                        ??_LCD_String 000B                            ??_I2C_Nack 0001  
                          ??_I2C_Init 0001                            ??_I2C_Read 0001  
                          ??_I2C_Stop 0001                      ??_RTC_Read_Clock 0003  
                             ??_fputc 0005                               ??_fputs 000E  
                             ??_putch 0001                            __pbssBANK0 00BD  
                          ??_LCD_Char 0007                            ??_LCD_Init 0009  
                  __end_of_LCD_String 156A                          I2C_Read@flag 0001  
                      I2C_Read@buffer 0002                               ?___wmul 0001  
                             _I2C_Ack 1A3A                               _ACKSTAT 007E2E  
                             ?_strlen 0001                    __size_of_vfpfcnvrt 01D0  
                             _Bcd2Dec 1780                               _Dec2Bcd 156A  
                             _SSPCON1 000FC6                               _SSPCON2 000FC5  
                             _SSPSTAT 000FC7                               _MSdelay 16AC  
                           _I2C_Ready 1A76                             _I2C_Start 194E  
                           _I2C_Write 19D0                         LCD_String@msg 0009  
                          _count_pomo 00C5                               __Hparam 0000  
                             __Lparam 0000                               ___awdiv 1216  
                             ___awmod 139C                       __size_of___wmul 0026  
                           ?_vfprintf 0056                          __psmallconst 0800  
                             __pcinit 19F2                               __ramtop 0800  
                             __ptext0 082C                               __ptext1 15C2  
                             __ptext2 144C                               __ptext3 0F7C  
                             __ptext4 0CA8                               __ptext5 14AE  
                             __ptext6 1878                               __ptext7 12DA  
                             __ptext8 18E8                               __ptext9 173C  
                     __size_of_strlen 0036                          __size_of_pad 00C2  
                             _isalpha 1802                      ___awmod@dividend 0001  
                             _islower 1878                               _isupper 18B0  
                           _LCD_Clear 1A4E                               main@aux 00B1  
                             _sprintf 15C2                               _toupper 14AE  
                end_of_initialization 1A02                               fputc@fp 0003  
                      LCD_Command@cmd 0008                         __Lmediumconst 0000  
                             fputs@fp 000C                      main@counters_min 007F  
                    main@counters_sec 0075                            ?_I2C_Ready 0001  
                      main@print_fail 00B9                            ?_I2C_Start 0001  
                          ?_I2C_Write 0001                        main@print_pomo 00B7  
                   __end_of_vfpfcnvrt 114C                               postdec2 000FDD  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE                            ??_vfprintf 005C  
                             strlen@a 0003                               strlen@s 0001  
                           _PORTBbits 000F81                             _TRISBbits 000F93  
                           _TRISDbits 000F95                            ?_LCD_Clear 0001  
                   __size_of_I2C_Nack 0014                     __size_of_I2C_Init 001A  
                   __size_of_I2C_Read 003A                     __size_of_I2C_Stop 0014  
                   __size_of_LCD_Char 004C                     __size_of_LCD_Init 0030  
                       ??_LCD_Command 0007                           vfpfcnvrt@ap 0047  
                         vfpfcnvrt@fp 0043                        __end_of___wmul 19D0  
                      __end_of_strlen 191E                   start_initialization 19F2  
                         __end_of_pad 139C  I2C_Repeated_Start@slave_read_address 0002  
                         ??_I2C_Ready 0001                           ??_I2C_Start 0002  
                         ??_I2C_Write 0001                 __end_of_LCD_String_xy 1802  
                         vfprintf@fmt 0058           __size_of_I2C_Repeated_Start 002E  
                            ??___wmul 0005                              ?_I2C_Ack 0001  
                            ??_strlen 0003                   __end_of_LCD_Command 16AC  
                         __pbssCOMRAM 005E                         __pcstackBANK0 0060  
                            ?_Bcd2Dec 0007                           ??_LCD_Clear 0009  
                            ?_Dec2Bcd 0009                              ?_MSdelay 0001  
                     _count_pomo_fail 00C3                            Bcd2Dec@bcd 0007  
                          Bcd2Dec@dec 000C                              ?___awdiv 0001  
                            ?___awmod 0001                     __size_of_vfprintf 0062  
                         __smallconst 0800                              _I2C_Nack 1A26  
                            ?_isalpha 0001                              _I2C_Init 1A0C  
                            _I2C_Read 183E                              _I2C_Stop 1A62  
                            ?_islower 0001                              ?_isupper 0001  
                          Dec2Bcd@bdc 000D                            Dec2Bcd@dec 0009  
               LCD_String_xy@location 000F                              ?_sprintf 0060  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                            ?_toupper 0007                        __size_of_putch 0002  
                            MSdelay@i 0003                              MSdelay@j 0005  
                            _LCD_Char 1614                              _LCD_Init 191E  
                      ___wmul@product 0005                              _LATDbits 000F8C  
             __size_of_RTC_Read_Clock 0046                             main@AM_PM 00BC  
                         _LCD_Command 1660                             _vfpfcnvrt 0F7C  
                           _xtoa$1120 0031                             _xtoa$1119 002F  
                    __size_of_I2C_Ack 0014                     ___wmul@multiplier 0001  
                           main@hours 00A7                      __size_of_Bcd2Dec 0042  
                          vfpfcnvrt@c 0055                      __size_of_Dec2Bcd 0058  
        I2C_Start@slave_write_address 0002                      __size_of_MSdelay 004A  
                         _counter_min 00C9                           _counter_sec 00CB  
                            __Hrparam 0000                            vfprintf@ap 005A  
                            __Lrparam 0000                            vfprintf@fp 0056  
                       I2C_Write@data 0001                      __size_of___awdiv 00C4  
                    __size_of___awmod 00B0                            ?_vfpfcnvrt 0043  
                  main@counters_pomos 0089                            sprintf@fmt 0062  
                    __size_of_isalpha 003C                      __size_of_islower 0038  
                            __ptext10 114C                              __ptext11 1A88  
                            __ptext20 1A26                              __ptext12 18B0  
                            __ptext21 1A3A                              __ptext13 1802  
                            __ptext30 1A0C                              __ptext22 17C2  
                            __ptext14 16F6                              __ptext31 156A  
                            __ptext23 150C                              __ptext15 194E  
                            __ptext32 139C                              __ptext24 1614  
                            __ptext16 197C                              __ptext33 1216  
                            __ptext25 191E                              __ptext17 19D0  
                            __ptext34 1780                              __ptext26 1A4E  
                            __ptext18 183E                              __ptext35 19AA  
                            __ptext27 1660                              __ptext19 1A76  
                            __ptext28 16AC                              __ptext29 1A62  
                    __size_of_isupper 0038                      __size_of_sprintf 0052  
                    __size_of_toupper 005E                         __size_of_main 047C  
                       __size_of_xtoa 02D4                            MSdelay@val 0001  
                            _vfprintf 144C                              main@mins 009D  
                            main@secs 0093                            _LCD_String 150C  
                            isalpha@c 0001                             sprintf@ap 006A  
                            islower@c 0001            __end_of_I2C_Repeated_Start 19AA  
                            isupper@c 0001                        _RTC_Read_Clock 16F6  
                         ??_vfpfcnvrt 0049                              sprintf@f 006C  
                            sprintf@s 0060                              toupper@c 0007  
              __size_of_LCD_String_xy 0040                           _SSPCON2bits 000FC5  
              __end_of_RTC_Read_Clock 173C  
