

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 14 22:21:06 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     _SSPCON2bits	set	4037
    89  0000                     _SSPADD	set	4040
    90  0000                     _SSPCON2	set	4037
    91  0000                     _SSPCON1	set	4038
    92  0000                     _SSPSTAT	set	4039
    93  0000                     _SSPBUF	set	4041
    94  0000                     _SSPSTATbits	set	4039
    95  0000                     _LATD	set	3980
    96  0000                     _TRISD	set	3989
    97  0000                     _LATDbits	set	3980
    98  0000                     _PORTBbits	set	3969
    99  0000                     _OSCCON	set	4051
   100  0000                     _TRISBbits	set	3987
   101  0000                     _TRISDbits	set	3989
   102  0000                     _ACKEN	set	32300
   103  0000                     _ACKDT	set	32301
   104  0000                     _PEN	set	32298
   105  0000                     _RSEN	set	32297
   106  0000                     _ACKSTAT	set	32302
   107  0000                     _SSPIF	set	31987
   108  0000                     _SSPIE	set	31979
   109  0000                     _TRISB1	set	31897
   110  0000                     _TRISB0	set	31896
   111  0000                     _RCEN	set	32299
   112  0000                     _LATD3	set	31843
   113  0000                     _LATD2	set	31842
   114                           
   115                           	psect	smallconst
   116  000800                     __psmallconst:
   117                           	callstack 0
   118  000800  00                 	db	0
   119  000801                     STR_9:
   120  000801  2D                 	db	45
   121  000802  2D                 	db	45
   122  000803  2D                 	db	45
   123  000804  2D                 	db	45
   124  000805  44                 	db	68	;'D'
   125  000806  65                 	db	101	;'e'
   126  000807  73                 	db	115	;'s'
   127  000808  63                 	db	99	;'c'
   128  000809  61                 	db	97	;'a'
   129  00080A  6E                 	db	110	;'n'
   130  00080B  73                 	db	115	;'s'
   131  00080C  6F                 	db	111	;'o'
   132  00080D  2D                 	db	45
   133  00080E  2D                 	db	45
   134  00080F  2D                 	db	45
   135  000810  2D                 	db	45
   136  000811  00                 	db	0
   137  000812                     STR_12:
   138  000812  20                 	db	32
   139  000813  45                 	db	69	;'E'
   140  000814  25                 	db	37
   141  000815  78                 	db	120	;'x'
   142  000816  20                 	db	32
   143  000817  46                 	db	70	;'F'
   144  000818  25                 	db	37
   145  000819  78                 	db	120	;'x'
   146  00081A  00                 	db	0
   147  00081B                     STR_5:
   148  00081B  54                 	db	84	;'T'
   149  00081C  69                 	db	105	;'i'
   150  00081D  6D                 	db	109	;'m'
   151  00081E  3A                 	db	58	;':'
   152  00081F  25                 	db	37
   153  000820  78                 	db	120	;'x'
   154  000821  3A                 	db	58	;':'
   155  000822  00                 	db	0
   156  000823                     STR_10:
   157  000823  54                 	db	84	;'T'
   158  000824  65                 	db	101	;'e'
   159  000825  6D                 	db	109	;'m'
   160  000826  70                 	db	112	;'p'
   161  000827  3A                 	db	58	;':'
   162  000828  25                 	db	37
   163  000829  78                 	db	120	;'x'
   164  00082A  00                 	db	0
   165  00082B                     STR_3:
   166  00082B  25                 	db	37
   167  00082C  78                 	db	120	;'x'
   168  00082D  20                 	db	32
   169  00082E  00                 	db	0
   170  00082F                     STR_11:
   171  00082F  2D                 	db	45
   172  000830  25                 	db	37
   173  000831  78                 	db	120	;'x'
   174  000832  00                 	db	0
   175  000833                     STR_2:
   176  000833  41                 	db	65	;'A'
   177  000834  4D                 	db	77	;'M'
   178  000835  00                 	db	0
   179  000836                     STR_1:
   180  000836  50                 	db	80	;'P'
   181  000837  4D                 	db	77	;'M'
   182  000838  00                 	db	0
   183  000839  00                 	db	0	; dummy byte at the end
   184  0000                     
   185                           ; #config settings
   186                           
   187                           	psect	cinit
   188  001A58                     __pcinit:
   189                           	callstack 0
   190  001A58                     start_initialization:
   191                           	callstack 0
   192  001A58                     __initialization:
   193                           	callstack 0
   194                           
   195                           ; Clear objects allocated to BANK1 (32 bytes)
   196  001A58  EE01  F000         	lfsr	0,__pbssBANK1
   197  001A5C  0E20               	movlw	32
   198  001A5E                     clear_0:
   199  001A5E  6AEE               	clrf	postinc0,c
   200  001A60  06E8               	decf	wreg,f,c
   201  001A62  E1FD               	bnz	clear_0
   202                           
   203                           ; Clear objects allocated to BANK0 (32 bytes)
   204  001A64  EE00  F0C7         	lfsr	0,__pbssBANK0
   205  001A68  0E20               	movlw	32
   206  001A6A                     clear_1:
   207  001A6A  6AEE               	clrf	postinc0,c
   208  001A6C  06E8               	decf	wreg,f,c
   209  001A6E  E1FD               	bnz	clear_1
   210                           
   211                           ; Clear objects allocated to COMRAM (2 bytes)
   212  001A70  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   213  001A72  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   214  001A74                     end_of_initialization:
   215                           	callstack 0
   216  001A74                     __end_of__initialization:
   217                           	callstack 0
   218  001A74  0E00               	movlw	low (__Lmediumconst shr (0+16))
   219  001A76  6EF8               	movwf	tblptru,c
   220  001A78  0100               	movlb	0
   221  001A7A  EF1D  F004         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224  00005E                     __pbssCOMRAM:
   225                           	callstack 0
   226  00005E                     _flags:
   227                           	callstack 0
   228  00005E                     	ds	2
   229                           
   230                           	psect	bssBANK0
   231  0000C7                     __pbssBANK0:
   232                           	callstack 0
   233  0000C7                     _nout:
   234                           	callstack 0
   235  0000C7                     	ds	2
   236  0000C9                     _width:
   237                           	callstack 0
   238  0000C9                     	ds	2
   239  0000CB                     _prec:
   240                           	callstack 0
   241  0000CB                     	ds	2
   242  0000CD                     _count_pomo_fail:
   243                           	callstack 0
   244  0000CD                     	ds	2
   245  0000CF                     _count_pomo:
   246                           	callstack 0
   247  0000CF                     	ds	2
   248  0000D1                     _run:
   249                           	callstack 0
   250  0000D1                     	ds	2
   251  0000D3                     _counter_min:
   252                           	callstack 0
   253  0000D3                     	ds	2
   254  0000D5                     _counter_sec:
   255                           	callstack 0
   256  0000D5                     	ds	2
   257  0000D7                     _alarma:
   258                           	callstack 0
   259  0000D7                     	ds	2
   260  0000D9                     _Year:
   261                           	callstack 0
   262  0000D9                     	ds	2
   263  0000DB                     _Month:
   264                           	callstack 0
   265  0000DB                     	ds	2
   266  0000DD                     _Date:
   267                           	callstack 0
   268  0000DD                     	ds	2
   269  0000DF                     _Day:
   270                           	callstack 0
   271  0000DF                     	ds	2
   272  0000E1                     _hour:
   273                           	callstack 0
   274  0000E1                     	ds	2
   275  0000E3                     _min:
   276                           	callstack 0
   277  0000E3                     	ds	2
   278  0000E5                     _sec:
   279                           	callstack 0
   280  0000E5                     	ds	2
   281                           
   282                           	psect	bssBANK1
   283  000100                     __pbssBANK1:
   284                           	callstack 0
   285  000100                     _dbuf:
   286                           	callstack 0
   287  000100                     	ds	32
   288                           
   289                           	psect	cstackBANK0
   290  000060                     __pcstackBANK0:
   291                           	callstack 0
   292  000060                     ?_sprintf:
   293                           	callstack 0
   294  000060                     sprintf@s:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x0
   298  000060                     	ds	2
   299  000062                     sprintf@fmt:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x2
   303  000062                     	ds	8
   304  00006A                     sprintf@ap:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0xA
   308  00006A                     	ds	2
   309  00006C                     sprintf@f:
   310                           	callstack 0
   311                           
   312                           ; 6 bytes @ 0xC
   313  00006C                     	ds	6
   314  000072                     ??_main:
   315                           
   316                           ; 1 bytes @ 0x12
   317  000072                     	ds	3
   318  000075                     main@counters_sec:
   319                           	callstack 0
   320                           
   321                           ; 10 bytes @ 0x15
   322  000075                     	ds	10
   323  00007F                     main@counters_min:
   324                           	callstack 0
   325                           
   326                           ; 10 bytes @ 0x1F
   327  00007F                     	ds	10
   328  000089                     main@counters_pomos:
   329                           	callstack 0
   330                           
   331                           ; 10 bytes @ 0x29
   332  000089                     	ds	10
   333  000093                     main@counters:
   334                           	callstack 0
   335                           
   336                           ; 10 bytes @ 0x33
   337  000093                     	ds	10
   338  00009D                     main@secs:
   339                           	callstack 0
   340                           
   341                           ; 10 bytes @ 0x3D
   342  00009D                     	ds	10
   343  0000A7                     main@mins:
   344                           	callstack 0
   345                           
   346                           ; 10 bytes @ 0x47
   347  0000A7                     	ds	10
   348  0000B1                     main@hours:
   349                           	callstack 0
   350                           
   351                           ; 10 bytes @ 0x51
   352  0000B1                     	ds	10
   353  0000BB                     main@aux:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x5B
   357  0000BB                     	ds	2
   358  0000BD                     main@print_sec:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x5D
   362  0000BD                     	ds	2
   363  0000BF                     main@print_min:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x5F
   367  0000BF                     	ds	2
   368  0000C1                     main@print_pomo:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x61
   372  0000C1                     	ds	2
   373  0000C3                     main@print_fail:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x63
   377  0000C3                     	ds	2
   378  0000C5                     main@Clock_type:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x65
   382  0000C5                     	ds	1
   383  0000C6                     main@AM_PM:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x66
   387  0000C6                     	ds	1
   388                           
   389                           	psect	cstackCOMRAM
   390  000001                     __pcstackCOMRAM:
   391                           	callstack 0
   392  000001                     ?_strlen:
   393                           	callstack 0
   394  000001                     ?_isupper:
   395                           	callstack 0
   396  000001                     ?_isalpha:
   397                           	callstack 0
   398  000001                     ?_islower:
   399                           	callstack 0
   400  000001                     ?___wmul:
   401                           	callstack 0
   402  000001                     ?___awdiv:
   403                           	callstack 0
   404  000001                     ?___awmod:
   405                           	callstack 0
   406  000001                     I2C_Read@flag:
   407                           	callstack 0
   408  000001                     I2C_Write@data:
   409                           	callstack 0
   410  000001                     MSdelay@val:
   411                           	callstack 0
   412  000001                     ___wmul@multiplier:
   413                           	callstack 0
   414  000001                     ___awdiv@dividend:
   415                           	callstack 0
   416  000001                     ___awmod@dividend:
   417                           	callstack 0
   418  000001                     isalpha@c:
   419                           	callstack 0
   420  000001                     isupper@c:
   421                           	callstack 0
   422  000001                     fputc@c:
   423                           	callstack 0
   424  000001                     strlen@s:
   425                           	callstack 0
   426  000001                     islower@c:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x0
   430  000001                     	ds	1
   431  000002                     I2C_Read@buffer:
   432                           	callstack 0
   433  000002                     I2C_Start@slave_write_address:
   434                           	callstack 0
   435  000002                     I2C_Repeated_Start@slave_read_address:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x1
   439  000002                     	ds	1
   440  000003                     ??_isupper:
   441  000003                     ??_isalpha:
   442  000003                     ??_islower:
   443  000003                     ??_RTC_Read_Clock:
   444  000003                     MSdelay@i:
   445                           	callstack 0
   446  000003                     ___wmul@multiplicand:
   447                           	callstack 0
   448  000003                     ___awdiv@divisor:
   449                           	callstack 0
   450  000003                     ___awmod@divisor:
   451                           	callstack 0
   452  000003                     fputc@fp:
   453                           	callstack 0
   454  000003                     strlen@a:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x2
   458  000003                     	ds	1
   459  000004                     RTC_Read_Clock@read_clock_address:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x3
   463  000004                     	ds	1
   464  000005                     ??_fputc:
   465  000005                     ___awdiv@counter:
   466                           	callstack 0
   467  000005                     ___awmod@counter:
   468                           	callstack 0
   469  000005                     MSdelay@j:
   470                           	callstack 0
   471  000005                     ___wmul@product:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x4
   475  000005                     	ds	1
   476  000006                     ___awdiv@sign:
   477                           	callstack 0
   478  000006                     ___awmod@sign:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x5
   482  000006                     	ds	1
   483  000007                     ??_LCD_Command:
   484  000007                     ??_LCD_Char:
   485  000007                     ?_Bcd2Dec:
   486                           	callstack 0
   487  000007                     ?_toupper:
   488                           	callstack 0
   489  000007                     Bcd2Dec@bcd:
   490                           	callstack 0
   491  000007                     ___awdiv@quotient:
   492                           	callstack 0
   493  000007                     toupper@c:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x6
   497  000007                     	ds	1
   498  000008                     LCD_Command@cmd:
   499                           	callstack 0
   500  000008                     LCD_Char@dat:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x7
   504  000008                     	ds	1
   505  000009                     ??_Bcd2Dec:
   506  000009                     ??_toupper:
   507  000009                     ?_Dec2Bcd:
   508                           	callstack 0
   509  000009                     LCD_String@msg:
   510                           	callstack 0
   511  000009                     Dec2Bcd@dec:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x8
   515  000009                     	ds	1
   516  00000A                     fputs@s:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x9
   520  00000A                     	ds	1
   521  00000B                     ??_Dec2Bcd:
   522  00000B                     LCD_String_xy@pos:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0xA
   526  00000B                     	ds	1
   527  00000C                     LCD_String_xy@msg:
   528                           	callstack 0
   529  00000C                     Bcd2Dec@dec:
   530                           	callstack 0
   531  00000C                     fputs@fp:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0xB
   535  00000C                     	ds	1
   536  00000D                     Dec2Bcd@bdc:
   537                           	callstack 0
   538  00000D                     _toupper$1208:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0xC
   542  00000D                     	ds	1
   543  00000E                     LCD_String_xy@row:
   544                           	callstack 0
   545  00000E                     fputs@c:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0xD
   549  00000E                     	ds	1
   550  00000F                     LCD_String_xy@location:
   551                           	callstack 0
   552  00000F                     fputs@i:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0xE
   556  00000F                     	ds	2
   557  000011                     ?_pad:
   558                           	callstack 0
   559  000011                     pad@fp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x10
   563  000011                     	ds	2
   564  000013                     pad@buf:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x12
   568  000013                     	ds	2
   569  000015                     pad@p:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x14
   573  000015                     	ds	2
   574  000017                     ??_pad:
   575                           
   576                           ; 1 bytes @ 0x16
   577  000017                     	ds	1
   578  000018                     pad@i:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x17
   582  000018                     	ds	2
   583  00001A                     pad@w:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x19
   587  00001A                     	ds	2
   588  00001C                     ?_xtoa:
   589                           	callstack 0
   590  00001C                     xtoa@fp:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x1B
   594  00001C                     	ds	2
   595  00001E                     xtoa@d:
   596                           	callstack 0
   597                           
   598                           ; 8 bytes @ 0x1D
   599  00001E                     	ds	8
   600  000026                     xtoa@x:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x25
   604  000026                     	ds	1
   605  000027                     ??_xtoa:
   606                           
   607                           ; 1 bytes @ 0x26
   608  000027                     	ds	8
   609  00002F                     _xtoa$1125:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x2E
   613  00002F                     	ds	2
   614  000031                     _xtoa$1126:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x30
   618  000031                     	ds	2
   619  000033                     xtoa@p:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x32
   623  000033                     	ds	2
   624  000035                     xtoa@w:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x34
   628  000035                     	ds	2
   629  000037                     xtoa@n:
   630                           	callstack 0
   631                           
   632                           ; 8 bytes @ 0x36
   633  000037                     	ds	8
   634  00003F                     xtoa@i:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x3E
   638  00003F                     	ds	2
   639  000041                     xtoa@c:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x40
   643  000041                     	ds	2
   644  000043                     ?_vfpfcnvrt:
   645                           	callstack 0
   646  000043                     vfpfcnvrt@fp:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x42
   650  000043                     	ds	2
   651  000045                     vfpfcnvrt@fmt:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x44
   655  000045                     	ds	2
   656  000047                     vfpfcnvrt@ap:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x46
   660  000047                     	ds	2
   661  000049                     ??_vfpfcnvrt:
   662                           
   663                           ; 1 bytes @ 0x48
   664  000049                     	ds	4
   665  00004D                     vfpfcnvrt@llu:
   666                           	callstack 0
   667                           
   668                           ; 8 bytes @ 0x4C
   669  00004D                     	ds	8
   670  000055                     vfpfcnvrt@c:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x54
   674  000055                     	ds	1
   675  000056                     ?_vfprintf:
   676                           	callstack 0
   677  000056                     vfprintf@fp:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x55
   681  000056                     	ds	2
   682  000058                     vfprintf@fmt:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x57
   686  000058                     	ds	2
   687  00005A                     vfprintf@ap:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x59
   691  00005A                     	ds	2
   692  00005C                     vfprintf@cfmt:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x5B
   696  00005C                     	ds	2
   697  00005E                     
   698                           ; 1 bytes @ 0x5D
   699 ;;
   700 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   701 ;;
   702 ;; *************** function _main *****************
   703 ;; Defined at:
   704 ;;		line 69 in file "RTC.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  print_fail      2   99[BANK0 ] int 
   709 ;;  print_pomo      2   97[BANK0 ] int 
   710 ;;  print_min       2   95[BANK0 ] int 
   711 ;;  print_sec       2   93[BANK0 ] int 
   712 ;;  aux             2   91[BANK0 ] int 
   713 ;;  hours          10   81[BANK0 ] unsigned char [10]
   714 ;;  mins           10   71[BANK0 ] unsigned char [10]
   715 ;;  secs           10   61[BANK0 ] unsigned char [10]
   716 ;;  counters       10   51[BANK0 ] unsigned char [10]
   717 ;;  counters_pom   10   41[BANK0 ] unsigned char [10]
   718 ;;  counters_min   10   31[BANK0 ] unsigned char [10]
   719 ;;  counters_sec   10   21[BANK0 ] unsigned char [10]
   720 ;;  AM_PM           1  102[BANK0 ] unsigned char 
   721 ;;  Clock_type      1  101[BANK0 ] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   731 ;;      Params:         0       0       0       0       0       0       0       0       0
   732 ;;      Locals:         0      82       0       0       0       0       0       0       0
   733 ;;      Temps:          0       3       0       0       0       0       0       0       0
   734 ;;      Totals:         0      85       0       0       0       0       0       0       0
   735 ;;Total ram usage:       85 bytes
   736 ;; Hardware stack levels required when called:    8
   737 ;; This function calls:
   738 ;;		_Bcd2Dec
   739 ;;		_Dec2Bcd
   740 ;;		_I2C_Init
   741 ;;		_I2C_Stop
   742 ;;		_LCD_Clear
   743 ;;		_LCD_Init
   744 ;;		_LCD_String
   745 ;;		_LCD_String_xy
   746 ;;		_MSdelay
   747 ;;		_RTC_Read_Clock
   748 ;;		___awmod
   749 ;;		_init_leds_botons
   750 ;;		_sprintf
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text0
   757  00083A                     __ptext0:
   758                           	callstack 0
   759  00083A                     _main:
   760                           	callstack 23
   761  00083A                     
   762                           ;RTC.c: 71:     init_leds_botons();
   763  00083A  ECA1  F00D         	call	_init_leds_botons	;wreg free
   764  00083E                     
   765                           ;RTC.c: 73:     char secs[10],mins[10],hours[10];;RTC.c: 74:     char counters_sec[10], 
      +                          counters_min[10], counters_pomos[10], counters[10];;RTC.c: 75:     char Clock_type = 0x0
      +                          6;
   766  00083E  0E06               	movlw	6
   767  000840  0100               	movlb	0	; () banked
   768  000842  6FC5               	movwf	main@Clock_type& (0+255),b
   769  000844                     
   770                           ; BSR set to: 0
   771                           ;RTC.c: 76:     char AM_PM = 0x05;
   772  000844  0E05               	movlw	5
   773  000846  6FC6               	movwf	main@AM_PM& (0+255),b
   774  000848                     
   775                           ; BSR set to: 0
   776                           ;RTC.c: 78:     OSCCON=0x72;
   777  000848  0E72               	movlw	114
   778  00084A  6ED3               	movwf	211,c	;volatile
   779                           
   780                           ;RTC.c: 80:     I2C_Init();
   781  00084C  EC63  F00D         	call	_I2C_Init	;wreg free
   782  000850                     
   783                           ;RTC.c: 81:     LCD_Init();
   784  000850  ECE6  F00C         	call	_LCD_Init	;wreg free
   785  000854                     
   786                           ;RTC.c: 82:     LCD_Clear();
   787  000854  EC84  F00D         	call	_LCD_Clear	;wreg free
   788  000858                     
   789                           ;RTC.c: 83:     MSdelay(10);
   790  000858  0E00               	movlw	0
   791  00085A  6E02               	movwf	(MSdelay@val+1)^0,c
   792  00085C  0E0A               	movlw	10
   793  00085E  6E01               	movwf	MSdelay@val^0,c
   794  000860  ECAD  F00B         	call	_MSdelay	;wreg free
   795  000864                     
   796                           ;RTC.c: 85:     alarma=1 , counter_sec=0, counter_min=0, run = 1;
   797  000864  0E00               	movlw	0
   798  000866  0100               	movlb	0	; () banked
   799  000868  6FD8               	movwf	(_alarma+1)& (0+255),b
   800  00086A  0E01               	movlw	1
   801  00086C  6FD7               	movwf	_alarma& (0+255),b
   802  00086E                     
   803                           ; BSR set to: 0
   804  00086E  0E00               	movlw	0
   805  000870  6FD6               	movwf	(_counter_sec+1)& (0+255),b
   806  000872  0E00               	movlw	0
   807  000874  6FD5               	movwf	_counter_sec& (0+255),b
   808  000876                     
   809                           ; BSR set to: 0
   810  000876  0E00               	movlw	0
   811  000878  6FD4               	movwf	(_counter_min+1)& (0+255),b
   812  00087A  0E00               	movlw	0
   813  00087C  6FD3               	movwf	_counter_min& (0+255),b
   814  00087E                     
   815                           ; BSR set to: 0
   816  00087E  0E00               	movlw	0
   817  000880  6FD2               	movwf	(_run+1)& (0+255),b
   818  000882  0E01               	movlw	1
   819  000884  6FD1               	movwf	_run& (0+255),b
   820  000886                     
   821                           ; BSR set to: 0
   822                           ;RTC.c: 86:     count_pomo=0, count_pomo_fail=0;
   823  000886  0E00               	movlw	0
   824  000888  6FD0               	movwf	(_count_pomo+1)& (0+255),b
   825  00088A  0E00               	movlw	0
   826  00088C  6FCF               	movwf	_count_pomo& (0+255),b
   827  00088E                     
   828                           ; BSR set to: 0
   829  00088E  0E00               	movlw	0
   830  000890  6FCE               	movwf	(_count_pomo_fail+1)& (0+255),b
   831  000892  0E00               	movlw	0
   832  000894  6FCD               	movwf	_count_pomo_fail& (0+255),b
   833  000896                     l2263:
   834                           
   835                           ; BSR set to: 0
   836                           ;RTC.c: 88:     {;RTC.c: 89:         if(alarma) {
   837  000896  51D7               	movf	_alarma& (0+255),w,b
   838  000898  11D8               	iorwf	(_alarma+1)& (0+255),w,b
   839  00089A  B4D8               	btfsc	status,2,c
   840  00089C  EF52  F004         	goto	u1611
   841  0008A0  EF54  F004         	goto	u1610
   842  0008A4                     u1611:
   843  0008A4  EF30  F005         	goto	l2307
   844  0008A8                     u1610:
   845  0008A8                     
   846                           ; BSR set to: 0
   847                           ;RTC.c: 90:         RTC_Read_Clock(0);
   848  0008A8  0E00               	movlw	0
   849  0008AA  ECD2  F00B         	call	_RTC_Read_Clock
   850  0008AE                     
   851                           ;RTC.c: 91:         I2C_Stop();
   852  0008AE  EC8E  F00D         	call	_I2C_Stop	;wreg free
   853  0008B2                     
   854                           ;RTC.c: 92:         if(hour & (1<<Clock_type)){
   855  0008B2  C0C5  F072         	movff	main@Clock_type,??_main
   856  0008B6  0E01               	movlw	1
   857  0008B8  0100               	movlb	0	; () banked
   858  0008BA  6F73               	movwf	(??_main+1)& (0+255),b
   859  0008BC  0E00               	movlw	0
   860  0008BE  6F74               	movwf	(??_main+2)& (0+255),b
   861  0008C0  2B72               	incf	??_main& (0+255),f,b
   862  0008C2  EF66  F004         	goto	u1624
   863  0008C6                     u1625:
   864  0008C6  90D8               	bcf	status,0,c
   865  0008C8  3773               	rlcf	(??_main+1)& (0+255),f,b
   866  0008CA  3774               	rlcf	(??_main+2)& (0+255),f,b
   867  0008CC                     u1624:
   868  0008CC  2F72               	decfsz	??_main& (0+255),f,b
   869  0008CE  EF63  F004         	goto	u1625
   870  0008D2  0100               	movlb	0	; () banked
   871  0008D4  51E1               	movf	_hour& (0+255),w,b
   872  0008D6  1773               	andwf	(??_main+1)& (0+255),f,b
   873  0008D8  51E2               	movf	(_hour+1)& (0+255),w,b
   874  0008DA  1774               	andwf	(??_main+2)& (0+255),f,b
   875  0008DC  5173               	movf	(??_main+1)& (0+255),w,b
   876  0008DE  1174               	iorwf	(??_main+2)& (0+255),w,b
   877  0008E0  B4D8               	btfsc	status,2,c
   878  0008E2  EF75  F004         	goto	u1631
   879  0008E6  EF77  F004         	goto	u1630
   880  0008EA                     u1631:
   881  0008EA  EFF0  F004         	goto	l2291
   882  0008EE                     u1630:
   883  0008EE                     
   884                           ; BSR set to: 0
   885                           ;RTC.c: 94:             if(hour & (1<<AM_PM)){
   886  0008EE  C0C6  F072         	movff	main@AM_PM,??_main
   887  0008F2  0E01               	movlw	1
   888  0008F4  6F73               	movwf	(??_main+1)& (0+255),b
   889  0008F6  0E00               	movlw	0
   890  0008F8  6F74               	movwf	(??_main+2)& (0+255),b
   891  0008FA  2B72               	incf	??_main& (0+255),f,b
   892  0008FC  EF83  F004         	goto	u1644
   893  000900                     u1645:
   894  000900  90D8               	bcf	status,0,c
   895  000902  3773               	rlcf	(??_main+1)& (0+255),f,b
   896  000904  3774               	rlcf	(??_main+2)& (0+255),f,b
   897  000906                     u1644:
   898  000906  2F72               	decfsz	??_main& (0+255),f,b
   899  000908  EF80  F004         	goto	u1645
   900  00090C  0100               	movlb	0	; () banked
   901  00090E  51E1               	movf	_hour& (0+255),w,b
   902  000910  1773               	andwf	(??_main+1)& (0+255),f,b
   903  000912  51E2               	movf	(_hour+1)& (0+255),w,b
   904  000914  1774               	andwf	(??_main+2)& (0+255),f,b
   905  000916  5173               	movf	(??_main+1)& (0+255),w,b
   906  000918  1174               	iorwf	(??_main+2)& (0+255),w,b
   907  00091A  B4D8               	btfsc	status,2,c
   908  00091C  EF92  F004         	goto	u1651
   909  000920  EF94  F004         	goto	u1650
   910  000924                     u1651:
   911  000924  EF9F  F004         	goto	l2275
   912  000928                     u1650:
   913  000928                     
   914                           ; BSR set to: 0
   915                           ;RTC.c: 95:                 LCD_String_xy(1,14,"PM");
   916  000928  0E0E               	movlw	14
   917  00092A  6E0B               	movwf	LCD_String_xy@pos^0,c
   918  00092C  0E36               	movlw	low STR_1
   919  00092E  6E0C               	movwf	LCD_String_xy@msg^0,c
   920  000930  0E08               	movlw	high STR_1
   921  000932  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   922  000934  0E01               	movlw	1
   923  000936  EC38  F00C         	call	_LCD_String_xy
   924                           
   925                           ;RTC.c: 96:             }
   926  00093A  EFA8  F004         	goto	l2277
   927  00093E                     l2275:
   928                           
   929                           ; BSR set to: 0
   930                           ;RTC.c: 98:                 LCD_String_xy(1,14,"AM");
   931  00093E  0E0E               	movlw	14
   932  000940  6E0B               	movwf	LCD_String_xy@pos^0,c
   933  000942  0E33               	movlw	low STR_2
   934  000944  6E0C               	movwf	LCD_String_xy@msg^0,c
   935  000946  0E08               	movlw	high STR_2
   936  000948  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   937  00094A  0E01               	movlw	1
   938  00094C  EC38  F00C         	call	_LCD_String_xy
   939  000950                     l2277:
   940                           
   941                           ;RTC.c: 101:             hour = hour & (0x1f);
   942  000950  0E1F               	movlw	31
   943  000952  0100               	movlb	0	; () banked
   944  000954  15E1               	andwf	_hour& (0+255),w,b
   945  000956  6FE1               	movwf	_hour& (0+255),b
   946  000958  6BE2               	clrf	(_hour+1)& (0+255),b
   947  00095A                     
   948                           ; BSR set to: 0
   949                           ;RTC.c: 102:             sprintf(secs,"%x ",sec);
   950  00095A  0E9D               	movlw	low main@secs
   951  00095C  6F60               	movwf	sprintf@s& (0+255),b
   952  00095E  0E00               	movlw	high main@secs
   953  000960  6F61               	movwf	(sprintf@s+1)& (0+255),b
   954  000962  0E2B               	movlw	low STR_3
   955  000964  6F62               	movwf	sprintf@fmt& (0+255),b
   956  000966  0E08               	movlw	high STR_3
   957  000968  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   958  00096A  C0E5  F064         	movff	_sec,?_sprintf+4
   959  00096E  C0E6  F065         	movff	_sec+1,?_sprintf+5
   960  000972  EC38  F00B         	call	_sprintf	;wreg free
   961  000976                     
   962                           ;RTC.c: 103:             sprintf(mins,"%x:",min);
   963  000976  0EA7               	movlw	low main@mins
   964  000978  0100               	movlb	0	; () banked
   965  00097A  6F60               	movwf	sprintf@s& (0+255),b
   966  00097C  0E00               	movlw	high main@mins
   967  00097E  6F61               	movwf	(sprintf@s+1)& (0+255),b
   968  000980  0E1F               	movlw	low (STR_5+4)
   969  000982  6F62               	movwf	sprintf@fmt& (0+255),b
   970  000984  0E08               	movlw	high (STR_5+4)
   971  000986  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   972  000988  C0E3  F064         	movff	_min,?_sprintf+4
   973  00098C  C0E4  F065         	movff	_min+1,?_sprintf+5
   974  000990  EC38  F00B         	call	_sprintf	;wreg free
   975  000994                     
   976                           ;RTC.c: 104:             sprintf(hours,"Tim:%x:",hour);
   977  000994  0EB1               	movlw	low main@hours
   978  000996  0100               	movlb	0	; () banked
   979  000998  6F60               	movwf	sprintf@s& (0+255),b
   980  00099A  0E00               	movlw	high main@hours
   981  00099C  6F61               	movwf	(sprintf@s+1)& (0+255),b
   982  00099E  0E1B               	movlw	low STR_5
   983  0009A0  6F62               	movwf	sprintf@fmt& (0+255),b
   984  0009A2  0E08               	movlw	high STR_5
   985  0009A4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   986  0009A6  C0E1  F064         	movff	_hour,?_sprintf+4
   987  0009AA  C0E2  F065         	movff	_hour+1,?_sprintf+5
   988  0009AE  EC38  F00B         	call	_sprintf	;wreg free
   989  0009B2                     
   990                           ;RTC.c: 105:             LCD_String_xy(0,0,hours);
   991  0009B2  0E00               	movlw	0
   992  0009B4  6E0B               	movwf	LCD_String_xy@pos^0,c
   993  0009B6  0EB1               	movlw	low main@hours
   994  0009B8  6E0C               	movwf	LCD_String_xy@msg^0,c
   995  0009BA  0E00               	movlw	high main@hours
   996  0009BC  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   997  0009BE  0E00               	movlw	0
   998  0009C0  EC38  F00C         	call	_LCD_String_xy
   999  0009C4                     l2287:
  1000                           
  1001                           ;RTC.c: 106:             LCD_String(mins);
  1002  0009C4  0EA7               	movlw	low main@mins
  1003  0009C6  6E09               	movwf	LCD_String@msg^0,c
  1004  0009C8  0E00               	movlw	high main@mins
  1005  0009CA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1006  0009CC  ECDD  F00A         	call	_LCD_String	;wreg free
  1007  0009D0                     
  1008                           ;RTC.c: 107:             LCD_String(secs);
  1009  0009D0  0E9D               	movlw	low main@secs
  1010  0009D2  6E09               	movwf	LCD_String@msg^0,c
  1011  0009D4  0E00               	movlw	high main@secs
  1012  0009D6  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1013  0009D8  ECDD  F00A         	call	_LCD_String	;wreg free
  1014                           
  1015                           ;RTC.c: 108:         }
  1016  0009DC  EF2B  F005         	goto	l2305
  1017  0009E0                     l2291:
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;RTC.c: 111:             hour = hour & (0x3f);
  1021  0009E0  0E3F               	movlw	63
  1022  0009E2  15E1               	andwf	_hour& (0+255),w,b
  1023  0009E4  6FE1               	movwf	_hour& (0+255),b
  1024  0009E6  6BE2               	clrf	(_hour+1)& (0+255),b
  1025  0009E8                     
  1026                           ; BSR set to: 0
  1027                           ;RTC.c: 112:             sprintf(secs,"%x ",sec);
  1028  0009E8  0E9D               	movlw	low main@secs
  1029  0009EA  6F60               	movwf	sprintf@s& (0+255),b
  1030  0009EC  0E00               	movlw	high main@secs
  1031  0009EE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1032  0009F0  0E2B               	movlw	low STR_3
  1033  0009F2  6F62               	movwf	sprintf@fmt& (0+255),b
  1034  0009F4  0E08               	movlw	high STR_3
  1035  0009F6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1036  0009F8  C0E5  F064         	movff	_sec,?_sprintf+4
  1037  0009FC  C0E6  F065         	movff	_sec+1,?_sprintf+5
  1038  000A00  EC38  F00B         	call	_sprintf	;wreg free
  1039  000A04                     
  1040                           ;RTC.c: 113:             sprintf(mins,"%x:",min);
  1041  000A04  0EA7               	movlw	low main@mins
  1042  000A06  0100               	movlb	0	; () banked
  1043  000A08  6F60               	movwf	sprintf@s& (0+255),b
  1044  000A0A  0E00               	movlw	high main@mins
  1045  000A0C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1046  000A0E  0E1F               	movlw	low (STR_5+4)
  1047  000A10  6F62               	movwf	sprintf@fmt& (0+255),b
  1048  000A12  0E08               	movlw	high (STR_5+4)
  1049  000A14  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1050  000A16  C0E3  F064         	movff	_min,?_sprintf+4
  1051  000A1A  C0E4  F065         	movff	_min+1,?_sprintf+5
  1052  000A1E  EC38  F00B         	call	_sprintf	;wreg free
  1053  000A22                     
  1054                           ;RTC.c: 114:             sprintf(hours,"Tim:%x:",hour);
  1055  000A22  0EB1               	movlw	low main@hours
  1056  000A24  0100               	movlb	0	; () banked
  1057  000A26  6F60               	movwf	sprintf@s& (0+255),b
  1058  000A28  0E00               	movlw	high main@hours
  1059  000A2A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1060  000A2C  0E1B               	movlw	low STR_5
  1061  000A2E  6F62               	movwf	sprintf@fmt& (0+255),b
  1062  000A30  0E08               	movlw	high STR_5
  1063  000A32  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1064  000A34  C0E1  F064         	movff	_hour,?_sprintf+4
  1065  000A38  C0E2  F065         	movff	_hour+1,?_sprintf+5
  1066  000A3C  EC38  F00B         	call	_sprintf	;wreg free
  1067  000A40                     
  1068                           ;RTC.c: 115:             LCD_String_xy(0,0,hours);
  1069  000A40  0E00               	movlw	0
  1070  000A42  6E0B               	movwf	LCD_String_xy@pos^0,c
  1071  000A44  0EB1               	movlw	low main@hours
  1072  000A46  6E0C               	movwf	LCD_String_xy@msg^0,c
  1073  000A48  0E00               	movlw	high main@hours
  1074  000A4A  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1075  000A4C  0E00               	movlw	0
  1076  000A4E  EC38  F00C         	call	_LCD_String_xy
  1077  000A52  EFE2  F004         	goto	l2287
  1078  000A56                     l2305:
  1079                           
  1080                           ;RTC.c: 119:         alarma=0;
  1081  000A56  0E00               	movlw	0
  1082  000A58  0100               	movlb	0	; () banked
  1083  000A5A  6FD8               	movwf	(_alarma+1)& (0+255),b
  1084  000A5C  0E00               	movlw	0
  1085  000A5E  6FD7               	movwf	_alarma& (0+255),b
  1086  000A60                     l2307:
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;RTC.c: 122:         MSdelay(1000);
  1090  000A60  0E03               	movlw	3
  1091  000A62  6E02               	movwf	(MSdelay@val+1)^0,c
  1092  000A64  0EE8               	movlw	232
  1093  000A66  6E01               	movwf	MSdelay@val^0,c
  1094  000A68  ECAD  F00B         	call	_MSdelay	;wreg free
  1095  000A6C                     
  1096                           ;RTC.c: 124:         if (!alarma) {
  1097  000A6C  0100               	movlb	0	; () banked
  1098  000A6E  51D7               	movf	_alarma& (0+255),w,b
  1099  000A70  11D8               	iorwf	(_alarma+1)& (0+255),w,b
  1100  000A72  A4D8               	btfss	status,2,c
  1101  000A74  EF3E  F005         	goto	u1661
  1102  000A78  EF40  F005         	goto	u1660
  1103  000A7C                     u1661:
  1104  000A7C  EF4B  F004         	goto	l2263
  1105  000A80                     u1660:
  1106  000A80                     
  1107                           ; BSR set to: 0
  1108                           ;RTC.c: 126:             if (!PORTBbits.RB7) {
  1109  000A80  BE81               	btfsc	129,7,c	;volatile
  1110  000A82  EF45  F005         	goto	u1671
  1111  000A86  EF47  F005         	goto	u1670
  1112  000A8A                     u1671:
  1113  000A8A  EF58  F005         	goto	l2321
  1114  000A8E                     u1670:
  1115  000A8E                     
  1116                           ; BSR set to: 0
  1117                           ;RTC.c: 127:                 MSdelay(50);
  1118  000A8E  0E00               	movlw	0
  1119  000A90  6E02               	movwf	(MSdelay@val+1)^0,c
  1120  000A92  0E32               	movlw	50
  1121  000A94  6E01               	movwf	MSdelay@val^0,c
  1122  000A96  ECAD  F00B         	call	_MSdelay	;wreg free
  1123  000A9A                     
  1124                           ;RTC.c: 128:                 counter_min = 0;
  1125  000A9A  0E00               	movlw	0
  1126  000A9C  0100               	movlb	0	; () banked
  1127  000A9E  6FD4               	movwf	(_counter_min+1)& (0+255),b
  1128  000AA0  0E00               	movlw	0
  1129  000AA2  6FD3               	movwf	_counter_min& (0+255),b
  1130  000AA4                     
  1131                           ; BSR set to: 0
  1132                           ;RTC.c: 129:                 counter_sec = 0;
  1133  000AA4  0E00               	movlw	0
  1134  000AA6  6FD6               	movwf	(_counter_sec+1)& (0+255),b
  1135  000AA8  0E00               	movlw	0
  1136  000AAA  6FD5               	movwf	_counter_sec& (0+255),b
  1137  000AAC                     
  1138                           ; BSR set to: 0
  1139                           ;RTC.c: 130:                 count_pomo_fail++;
  1140  000AAC  4BCD               	infsnz	_count_pomo_fail& (0+255),f,b
  1141  000AAE  2BCE               	incf	(_count_pomo_fail+1)& (0+255),f,b
  1142  000AB0                     l2321:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;RTC.c: 133:             if (run) {
  1146  000AB0  51D1               	movf	_run& (0+255),w,b
  1147  000AB2  11D2               	iorwf	(_run+1)& (0+255),w,b
  1148  000AB4  B4D8               	btfsc	status,2,c
  1149  000AB6  EF5F  F005         	goto	u1681
  1150  000ABA  EF61  F005         	goto	u1680
  1151  000ABE                     u1681:
  1152  000ABE  EF64  F005         	goto	l86
  1153  000AC2                     u1680:
  1154  000AC2                     
  1155                           ; BSR set to: 0
  1156                           ;RTC.c: 134:                 LATDbits.LATD0 = 1;
  1157  000AC2  808C               	bsf	140,0,c	;volatile
  1158                           
  1159                           ;RTC.c: 135:             } else {
  1160  000AC4  EF65  F005         	goto	l2325
  1161  000AC8                     l86:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;RTC.c: 136:                 LATDbits.LATD1 = 1;
  1165  000AC8  828C               	bsf	140,1,c	;volatile
  1166  000ACA                     l2325:
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;RTC.c: 139:             int aux = Bcd2Dec(sec);
  1170  000ACA  C0E5  F007         	movff	_sec,Bcd2Dec@bcd
  1171  000ACE  C0E6  F008         	movff	_sec+1,Bcd2Dec@bcd+1
  1172  000AD2  EC17  F00C         	call	_Bcd2Dec	;wreg free
  1173  000AD6  C007  F0BB         	movff	?_Bcd2Dec,main@aux
  1174  000ADA  C008  F0BC         	movff	?_Bcd2Dec+1,main@aux+1
  1175  000ADE                     
  1176                           ;RTC.c: 140:             RTC_Read_Clock(0);
  1177  000ADE  0E00               	movlw	0
  1178  000AE0  ECD2  F00B         	call	_RTC_Read_Clock
  1179  000AE4                     
  1180                           ;RTC.c: 141:             I2C_Stop();
  1181  000AE4  EC8E  F00D         	call	_I2C_Stop	;wreg free
  1182  000AE8                     
  1183                           ;RTC.c: 142:             if (aux < Bcd2Dec(sec)) {
  1184  000AE8  C0E5  F007         	movff	_sec,Bcd2Dec@bcd
  1185  000AEC  C0E6  F008         	movff	_sec+1,Bcd2Dec@bcd+1
  1186  000AF0  EC17  F00C         	call	_Bcd2Dec	;wreg free
  1187  000AF4  5007               	movf	?_Bcd2Dec^0,w,c
  1188  000AF6  0100               	movlb	0	; () banked
  1189  000AF8  5DBB               	subwf	main@aux& (0+255),w,b
  1190  000AFA  51BC               	movf	(main@aux+1)& (0+255),w,b
  1191  000AFC  0A80               	xorlw	128
  1192  000AFE  6F72               	movwf	??_main& (0+255),b
  1193  000B00  5008               	movf	(?_Bcd2Dec+1)^0,w,c
  1194  000B02  0A80               	xorlw	128
  1195  000B04  5972               	subwfb	??_main& (0+255),w,b
  1196  000B06  B0D8               	btfsc	status,0,c
  1197  000B08  EF88  F005         	goto	u1691
  1198  000B0C  EF8A  F005         	goto	u1690
  1199  000B10                     u1691:
  1200  000B10  EFA1  F006         	goto	l2405
  1201  000B14                     u1690:
  1202  000B14                     
  1203                           ; BSR set to: 0
  1204                           ;RTC.c: 143:                 if(counter_sec >= 60) {
  1205  000B14  BFD6               	btfsc	(_counter_sec+1)& (0+255),7,b
  1206  000B16  EF96  F005         	goto	u1701
  1207  000B1A  51D6               	movf	(_counter_sec+1)& (0+255),w,b
  1208  000B1C  E109               	bnz	u1700
  1209  000B1E  0E3C               	movlw	60
  1210  000B20  5DD5               	subwf	_counter_sec& (0+255),w,b
  1211  000B22  A0D8               	btfss	status,0,c
  1212  000B24  EF96  F005         	goto	u1701
  1213  000B28  EF98  F005         	goto	u1700
  1214  000B2C                     u1701:
  1215  000B2C  EFAB  F005         	goto	l2341
  1216  000B30                     u1700:
  1217  000B30                     
  1218                           ; BSR set to: 0
  1219                           ;RTC.c: 144:                     counter_sec = (counter_sec % 60);
  1220  000B30  C0D5  F001         	movff	_counter_sec,___awmod@dividend
  1221  000B34  C0D6  F002         	movff	_counter_sec+1,___awmod@dividend+1
  1222  000B38  0E00               	movlw	0
  1223  000B3A  6E04               	movwf	(___awmod@divisor+1)^0,c
  1224  000B3C  0E3C               	movlw	60
  1225  000B3E  6E03               	movwf	___awmod@divisor^0,c
  1226  000B40  EC25  F00A         	call	___awmod	;wreg free
  1227  000B44  C001  F0D5         	movff	?___awmod,_counter_sec
  1228  000B48  C002  F0D6         	movff	?___awmod+1,_counter_sec+1
  1229  000B4C                     
  1230                           ;RTC.c: 145:                     counter_min++;
  1231  000B4C  0100               	movlb	0	; () banked
  1232  000B4E  4BD3               	infsnz	_counter_min& (0+255),f,b
  1233  000B50  2BD4               	incf	(_counter_min+1)& (0+255),f,b
  1234  000B52                     
  1235                           ; BSR set to: 0
  1236                           ;RTC.c: 146:                     LCD_Clear();
  1237  000B52  EC84  F00D         	call	_LCD_Clear	;wreg free
  1238  000B56                     l2341:
  1239                           
  1240                           ;RTC.c: 148:                 if(run) {
  1241  000B56  0100               	movlb	0	; () banked
  1242  000B58  51D1               	movf	_run& (0+255),w,b
  1243  000B5A  11D2               	iorwf	(_run+1)& (0+255),w,b
  1244  000B5C  B4D8               	btfsc	status,2,c
  1245  000B5E  EFB3  F005         	goto	u1711
  1246  000B62  EFB5  F005         	goto	u1710
  1247  000B66                     u1711:
  1248  000B66  EFCF  F005         	goto	l2351
  1249  000B6A                     u1710:
  1250  000B6A                     
  1251                           ; BSR set to: 0
  1252                           ;RTC.c: 149:                     if (counter_sec == 10) {
  1253  000B6A  0E0A               	movlw	10
  1254  000B6C  19D5               	xorwf	_counter_sec& (0+255),w,b
  1255  000B6E  11D6               	iorwf	(_counter_sec+1)& (0+255),w,b
  1256  000B70  A4D8               	btfss	status,2,c
  1257  000B72  EFBD  F005         	goto	u1721
  1258  000B76  EFBF  F005         	goto	u1720
  1259  000B7A                     u1721:
  1260  000B7A  EFE9  F005         	goto	l2361
  1261  000B7E                     u1720:
  1262  000B7E                     
  1263                           ; BSR set to: 0
  1264                           ;RTC.c: 150:                         counter_min = 0;
  1265  000B7E  0E00               	movlw	0
  1266  000B80  6FD4               	movwf	(_counter_min+1)& (0+255),b
  1267  000B82  0E00               	movlw	0
  1268  000B84  6FD3               	movwf	_counter_min& (0+255),b
  1269                           
  1270                           ;RTC.c: 151:                         counter_sec = 0;
  1271  000B86  0E00               	movlw	0
  1272  000B88  6FD6               	movwf	(_counter_sec+1)& (0+255),b
  1273  000B8A  0E00               	movlw	0
  1274  000B8C  6FD5               	movwf	_counter_sec& (0+255),b
  1275                           
  1276                           ;RTC.c: 152:                         run = 0;
  1277  000B8E  0E00               	movlw	0
  1278  000B90  6FD2               	movwf	(_run+1)& (0+255),b
  1279  000B92  0E00               	movlw	0
  1280  000B94  6FD1               	movwf	_run& (0+255),b
  1281  000B96                     
  1282                           ; BSR set to: 0
  1283                           ;RTC.c: 153:                         LATDbits.LATD0 = 0;
  1284  000B96  908C               	bcf	140,0,c	;volatile
  1285  000B98                     
  1286                           ; BSR set to: 0
  1287                           ;RTC.c: 154:                         LATDbits.LATD1 = 1;
  1288  000B98  828C               	bsf	140,1,c	;volatile
  1289  000B9A  EFE9  F005         	goto	l2361
  1290  000B9E                     l2351:
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;RTC.c: 157:                     if (counter_sec == 5) {
  1294  000B9E  0E05               	movlw	5
  1295  000BA0  19D5               	xorwf	_counter_sec& (0+255),w,b
  1296  000BA2  11D6               	iorwf	(_counter_sec+1)& (0+255),w,b
  1297  000BA4  A4D8               	btfss	status,2,c
  1298  000BA6  EFD7  F005         	goto	u1731
  1299  000BAA  EFD9  F005         	goto	u1730
  1300  000BAE                     u1731:
  1301  000BAE  EFE9  F005         	goto	l2361
  1302  000BB2                     u1730:
  1303  000BB2                     
  1304                           ; BSR set to: 0
  1305                           ;RTC.c: 158:                         counter_min = 0;
  1306  000BB2  0E00               	movlw	0
  1307  000BB4  6FD4               	movwf	(_counter_min+1)& (0+255),b
  1308  000BB6  0E00               	movlw	0
  1309  000BB8  6FD3               	movwf	_counter_min& (0+255),b
  1310                           
  1311                           ;RTC.c: 159:                         counter_sec = 0;
  1312  000BBA  0E00               	movlw	0
  1313  000BBC  6FD6               	movwf	(_counter_sec+1)& (0+255),b
  1314  000BBE  0E00               	movlw	0
  1315  000BC0  6FD5               	movwf	_counter_sec& (0+255),b
  1316                           
  1317                           ;RTC.c: 160:                         run = 1;
  1318  000BC2  0E00               	movlw	0
  1319  000BC4  6FD2               	movwf	(_run+1)& (0+255),b
  1320  000BC6  0E01               	movlw	1
  1321  000BC8  6FD1               	movwf	_run& (0+255),b
  1322  000BCA                     
  1323                           ; BSR set to: 0
  1324                           ;RTC.c: 161:                         LATDbits.LATD1 = 0;
  1325  000BCA  928C               	bcf	140,1,c	;volatile
  1326  000BCC                     
  1327                           ; BSR set to: 0
  1328                           ;RTC.c: 162:                         LATDbits.LATD0 = 1;
  1329  000BCC  808C               	bsf	140,0,c	;volatile
  1330  000BCE                     
  1331                           ; BSR set to: 0
  1332                           ;RTC.c: 163:                         count_pomo++;
  1333  000BCE  4BCF               	infsnz	_count_pomo& (0+255),f,b
  1334  000BD0  2BD0               	incf	(_count_pomo+1)& (0+255),f,b
  1335  000BD2                     l2361:
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;RTC.c: 166:                 if (counter_sec == 0 && run == 0) {
  1339  000BD2  51D5               	movf	_counter_sec& (0+255),w,b
  1340  000BD4  11D6               	iorwf	(_counter_sec+1)& (0+255),w,b
  1341  000BD6  A4D8               	btfss	status,2,c
  1342  000BD8  EFF0  F005         	goto	u1741
  1343  000BDC  EFF2  F005         	goto	u1740
  1344  000BE0                     u1741:
  1345  000BE0  EF30  F006         	goto	l2383
  1346  000BE4                     u1740:
  1347  000BE4                     
  1348                           ; BSR set to: 0
  1349  000BE4  51D1               	movf	_run& (0+255),w,b
  1350  000BE6  11D2               	iorwf	(_run+1)& (0+255),w,b
  1351  000BE8  A4D8               	btfss	status,2,c
  1352  000BEA  EFF9  F005         	goto	u1751
  1353  000BEE  EFFB  F005         	goto	u1750
  1354  000BF2                     u1751:
  1355  000BF2  EF30  F006         	goto	l2383
  1356  000BF6                     u1750:
  1357  000BF6                     
  1358                           ; BSR set to: 0
  1359                           ;RTC.c: 167:                     LCD_Clear();
  1360  000BF6  EC84  F00D         	call	_LCD_Clear	;wreg free
  1361  000BFA                     
  1362                           ;RTC.c: 168:                     sprintf(counters, "----Descanso----");
  1363  000BFA  0E93               	movlw	low main@counters
  1364  000BFC  0100               	movlb	0	; () banked
  1365  000BFE  6F60               	movwf	sprintf@s& (0+255),b
  1366  000C00  0E00               	movlw	high main@counters
  1367  000C02  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1368  000C04  0E01               	movlw	low STR_9
  1369  000C06  6F62               	movwf	sprintf@fmt& (0+255),b
  1370  000C08  0E08               	movlw	high STR_9
  1371  000C0A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1372  000C0C  EC38  F00B         	call	_sprintf	;wreg free
  1373  000C10                     
  1374                           ;RTC.c: 169:                     LCD_String_xy(0, 0, counters);
  1375  000C10  0E00               	movlw	0
  1376  000C12  6E0B               	movwf	LCD_String_xy@pos^0,c
  1377  000C14  0E93               	movlw	low main@counters
  1378  000C16  6E0C               	movwf	LCD_String_xy@msg^0,c
  1379  000C18  0E00               	movlw	high main@counters
  1380  000C1A  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1381  000C1C  0E00               	movlw	0
  1382  000C1E  EC38  F00C         	call	_LCD_String_xy
  1383  000C22                     
  1384                           ;RTC.c: 170:                     MSdelay(1000);
  1385  000C22  0E03               	movlw	3
  1386  000C24  6E02               	movwf	(MSdelay@val+1)^0,c
  1387  000C26  0EE8               	movlw	232
  1388  000C28  6E01               	movwf	MSdelay@val^0,c
  1389  000C2A  ECAD  F00B         	call	_MSdelay	;wreg free
  1390  000C2E                     
  1391                           ;RTC.c: 171:                     LCD_Clear();
  1392  000C2E  EC84  F00D         	call	_LCD_Clear	;wreg free
  1393  000C32                     
  1394                           ;RTC.c: 172:                     MSdelay(1000);
  1395  000C32  0E03               	movlw	3
  1396  000C34  6E02               	movwf	(MSdelay@val+1)^0,c
  1397  000C36  0EE8               	movlw	232
  1398  000C38  6E01               	movwf	MSdelay@val^0,c
  1399  000C3A  ECAD  F00B         	call	_MSdelay	;wreg free
  1400  000C3E                     
  1401                           ;RTC.c: 173:                     LCD_String_xy(0, 0, counters);
  1402  000C3E  0E00               	movlw	0
  1403  000C40  6E0B               	movwf	LCD_String_xy@pos^0,c
  1404  000C42  0E93               	movlw	low main@counters
  1405  000C44  6E0C               	movwf	LCD_String_xy@msg^0,c
  1406  000C46  0E00               	movlw	high main@counters
  1407  000C48  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1408  000C4A  0E00               	movlw	0
  1409  000C4C  EC38  F00C         	call	_LCD_String_xy
  1410  000C50                     
  1411                           ;RTC.c: 174:                     MSdelay(1000);
  1412  000C50  0E03               	movlw	3
  1413  000C52  6E02               	movwf	(MSdelay@val+1)^0,c
  1414  000C54  0EE8               	movlw	232
  1415  000C56  6E01               	movwf	MSdelay@val^0,c
  1416  000C58  ECAD  F00B         	call	_MSdelay	;wreg free
  1417  000C5C                     
  1418                           ;RTC.c: 175:                     LCD_Clear();
  1419  000C5C  EC84  F00D         	call	_LCD_Clear	;wreg free
  1420  000C60                     l2383:
  1421                           
  1422                           ;RTC.c: 178:                 int print_sec = Dec2Bcd(counter_sec++);
  1423  000C60  C0D5  F009         	movff	_counter_sec,Dec2Bcd@dec
  1424  000C64  C0D6  F00A         	movff	_counter_sec+1,Dec2Bcd@dec+1
  1425  000C68  EC0C  F00B         	call	_Dec2Bcd	;wreg free
  1426  000C6C  C009  F0BD         	movff	?_Dec2Bcd,main@print_sec
  1427  000C70  C00A  F0BE         	movff	?_Dec2Bcd+1,main@print_sec+1
  1428  000C74  0100               	movlb	0	; () banked
  1429  000C76  4BD5               	infsnz	_counter_sec& (0+255),f,b
  1430  000C78  2BD6               	incf	(_counter_sec+1)& (0+255),f,b
  1431  000C7A                     
  1432                           ; BSR set to: 0
  1433                           ;RTC.c: 179:                 int print_min = Dec2Bcd(counter_min);
  1434  000C7A  C0D3  F009         	movff	_counter_min,Dec2Bcd@dec
  1435  000C7E  C0D4  F00A         	movff	_counter_min+1,Dec2Bcd@dec+1
  1436  000C82  EC0C  F00B         	call	_Dec2Bcd	;wreg free
  1437  000C86  C009  F0BF         	movff	?_Dec2Bcd,main@print_min
  1438  000C8A  C00A  F0C0         	movff	?_Dec2Bcd+1,main@print_min+1
  1439  000C8E                     
  1440                           ;RTC.c: 180:                 int print_pomo = Dec2Bcd(count_pomo);
  1441  000C8E  C0CF  F009         	movff	_count_pomo,Dec2Bcd@dec
  1442  000C92  C0D0  F00A         	movff	_count_pomo+1,Dec2Bcd@dec+1
  1443  000C96  EC0C  F00B         	call	_Dec2Bcd	;wreg free
  1444  000C9A  C009  F0C1         	movff	?_Dec2Bcd,main@print_pomo
  1445  000C9E  C00A  F0C2         	movff	?_Dec2Bcd+1,main@print_pomo+1
  1446  000CA2                     
  1447                           ;RTC.c: 181:                 int print_fail = Dec2Bcd(count_pomo_fail);
  1448  000CA2  C0CD  F009         	movff	_count_pomo_fail,Dec2Bcd@dec
  1449  000CA6  C0CE  F00A         	movff	_count_pomo_fail+1,Dec2Bcd@dec+1
  1450  000CAA  EC0C  F00B         	call	_Dec2Bcd	;wreg free
  1451  000CAE  C009  F0C3         	movff	?_Dec2Bcd,main@print_fail
  1452  000CB2  C00A  F0C4         	movff	?_Dec2Bcd+1,main@print_fail+1
  1453  000CB6                     
  1454                           ;RTC.c: 183:                 sprintf(counters_min,"Temp:%x",print_min);
  1455  000CB6  0E7F               	movlw	low main@counters_min
  1456  000CB8  0100               	movlb	0	; () banked
  1457  000CBA  6F60               	movwf	sprintf@s& (0+255),b
  1458  000CBC  0E00               	movlw	high main@counters_min
  1459  000CBE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1460  000CC0  0E23               	movlw	low STR_10
  1461  000CC2  6F62               	movwf	sprintf@fmt& (0+255),b
  1462  000CC4  0E08               	movlw	high STR_10
  1463  000CC6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1464  000CC8  C0BF  F064         	movff	main@print_min,?_sprintf+4
  1465  000CCC  C0C0  F065         	movff	main@print_min+1,?_sprintf+5
  1466  000CD0  EC38  F00B         	call	_sprintf	;wreg free
  1467  000CD4                     
  1468                           ;RTC.c: 184:                 sprintf(counters_sec,"-%x",print_sec);
  1469  000CD4  0E75               	movlw	low main@counters_sec
  1470  000CD6  0100               	movlb	0	; () banked
  1471  000CD8  6F60               	movwf	sprintf@s& (0+255),b
  1472  000CDA  0E00               	movlw	high main@counters_sec
  1473  000CDC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1474  000CDE  0E2F               	movlw	low STR_11
  1475  000CE0  6F62               	movwf	sprintf@fmt& (0+255),b
  1476  000CE2  0E08               	movlw	high STR_11
  1477  000CE4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1478  000CE6  C0BD  F064         	movff	main@print_sec,?_sprintf+4
  1479  000CEA  C0BE  F065         	movff	main@print_sec+1,?_sprintf+5
  1480  000CEE  EC38  F00B         	call	_sprintf	;wreg free
  1481  000CF2                     
  1482                           ;RTC.c: 185:                 sprintf(counters_pomos," E%x F%x", print_pomo, print_fail);
  1483  000CF2  0E89               	movlw	low main@counters_pomos
  1484  000CF4  0100               	movlb	0	; () banked
  1485  000CF6  6F60               	movwf	sprintf@s& (0+255),b
  1486  000CF8  0E00               	movlw	high main@counters_pomos
  1487  000CFA  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1488  000CFC  0E12               	movlw	low STR_12
  1489  000CFE  6F62               	movwf	sprintf@fmt& (0+255),b
  1490  000D00  0E08               	movlw	high STR_12
  1491  000D02  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1492  000D04  C0C1  F064         	movff	main@print_pomo,?_sprintf+4
  1493  000D08  C0C2  F065         	movff	main@print_pomo+1,?_sprintf+5
  1494  000D0C  C0C3  F066         	movff	main@print_fail,?_sprintf+6
  1495  000D10  C0C4  F067         	movff	main@print_fail+1,?_sprintf+7
  1496  000D14  EC38  F00B         	call	_sprintf	;wreg free
  1497  000D18                     
  1498                           ;RTC.c: 186:                 LCD_String_xy(2,0,counters_min);
  1499  000D18  0E00               	movlw	0
  1500  000D1A  6E0B               	movwf	LCD_String_xy@pos^0,c
  1501  000D1C  0E7F               	movlw	low main@counters_min
  1502  000D1E  6E0C               	movwf	LCD_String_xy@msg^0,c
  1503  000D20  0E00               	movlw	high main@counters_min
  1504  000D22  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1505  000D24  0E02               	movlw	2
  1506  000D26  EC38  F00C         	call	_LCD_String_xy
  1507  000D2A                     
  1508                           ;RTC.c: 187:                 LCD_String(counters_sec);
  1509  000D2A  0E75               	movlw	low main@counters_sec
  1510  000D2C  6E09               	movwf	LCD_String@msg^0,c
  1511  000D2E  0E00               	movlw	high main@counters_sec
  1512  000D30  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1513  000D32  ECDD  F00A         	call	_LCD_String	;wreg free
  1514  000D36                     
  1515                           ;RTC.c: 188:                 LCD_String(counters_pomos);
  1516  000D36  0E89               	movlw	low main@counters_pomos
  1517  000D38  6E09               	movwf	LCD_String@msg^0,c
  1518  000D3A  0E00               	movlw	high main@counters_pomos
  1519  000D3C  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1520  000D3E  ECDD  F00A         	call	_LCD_String	;wreg free
  1521  000D42                     l2405:
  1522                           
  1523                           ;RTC.c: 190:             alarma=1;
  1524  000D42  0E00               	movlw	0
  1525  000D44  0100               	movlb	0	; () banked
  1526  000D46  6FD8               	movwf	(_alarma+1)& (0+255),b
  1527  000D48  0E01               	movlw	1
  1528  000D4A  6FD7               	movwf	_alarma& (0+255),b
  1529  000D4C  EF4B  F004         	goto	l2263
  1530  000D50  EF00  F000         	goto	start
  1531  000D54                     __end_of_main:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _sprintf *****************
  1535 ;; Defined at:
  1536 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1539 ;;		 -> main@counters_pomos(10), main@counters_sec(10), main@counters_min(10), main@counters(10), 
  1540 ;;		 -> main@hours(10), main@mins(10), main@secs(10), 
  1541 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1542 ;;		 -> STR_12(9), STR_11(4), STR_10(8), STR_9(17), 
  1543 ;;		 -> STR_8(8), STR_7(4), STR_6(4), STR_5(8), 
  1544 ;;		 -> STR_4(4), STR_3(4), 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  f               6   12[BANK0 ] struct _IO_FILE
  1547 ;;  ap              2   10[BANK0 ] PTR void [1]
  1548 ;;		 -> ?_sprintf(2), 
  1549 ;;  ret             2    0        int 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  2    0[BANK0 ] int 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1559 ;;      Params:         0       8       0       0       0       0       0       0       0
  1560 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1562 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1563 ;;Total ram usage:       18 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    7
  1566 ;; This function calls:
  1567 ;;		_vfprintf
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text1
  1574  001670                     __ptext1:
  1575                           	callstack 0
  1576  001670                     _sprintf:
  1577                           	callstack 23
  1578  001670  0E64               	movlw	low (?_sprintf+4)
  1579  001672  0100               	movlb	0	; () banked
  1580  001674  6F6A               	movwf	sprintf@ap& (0+255),b
  1581  001676  0E00               	movlw	high (?_sprintf+4)
  1582  001678  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1583  00167A  C060  F06C         	movff	sprintf@s,sprintf@f
  1584  00167E  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
  1585  001682                     
  1586                           ; BSR set to: 0
  1587  001682  0E00               	movlw	0
  1588  001684  6F6F               	movwf	(sprintf@f+3)& (0+255),b
  1589  001686  0E00               	movlw	0
  1590  001688  6F6E               	movwf	(sprintf@f+2)& (0+255),b
  1591  00168A                     
  1592                           ; BSR set to: 0
  1593  00168A  0E00               	movlw	0
  1594  00168C  6F71               	movwf	(sprintf@f+5)& (0+255),b
  1595  00168E  0E00               	movlw	0
  1596  001690  6F70               	movwf	(sprintf@f+4)& (0+255),b
  1597  001692                     
  1598                           ; BSR set to: 0
  1599  001692  0E6C               	movlw	low sprintf@f
  1600  001694  6E56               	movwf	vfprintf@fp^0,c
  1601  001696  0E00               	movlw	high sprintf@f
  1602  001698  6E57               	movwf	(vfprintf@fp+1)^0,c
  1603  00169A  C062  F058         	movff	sprintf@fmt,vfprintf@fmt
  1604  00169E  C063  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1605  0016A2  0E6A               	movlw	low sprintf@ap
  1606  0016A4  6E5A               	movwf	vfprintf@ap^0,c
  1607  0016A6  0E00               	movlw	high sprintf@ap
  1608  0016A8  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1609  0016AA  EC7D  F00A         	call	_vfprintf	;wreg free
  1610  0016AE  0100               	movlb	0	; () banked
  1611  0016B0  516E               	movf	(sprintf@f+2)& (0+255),w,b
  1612  0016B2  2560               	addwf	sprintf@s& (0+255),w,b
  1613  0016B4  6ED9               	movwf	fsr2l,c
  1614  0016B6  516F               	movf	(sprintf@f+3)& (0+255),w,b
  1615  0016B8  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1616  0016BA  6EDA               	movwf	fsr2h,c
  1617  0016BC  0E00               	movlw	0
  1618  0016BE  6EDF               	movwf	indf2,c
  1619  0016C0                     
  1620                           ; BSR set to: 0
  1621  0016C0  0012               	return		;funcret
  1622  0016C2                     __end_of_sprintf:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _vfprintf *****************
  1626 ;; Defined at:
  1627 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1630 ;;		 -> sprintf@f(6), 
  1631 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1632 ;;		 -> STR_12(9), STR_11(4), STR_10(8), STR_9(17), 
  1633 ;;		 -> STR_8(8), STR_7(4), STR_6(4), STR_5(8), 
  1634 ;;		 -> STR_4(4), STR_3(4), 
  1635 ;;  ap              2   89[COMRAM] PTR PTR void 
  1636 ;;		 -> sprintf@ap(2), 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1639 ;;		 -> STR_12(9), STR_11(4), STR_10(8), STR_9(17), 
  1640 ;;		 -> STR_8(8), STR_7(4), STR_6(4), STR_5(8), 
  1641 ;;		 -> STR_4(4), STR_3(4), 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2   85[COMRAM] int 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1651 ;;      Params:         6       0       0       0       0       0       0       0       0
  1652 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1654 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1655 ;;Total ram usage:        8 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    6
  1658 ;; This function calls:
  1659 ;;		_vfpfcnvrt
  1660 ;; This function is called by:
  1661 ;;		_sprintf
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text2
  1666  0014FA                     __ptext2:
  1667                           	callstack 0
  1668  0014FA                     _vfprintf:
  1669                           	callstack 23
  1670  0014FA                     
  1671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1672  0014FA  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1673  0014FE  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1674  001502                     
  1675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1676  001502  0E00               	movlw	0
  1677  001504  0100               	movlb	0	; () banked
  1678  001506  6FC8               	movwf	(_nout+1)& (0+255),b
  1679  001508  0E00               	movlw	0
  1680  00150A  6FC7               	movwf	_nout& (0+255),b
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1683  00150C  EF9B  F00A         	goto	l2147
  1684  001510                     l2145:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1688  001510  C056  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1689  001514  C057  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1690  001518  0E5C               	movlw	low vfprintf@cfmt
  1691  00151A  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1692  00151C  0E00               	movlw	high vfprintf@cfmt
  1693  00151E  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1694  001520  C05A  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1695  001524  C05B  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1696  001528  EC15  F008         	call	_vfpfcnvrt	;wreg free
  1697  00152C  5043               	movf	?_vfpfcnvrt^0,w,c
  1698  00152E  0100               	movlb	0	; () banked
  1699  001530  27C7               	addwf	_nout& (0+255),f,b
  1700  001532  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1701  001534  23C8               	addwfc	(_nout+1)& (0+255),f,b
  1702  001536                     l2147:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1706  001536  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1707  00153A  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1708  00153E                     	if	0	;tblptru may be non-zero
  1709  00153E                     	endif
  1710  00153E                     	if	0	;tblptru may be non-zero
  1711  00153E                     	endif
  1712  00153E  0008               	tblrd		*
  1713  001540  50F5               	movf	tablat,w,c
  1714  001542  0900               	iorlw	0
  1715  001544  A4D8               	btfss	status,2,c
  1716  001546  EFA7  F00A         	goto	u1571
  1717  00154A  EFA9  F00A         	goto	u1570
  1718  00154E                     u1571:
  1719  00154E  EF88  F00A         	goto	l2145
  1720  001552                     u1570:
  1721  001552                     
  1722                           ; BSR set to: 0
  1723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1724  001552  C0C7  F056         	movff	_nout,?_vfprintf
  1725  001556  C0C8  F057         	movff	_nout+1,?_vfprintf+1
  1726  00155A                     
  1727                           ; BSR set to: 0
  1728  00155A  0012               	return		;funcret
  1729  00155C                     __end_of_vfprintf:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function _vfpfcnvrt *****************
  1733 ;; Defined at:
  1734 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1737 ;;		 -> sprintf@f(6), 
  1738 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1739 ;;		 -> vfprintf@cfmt(2), 
  1740 ;;  ap              2   70[COMRAM] PTR PTR void 
  1741 ;;		 -> sprintf@ap(2), 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  llu             8   76[COMRAM] unsigned long long 
  1744 ;;  ll              8    0        long long 
  1745 ;;  f               4    0        long long 
  1746 ;;  vp              3    0        PTR void 
  1747 ;;  ct              3    0        unsigned char [3]
  1748 ;;  cp              3    0        PTR unsigned char 
  1749 ;;  i               2    0        int 
  1750 ;;  done            2    0        int 
  1751 ;;  c               1   84[COMRAM] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  2   66[COMRAM] int 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1761 ;;      Params:         6       0       0       0       0       0       0       0       0
  1762 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1763 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1764 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1765 ;;Total ram usage:       19 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    5
  1768 ;; This function calls:
  1769 ;;		_fputc
  1770 ;;		_xtoa
  1771 ;; This function is called by:
  1772 ;;		_vfprintf
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text3
  1777  00102A                     __ptext3:
  1778                           	callstack 0
  1779  00102A                     _vfpfcnvrt:
  1780                           	callstack 23
  1781  00102A                     
  1782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1783  00102A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1784  00102E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1785  001032  CFDE FFF6          	movff	postinc2,tblptrl
  1786  001036  CFDD FFF7          	movff	postdec2,tblptrh
  1787  00103A                     	if	0	;tblptru may be non-zero
  1788  00103A                     	endif
  1789  00103A                     	if	0	;tblptru may be non-zero
  1790  00103A                     	endif
  1791  00103A  0008               	tblrd		*
  1792  00103C  50F5               	movf	tablat,w,c
  1793  00103E  0A25               	xorlw	37
  1794  001040  A4D8               	btfss	status,2,c
  1795  001042  EF25  F008         	goto	u1321
  1796  001046  EF27  F008         	goto	u1320
  1797  00104A                     u1321:
  1798  00104A  EFE1  F008         	goto	l1987
  1799  00104E                     u1320:
  1800  00104E                     
  1801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1802  00104E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1803  001052  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1804  001056  2ADE               	incf	postinc2,f,c
  1805  001058  0E00               	movlw	0
  1806  00105A  22DD               	addwfc	postdec2,f,c
  1807  00105C                     
  1808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1809  00105C  0E00               	movlw	0
  1810  00105E  0100               	movlb	0	; () banked
  1811  001060  6FCA               	movwf	(_width+1)& (0+255),b
  1812  001062  0E00               	movlw	0
  1813  001064  6FC9               	movwf	_width& (0+255),b
  1814  001066  C0C9  F05E         	movff	_width,_flags
  1815  00106A  C0CA  F05F         	movff	_width+1,_flags+1
  1816  00106E                     
  1817                           ; BSR set to: 0
  1818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1819  00106E  69CB               	setf	_prec& (0+255),b
  1820  001070  69CC               	setf	(_prec+1)& (0+255),b
  1821  001072                     
  1822                           ; BSR set to: 0
  1823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1824  001072  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1825  001076  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1826  00107A  CFDE FFF6          	movff	postinc2,tblptrl
  1827  00107E  CFDD FFF7          	movff	postdec2,tblptrh
  1828  001082                     	if	0	;tblptru may be non-zero
  1829  001082                     	endif
  1830  001082                     	if	0	;tblptru may be non-zero
  1831  001082                     	endif
  1832  001082  0008               	tblrd		*
  1833  001084  50F5               	movf	tablat,w,c
  1834  001086  0A78               	xorlw	120
  1835  001088  B4D8               	btfsc	status,2,c
  1836  00108A  EF49  F008         	goto	u1331
  1837  00108E  EF4B  F008         	goto	u1330
  1838  001092                     u1331:
  1839  001092  EF5D  F008         	goto	l1961
  1840  001096                     u1330:
  1841  001096                     
  1842                           ; BSR set to: 0
  1843  001096  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1844  00109A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1845  00109E  CFDE FFF6          	movff	postinc2,tblptrl
  1846  0010A2  CFDD FFF7          	movff	postdec2,tblptrh
  1847  0010A6                     	if	0	;tblptru may be non-zero
  1848  0010A6                     	endif
  1849  0010A6                     	if	0	;tblptru may be non-zero
  1850  0010A6                     	endif
  1851  0010A6  0008               	tblrd		*
  1852  0010A8  50F5               	movf	tablat,w,c
  1853  0010AA  0A58               	xorlw	88
  1854  0010AC  A4D8               	btfss	status,2,c
  1855  0010AE  EF5B  F008         	goto	u1341
  1856  0010B2  EF5D  F008         	goto	u1340
  1857  0010B6                     u1341:
  1858  0010B6  EFAB  F008         	goto	l1971
  1859  0010BA                     u1340:
  1860  0010BA                     l1961:
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1864  0010BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1865  0010BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1866  0010C2  CFDE FFF6          	movff	postinc2,tblptrl
  1867  0010C6  CFDD FFF7          	movff	postdec2,tblptrh
  1868  0010CA                     	if	0	;tblptru may be non-zero
  1869  0010CA                     	endif
  1870  0010CA                     	if	0	;tblptru may be non-zero
  1871  0010CA                     	endif
  1872  0010CA  0008               	tblrd		*
  1873  0010CC  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1874  0010D0                     
  1875                           ; BSR set to: 0
  1876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1877  0010D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1878  0010D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1879  0010D8  2ADE               	incf	postinc2,f,c
  1880  0010DA  0E00               	movlw	0
  1881  0010DC  22DD               	addwfc	postdec2,f,c
  1882  0010DE                     
  1883                           ; BSR set to: 0
  1884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1885  0010DE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1886  0010E2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1887  0010E6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1888  0010EA  0E02               	movlw	2
  1889  0010EC  26DE               	addwf	postinc2,f,c
  1890  0010EE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1891  0010F2  0E00               	movlw	0
  1892  0010F4  22DD               	addwfc	postdec2,f,c
  1893  0010F6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1894  0010FA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1895  0010FE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  1896  001102  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  1897  001106  C04B  F04D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1898  00110A  C04C  F04E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1899  00110E  6A4F               	clrf	(vfpfcnvrt@llu+2)^0,c
  1900  001110  6A50               	clrf	(vfpfcnvrt@llu+3)^0,c
  1901  001112  6A51               	clrf	(vfpfcnvrt@llu+4)^0,c
  1902  001114  6A52               	clrf	(vfpfcnvrt@llu+5)^0,c
  1903  001116  6A53               	clrf	(vfpfcnvrt@llu+6)^0,c
  1904  001118  6A54               	clrf	(vfpfcnvrt@llu+7)^0,c
  1905  00111A                     
  1906                           ; BSR set to: 0
  1907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1908  00111A  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1909  00111E  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1910  001122  C04D  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1911  001126  C04E  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1912  00112A  C04F  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1913  00112E  C050  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1914  001132  C051  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1915  001136  C052  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1916  00113A  C053  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1917  00113E  C054  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1918  001142  C055  F026         	movff	vfpfcnvrt@c,xtoa@x
  1919  001146  ECAA  F006         	call	_xtoa	;wreg free
  1920  00114A  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  1921  00114E  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1922  001152  EFFC  F008         	goto	l1014
  1923  001156                     l1971:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1927  001156  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1928  00115A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1929  00115E  CFDE FFF6          	movff	postinc2,tblptrl
  1930  001162  CFDD FFF7          	movff	postdec2,tblptrh
  1931  001166                     	if	0	;tblptru may be non-zero
  1932  001166                     	endif
  1933  001166                     	if	0	;tblptru may be non-zero
  1934  001166                     	endif
  1935  001166  0008               	tblrd		*
  1936  001168  50F5               	movf	tablat,w,c
  1937  00116A  0A25               	xorlw	37
  1938  00116C  A4D8               	btfss	status,2,c
  1939  00116E  EFBB  F008         	goto	u1351
  1940  001172  EFBD  F008         	goto	u1350
  1941  001176                     u1351:
  1942  001176  EFD4  F008         	goto	l1981
  1943  00117A                     u1350:
  1944  00117A                     
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1947  00117A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1948  00117E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1949  001182  2ADE               	incf	postinc2,f,c
  1950  001184  0E00               	movlw	0
  1951  001186  22DD               	addwfc	postdec2,f,c
  1952  001188                     
  1953                           ; BSR set to: 0
  1954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1955  001188  0E00               	movlw	0
  1956  00118A  6E02               	movwf	(fputc@c+1)^0,c
  1957  00118C  0E25               	movlw	37
  1958  00118E  6E01               	movwf	fputc@c^0,c
  1959  001190  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1960  001194  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1961  001198  ECFD  F008         	call	_fputc	;wreg free
  1962  00119C                     l1977:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1965  00119C  0E00               	movlw	0
  1966  00119E  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1967  0011A0  0E01               	movlw	1
  1968  0011A2  6E43               	movwf	?_vfpfcnvrt^0,c
  1969  0011A4  EFFC  F008         	goto	l1014
  1970  0011A8                     l1981:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1974  0011A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1975  0011AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1976  0011B0  2ADE               	incf	postinc2,f,c
  1977  0011B2  0E00               	movlw	0
  1978  0011B4  22DD               	addwfc	postdec2,f,c
  1979  0011B6                     
  1980                           ; BSR set to: 0
  1981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1982  0011B6  0E00               	movlw	0
  1983  0011B8  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1984  0011BA  0E00               	movlw	0
  1985  0011BC  6E43               	movwf	?_vfpfcnvrt^0,c
  1986  0011BE  EFFC  F008         	goto	l1014
  1987  0011C2                     l1987:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1990  0011C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1991  0011C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1992  0011CA  CFDE FFF6          	movff	postinc2,tblptrl
  1993  0011CE  CFDD FFF7          	movff	postdec2,tblptrh
  1994  0011D2                     	if	0	;tblptru may be non-zero
  1995  0011D2                     	endif
  1996  0011D2                     	if	0	;tblptru may be non-zero
  1997  0011D2                     	endif
  1998  0011D2  0008               	tblrd		*
  1999  0011D4  50F5               	movf	tablat,w,c
  2000  0011D6  6E01               	movwf	fputc@c^0,c
  2001  0011D8  6A02               	clrf	(fputc@c+1)^0,c
  2002  0011DA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2003  0011DE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2004  0011E2  ECFD  F008         	call	_fputc	;wreg free
  2005  0011E6                     
  2006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2007  0011E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2008  0011EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2009  0011EE  2ADE               	incf	postinc2,f,c
  2010  0011F0  0E00               	movlw	0
  2011  0011F2  22DD               	addwfc	postdec2,f,c
  2012  0011F4  EFCE  F008         	goto	l1977
  2013  0011F8                     l1014:
  2014  0011F8  0012               	return		;funcret
  2015  0011FA                     __end_of_vfpfcnvrt:
  2016                           	callstack 0
  2017                           
  2018 ;; *************** function _xtoa *****************
  2019 ;; Defined at:
  2020 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2023 ;;		 -> sprintf@f(6), 
  2024 ;;  d               8   29[COMRAM] unsigned long long 
  2025 ;;  x               1   37[COMRAM] unsigned char 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  n               8   54[COMRAM] unsigned long long 
  2028 ;;  c               2   64[COMRAM] int 
  2029 ;;  i               2   62[COMRAM] int 
  2030 ;;  w               2   52[COMRAM] int 
  2031 ;;  p               2   50[COMRAM] int 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2   27[COMRAM] int 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2041 ;;      Params:        11       0       0       0       0       0       0       0       0
  2042 ;;      Locals:        20       0       0       0       0       0       0       0       0
  2043 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2044 ;;      Totals:        39       0       0       0       0       0       0       0       0
  2045 ;;Total ram usage:       39 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    4
  2048 ;; This function calls:
  2049 ;;		_isalpha
  2050 ;;		_isupper
  2051 ;;		_pad
  2052 ;;		_toupper
  2053 ;; This function is called by:
  2054 ;;		_vfpfcnvrt
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text4
  2059  000D54                     __ptext4:
  2060                           	callstack 0
  2061  000D54                     _xtoa:
  2062                           	callstack 23
  2063  000D54                     
  2064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  2065  000D54  0100               	movlb	0	; () banked
  2066  000D56  BFCC               	btfsc	(_prec+1)& (0+255),7,b
  2067  000D58  EFB0  F006         	goto	u1121
  2068  000D5C  EFB2  F006         	goto	u1120
  2069  000D60                     u1121:
  2070  000D60  EFB3  F006         	goto	l1847
  2071  000D64                     u1120:
  2072  000D64                     
  2073                           ; BSR set to: 0
  2074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  2075  000D64  925E               	bcf	_flags^0,1,c
  2076  000D66                     l1847:
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  2080  000D66  BFCC               	btfsc	(_prec+1)& (0+255),7,b
  2081  000D68  EFC0  F006         	goto	u1130
  2082  000D6C  51CC               	movf	(_prec+1)& (0+255),w,b
  2083  000D6E  E106               	bnz	u1131
  2084  000D70  05CB               	decf	_prec& (0+255),w,b
  2085  000D72  B0D8               	btfsc	status,0,c
  2086  000D74  EFBE  F006         	goto	u1131
  2087  000D78  EFC0  F006         	goto	u1130
  2088  000D7C                     u1131:
  2089  000D7C  EFC6  F006         	goto	l982
  2090  000D80                     u1130:
  2091  000D80                     
  2092                           ; BSR set to: 0
  2093  000D80  0E00               	movlw	0
  2094  000D82  6E34               	movwf	(xtoa@p+1)^0,c
  2095  000D84  0E01               	movlw	1
  2096  000D86  6E33               	movwf	xtoa@p^0,c
  2097  000D88  EFCA  F006         	goto	l984
  2098  000D8C                     l982:
  2099                           
  2100                           ; BSR set to: 0
  2101  000D8C  C0CB  F033         	movff	_prec,xtoa@p
  2102  000D90  C0CC  F034         	movff	_prec+1,xtoa@p+1
  2103  000D94                     l984:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  2107  000D94  C0C9  F035         	movff	_width,xtoa@w
  2108  000D98  C0CA  F036         	movff	_width+1,xtoa@w+1
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2111  000D9C  A85E               	btfss	_flags^0,4,c
  2112  000D9E  EFD3  F006         	goto	u1141
  2113  000DA2  EFD5  F006         	goto	u1140
  2114  000DA6                     u1141:
  2115  000DA6  EFD9  F006         	goto	l1853
  2116  000DAA                     u1140:
  2117  000DAA                     
  2118                           ; BSR set to: 0
  2119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  2120  000DAA  0EFE               	movlw	254
  2121  000DAC  2635               	addwf	xtoa@w^0,f,c
  2122  000DAE  0EFF               	movlw	255
  2123  000DB0  2236               	addwfc	(xtoa@w+1)^0,f,c
  2124  000DB2                     l1853:
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  2128  000DB2  C01E  F037         	movff	xtoa@d,xtoa@n
  2129  000DB6  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  2130  000DBA  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  2131  000DBE  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  2132  000DC2  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  2133  000DC6  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  2134  000DCA  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  2135  000DCE  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  2136  000DD2                     
  2137                           ; BSR set to: 0
  2138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  2139  000DD2  0E00               	movlw	0
  2140  000DD4  6E40               	movwf	(xtoa@i+1)^0,c
  2141  000DD6  0E1F               	movlw	31
  2142  000DD8  6E3F               	movwf	xtoa@i^0,c
  2143  000DDA                     
  2144                           ; BSR set to: 0
  2145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  2146  000DDA  0E00               	movlw	0
  2147  000DDC  0101               	movlb	1	; () banked
  2148  000DDE  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2151  000DE0  EFA5  F007         	goto	l1889
  2152  000DE4                     l1859:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  2155  000DE4  063F               	decf	xtoa@i^0,f,c
  2156  000DE6  A0D8               	btfss	status,0,c
  2157  000DE8  0640               	decf	(xtoa@i+1)^0,f,c
  2158  000DEA                     
  2159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  2160  000DEA  0E0F               	movlw	15
  2161  000DEC  1437               	andwf	xtoa@n^0,w,c
  2162  000DEE  6E41               	movwf	xtoa@c^0,c
  2163  000DF0  6A42               	clrf	(xtoa@c+1)^0,c
  2164  000DF2                     
  2165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2166  000DF2  BE42               	btfsc	(xtoa@c+1)^0,7,c
  2167  000DF4  EF05  F007         	goto	u1151
  2168  000DF8  5042               	movf	(xtoa@c+1)^0,w,c
  2169  000DFA  E109               	bnz	u1150
  2170  000DFC  0E0A               	movlw	10
  2171  000DFE  5C41               	subwf	xtoa@c^0,w,c
  2172  000E00  A0D8               	btfss	status,0,c
  2173  000E02  EF05  F007         	goto	u1151
  2174  000E06  EF07  F007         	goto	u1150
  2175  000E0A                     u1151:
  2176  000E0A  EF0F  F007         	goto	l1867
  2177  000E0E                     u1150:
  2178  000E0E  0E57               	movlw	87
  2179  000E10  2441               	addwf	xtoa@c^0,w,c
  2180  000E12  6E41               	movwf	xtoa@c^0,c
  2181  000E14  0E00               	movlw	0
  2182  000E16  2042               	addwfc	(xtoa@c+1)^0,w,c
  2183  000E18  6E42               	movwf	(xtoa@c+1)^0,c
  2184  000E1A  EF15  F007         	goto	l991
  2185  000E1E                     l1867:
  2186  000E1E  0E30               	movlw	48
  2187  000E20  2441               	addwf	xtoa@c^0,w,c
  2188  000E22  6E41               	movwf	xtoa@c^0,c
  2189  000E24  0E00               	movlw	0
  2190  000E26  2042               	addwfc	(xtoa@c+1)^0,w,c
  2191  000E28  6E42               	movwf	(xtoa@c+1)^0,c
  2192  000E2A                     l991:
  2193  000E2A  0EBF               	movlw	191
  2194  000E2C  6E27               	movwf	??_xtoa^0,c
  2195  000E2E  0EFF               	movlw	255
  2196  000E30  6E28               	movwf	(??_xtoa+1)^0,c
  2197  000E32  5026               	movf	xtoa@x^0,w,c
  2198  000E34  6E29               	movwf	(??_xtoa+2)^0,c
  2199  000E36  6A2A               	clrf	(??_xtoa+3)^0,c
  2200  000E38  5027               	movf	??_xtoa^0,w,c
  2201  000E3A  2629               	addwf	(??_xtoa+2)^0,f,c
  2202  000E3C  5028               	movf	(??_xtoa+1)^0,w,c
  2203  000E3E  222A               	addwfc	(??_xtoa+3)^0,f,c
  2204  000E40  502A               	movf	(??_xtoa+3)^0,w,c
  2205  000E42  E10A               	bnz	u1160
  2206  000E44  0E1A               	movlw	26
  2207  000E46  5C29               	subwf	(??_xtoa+2)^0,w,c
  2208  000E48  A0D8               	btfss	status,0,c
  2209  000E4A  EF29  F007         	goto	u1161
  2210  000E4E  EF2C  F007         	goto	u1160
  2211  000E52                     u1161:
  2212  000E52  0E01               	movlw	1
  2213  000E54  EF2D  F007         	goto	u1170
  2214  000E58                     u1160:
  2215  000E58  0E00               	movlw	0
  2216  000E5A                     u1170:
  2217  000E5A  6E2F               	movwf	_xtoa$1125^0,c
  2218  000E5C  6A30               	clrf	(_xtoa$1125+1)^0,c
  2219  000E5E  502F               	movf	_xtoa$1125^0,w,c
  2220  000E60  1030               	iorwf	(_xtoa$1125+1)^0,w,c
  2221  000E62  B4D8               	btfsc	status,2,c
  2222  000E64  EF36  F007         	goto	u1181
  2223  000E68  EF38  F007         	goto	u1180
  2224  000E6C                     u1181:
  2225  000E6C  EF68  F007         	goto	l1881
  2226  000E70                     u1180:
  2227  000E70  0E9F               	movlw	159
  2228  000E72  6E27               	movwf	??_xtoa^0,c
  2229  000E74  0EFF               	movlw	255
  2230  000E76  6E28               	movwf	(??_xtoa+1)^0,c
  2231  000E78  0E20               	movlw	32
  2232  000E7A  1041               	iorwf	xtoa@c^0,w,c
  2233  000E7C  6E29               	movwf	(??_xtoa+2)^0,c
  2234  000E7E  0E00               	movlw	0
  2235  000E80  1042               	iorwf	(xtoa@c+1)^0,w,c
  2236  000E82  6E2A               	movwf	(??_xtoa+3)^0,c
  2237  000E84  5027               	movf	??_xtoa^0,w,c
  2238  000E86  2629               	addwf	(??_xtoa+2)^0,f,c
  2239  000E88  5028               	movf	(??_xtoa+1)^0,w,c
  2240  000E8A  222A               	addwfc	(??_xtoa+3)^0,f,c
  2241  000E8C  502A               	movf	(??_xtoa+3)^0,w,c
  2242  000E8E  E10A               	bnz	u1190
  2243  000E90  0E1A               	movlw	26
  2244  000E92  5C29               	subwf	(??_xtoa+2)^0,w,c
  2245  000E94  A0D8               	btfss	status,0,c
  2246  000E96  EF4F  F007         	goto	u1191
  2247  000E9A  EF52  F007         	goto	u1190
  2248  000E9E                     u1191:
  2249  000E9E  0E01               	movlw	1
  2250  000EA0  EF53  F007         	goto	u1200
  2251  000EA4                     u1190:
  2252  000EA4  0E00               	movlw	0
  2253  000EA6                     u1200:
  2254  000EA6  6E31               	movwf	_xtoa$1126^0,c
  2255  000EA8  6A32               	clrf	(_xtoa$1126+1)^0,c
  2256  000EAA  5031               	movf	_xtoa$1126^0,w,c
  2257  000EAC  1032               	iorwf	(_xtoa$1126+1)^0,w,c
  2258  000EAE  B4D8               	btfsc	status,2,c
  2259  000EB0  EF5C  F007         	goto	u1211
  2260  000EB4  EF5E  F007         	goto	u1210
  2261  000EB8                     u1211:
  2262  000EB8  EF68  F007         	goto	l1881
  2263  000EBC                     u1210:
  2264  000EBC                     
  2265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2266  000EBC  C041  F007         	movff	xtoa@c,toupper@c
  2267  000EC0  C042  F008         	movff	xtoa@c+1,toupper@c+1
  2268  000EC4  ECAE  F00A         	call	_toupper	;wreg free
  2269  000EC8  C007  F041         	movff	?_toupper,xtoa@c
  2270  000ECC  C008  F042         	movff	?_toupper+1,xtoa@c+1
  2271  000ED0                     l1881:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2274  000ED0  0E00               	movlw	low _dbuf
  2275  000ED2  243F               	addwf	xtoa@i^0,w,c
  2276  000ED4  6ED9               	movwf	fsr2l,c
  2277  000ED6  0E01               	movlw	high _dbuf
  2278  000ED8  2040               	addwfc	(xtoa@i+1)^0,w,c
  2279  000EDA  6EDA               	movwf	fsr2h,c
  2280  000EDC  C041  FFDF         	movff	xtoa@c,indf2
  2281  000EE0                     
  2282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  2283  000EE0  0633               	decf	xtoa@p^0,f,c
  2284  000EE2  A0D8               	btfss	status,0,c
  2285  000EE4  0634               	decf	(xtoa@p+1)^0,f,c
  2286  000EE6                     
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  2288  000EE6  0635               	decf	xtoa@w^0,f,c
  2289  000EE8  A0D8               	btfss	status,0,c
  2290  000EEA  0636               	decf	(xtoa@w+1)^0,f,c
  2291  000EEC                     
  2292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2293  000EEC  C037  F027         	movff	xtoa@n,??_xtoa
  2294  000EF0  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  2295  000EF4  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  2296  000EF8  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  2297  000EFC  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  2298  000F00  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  2299  000F04  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  2300  000F08  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  2301  000F0C  0E05               	movlw	5
  2302  000F0E  EF92  F007         	goto	u1220
  2303  000F12                     u1225:
  2304  000F12  90D8               	bcf	status,0,c
  2305  000F14  322E               	rrcf	(??_xtoa+7)^0,f,c
  2306  000F16  322D               	rrcf	(??_xtoa+6)^0,f,c
  2307  000F18  322C               	rrcf	(??_xtoa+5)^0,f,c
  2308  000F1A  322B               	rrcf	(??_xtoa+4)^0,f,c
  2309  000F1C  322A               	rrcf	(??_xtoa+3)^0,f,c
  2310  000F1E  3229               	rrcf	(??_xtoa+2)^0,f,c
  2311  000F20  3228               	rrcf	(??_xtoa+1)^0,f,c
  2312  000F22  3227               	rrcf	??_xtoa^0,f,c
  2313  000F24                     u1220:
  2314  000F24  2EE8               	decfsz	wreg,f,c
  2315  000F26  EF89  F007         	goto	u1225
  2316  000F2A  C027  F037         	movff	??_xtoa,xtoa@n
  2317  000F2E  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  2318  000F32  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  2319  000F36  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  2320  000F3A  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  2321  000F3E  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  2322  000F42  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  2323  000F46  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  2324  000F4A                     l1889:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2327  000F4A  BE40               	btfsc	(xtoa@i+1)^0,7,c
  2328  000F4C  EFB1  F007         	goto	u1231
  2329  000F50  5040               	movf	(xtoa@i+1)^0,w,c
  2330  000F52  E109               	bnz	u1230
  2331  000F54  0E02               	movlw	2
  2332  000F56  5C3F               	subwf	xtoa@i^0,w,c
  2333  000F58  A0D8               	btfss	status,0,c
  2334  000F5A  EFB1  F007         	goto	u1231
  2335  000F5E  EFB3  F007         	goto	u1230
  2336  000F62                     u1231:
  2337  000F62  EFE3  F007         	goto	l1005
  2338  000F66                     u1230:
  2339  000F66  5037               	movf	xtoa@n^0,w,c
  2340  000F68  1038               	iorwf	(xtoa@n+1)^0,w,c
  2341  000F6A  1039               	iorwf	(xtoa@n+2)^0,w,c
  2342  000F6C  103A               	iorwf	(xtoa@n+3)^0,w,c
  2343  000F6E  103B               	iorwf	(xtoa@n+4)^0,w,c
  2344  000F70  103C               	iorwf	(xtoa@n+5)^0,w,c
  2345  000F72  103D               	iorwf	(xtoa@n+6)^0,w,c
  2346  000F74  103E               	iorwf	(xtoa@n+7)^0,w,c
  2347  000F76  A4D8               	btfss	status,2,c
  2348  000F78  EFC0  F007         	goto	u1241
  2349  000F7C  EFC2  F007         	goto	u1240
  2350  000F80                     u1241:
  2351  000F80  EFF2  F006         	goto	l1859
  2352  000F84                     u1240:
  2353  000F84  BE34               	btfsc	(xtoa@p+1)^0,7,c
  2354  000F86  EFCF  F007         	goto	u1250
  2355  000F8A  5034               	movf	(xtoa@p+1)^0,w,c
  2356  000F8C  E106               	bnz	u1251
  2357  000F8E  0433               	decf	xtoa@p^0,w,c
  2358  000F90  B0D8               	btfsc	status,0,c
  2359  000F92  EFCD  F007         	goto	u1251
  2360  000F96  EFCF  F007         	goto	u1250
  2361  000F9A                     u1251:
  2362  000F9A  EFF2  F006         	goto	l1859
  2363  000F9E                     u1250:
  2364  000F9E  BE36               	btfsc	(xtoa@w+1)^0,7,c
  2365  000FA0  EFDA  F007         	goto	u1261
  2366  000FA4  5036               	movf	(xtoa@w+1)^0,w,c
  2367  000FA6  E108               	bnz	u1260
  2368  000FA8  0435               	decf	xtoa@w^0,w,c
  2369  000FAA  A0D8               	btfss	status,0,c
  2370  000FAC  EFDA  F007         	goto	u1261
  2371  000FB0  EFDC  F007         	goto	u1260
  2372  000FB4                     u1261:
  2373  000FB4  EFE3  F007         	goto	l1005
  2374  000FB8                     u1260:
  2375  000FB8  B25E               	btfsc	_flags^0,1,c
  2376  000FBA  EFE1  F007         	goto	u1271
  2377  000FBE  EFE3  F007         	goto	u1270
  2378  000FC2                     u1271:
  2379  000FC2  EFF2  F006         	goto	l1859
  2380  000FC6                     u1270:
  2381  000FC6                     l1005:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2384  000FC6  A85E               	btfss	_flags^0,4,c
  2385  000FC8  EFE8  F007         	goto	u1281
  2386  000FCC  EFEA  F007         	goto	u1280
  2387  000FD0                     u1281:
  2388  000FD0  EF00  F008         	goto	l1905
  2389  000FD4                     u1280:
  2390  000FD4                     
  2391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  2392  000FD4  063F               	decf	xtoa@i^0,f,c
  2393  000FD6  A0D8               	btfss	status,0,c
  2394  000FD8  0640               	decf	(xtoa@i+1)^0,f,c
  2395  000FDA                     
  2396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2397  000FDA  0E00               	movlw	low _dbuf
  2398  000FDC  243F               	addwf	xtoa@i^0,w,c
  2399  000FDE  6ED9               	movwf	fsr2l,c
  2400  000FE0  0E01               	movlw	high _dbuf
  2401  000FE2  2040               	addwfc	(xtoa@i+1)^0,w,c
  2402  000FE4  6EDA               	movwf	fsr2h,c
  2403  000FE6  C026  FFDF         	movff	xtoa@x,indf2
  2404  000FEA                     
  2405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  2406  000FEA  063F               	decf	xtoa@i^0,f,c
  2407  000FEC  A0D8               	btfss	status,0,c
  2408  000FEE  0640               	decf	(xtoa@i+1)^0,f,c
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2411  000FF0  0E00               	movlw	low _dbuf
  2412  000FF2  243F               	addwf	xtoa@i^0,w,c
  2413  000FF4  6ED9               	movwf	fsr2l,c
  2414  000FF6  0E01               	movlw	high _dbuf
  2415  000FF8  2040               	addwfc	(xtoa@i+1)^0,w,c
  2416  000FFA  6EDA               	movwf	fsr2h,c
  2417  000FFC  0E30               	movlw	48
  2418  000FFE  6EDF               	movwf	indf2,c
  2419  001000                     l1905:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2422  001000  C01C  F011         	movff	xtoa@fp,pad@fp
  2423  001004  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2424  001008  0E00               	movlw	low _dbuf
  2425  00100A  243F               	addwf	xtoa@i^0,w,c
  2426  00100C  6E13               	movwf	pad@buf^0,c
  2427  00100E  0E01               	movlw	high _dbuf
  2428  001010  2040               	addwfc	(xtoa@i+1)^0,w,c
  2429  001012  6E14               	movwf	(pad@buf+1)^0,c
  2430  001014  C035  F015         	movff	xtoa@w,pad@p
  2431  001018  C036  F016         	movff	xtoa@w+1,pad@p+1
  2432  00101C  ECC4  F009         	call	_pad	;wreg free
  2433  001020  C011  F01C         	movff	?_pad,?_xtoa
  2434  001024  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2435  001028  0012               	return		;funcret
  2436  00102A                     __end_of_xtoa:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function _toupper *****************
  2440 ;; Defined at:
  2441 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  c               2    6[COMRAM] int 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  2    6[COMRAM] int 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2455 ;;      Params:         2       0       0       0       0       0       0       0       0
  2456 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2457 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2458 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2459 ;;Total ram usage:        8 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    1
  2462 ;; This function calls:
  2463 ;;		_islower
  2464 ;; This function is called by:
  2465 ;;		_xtoa
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text5
  2470  00155C                     __ptext5:
  2471                           	callstack 0
  2472  00155C                     _toupper:
  2473                           	callstack 25
  2474  00155C  0E9F               	movlw	159
  2475  00155E  6E09               	movwf	??_toupper^0,c
  2476  001560  0EFF               	movlw	255
  2477  001562  6E0A               	movwf	(??_toupper+1)^0,c
  2478  001564  C007  F00B         	movff	toupper@c,??_toupper+2
  2479  001568  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2480  00156C  5009               	movf	??_toupper^0,w,c
  2481  00156E  260B               	addwf	(??_toupper+2)^0,f,c
  2482  001570  500A               	movf	(??_toupper+1)^0,w,c
  2483  001572  220C               	addwfc	(??_toupper+3)^0,f,c
  2484  001574  500C               	movf	(??_toupper+3)^0,w,c
  2485  001576  E10A               	bnz	u1060
  2486  001578  0E1A               	movlw	26
  2487  00157A  5C0B               	subwf	(??_toupper+2)^0,w,c
  2488  00157C  A0D8               	btfss	status,0,c
  2489  00157E  EFC3  F00A         	goto	u1061
  2490  001582  EFC6  F00A         	goto	u1060
  2491  001586                     u1061:
  2492  001586  0E01               	movlw	1
  2493  001588  EFC7  F00A         	goto	u1070
  2494  00158C                     u1060:
  2495  00158C  0E00               	movlw	0
  2496  00158E                     u1070:
  2497  00158E  6E0D               	movwf	_toupper$1208^0,c
  2498  001590  6A0E               	clrf	(_toupper$1208+1)^0,c
  2499  001592  500D               	movf	_toupper$1208^0,w,c
  2500  001594  100E               	iorwf	(_toupper$1208+1)^0,w,c
  2501  001596  B4D8               	btfsc	status,2,c
  2502  001598  EFD0  F00A         	goto	u1081
  2503  00159C  EFD2  F00A         	goto	u1080
  2504  0015A0                     u1081:
  2505  0015A0  EFD8  F00A         	goto	l1067
  2506  0015A4                     u1080:
  2507  0015A4  0E5F               	movlw	95
  2508  0015A6  1407               	andwf	toupper@c^0,w,c
  2509  0015A8  6E07               	movwf	?_toupper^0,c
  2510  0015AA  6A08               	clrf	(?_toupper+1)^0,c
  2511  0015AC  EFDC  F00A         	goto	l1072
  2512  0015B0                     l1067:
  2513  0015B0  C007  F007         	movff	toupper@c,?_toupper
  2514  0015B4  C008  F008         	movff	toupper@c+1,?_toupper+1
  2515  0015B8                     l1072:
  2516  0015B8  0012               	return		;funcret
  2517  0015BA                     __end_of_toupper:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _islower *****************
  2521 ;; Defined at:
  2522 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  c               2    0[COMRAM] int 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2    0[COMRAM] int 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         2       0       0       0       0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2538 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2539 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2540 ;;Total ram usage:        6 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_toupper
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text6
  2550  001926                     __ptext6:
  2551                           	callstack 0
  2552  001926                     _islower:
  2553                           	callstack 25
  2554  001926  0E9F               	movlw	159
  2555  001928  6E03               	movwf	??_islower^0,c
  2556  00192A  0EFF               	movlw	255
  2557  00192C  6E04               	movwf	(??_islower+1)^0,c
  2558  00192E  C001  F005         	movff	islower@c,??_islower+2
  2559  001932  C002  F006         	movff	islower@c+1,??_islower+3
  2560  001936  5003               	movf	??_islower^0,w,c
  2561  001938  2605               	addwf	(??_islower+2)^0,f,c
  2562  00193A  5004               	movf	(??_islower+1)^0,w,c
  2563  00193C  2206               	addwfc	(??_islower+3)^0,f,c
  2564  00193E  5006               	movf	(??_islower+3)^0,w,c
  2565  001940  E10A               	bnz	u960
  2566  001942  0E1A               	movlw	26
  2567  001944  5C05               	subwf	(??_islower+2)^0,w,c
  2568  001946  A0D8               	btfss	status,0,c
  2569  001948  EFA8  F00C         	goto	u961
  2570  00194C  EFAB  F00C         	goto	u960
  2571  001950                     u961:
  2572  001950  0E01               	movlw	1
  2573  001952  EFAC  F00C         	goto	u970
  2574  001956                     u960:
  2575  001956  0E00               	movlw	0
  2576  001958                     u970:
  2577  001958  6E01               	movwf	?_islower^0,c
  2578  00195A  6A02               	clrf	(?_islower+1)^0,c
  2579  00195C  0012               	return		;funcret
  2580  00195E                     __end_of_islower:
  2581                           	callstack 0
  2582                           
  2583 ;; *************** function _pad *****************
  2584 ;; Defined at:
  2585 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2588 ;;		 -> sprintf@f(6), 
  2589 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2590 ;;		 -> dbuf(32), 
  2591 ;;  p               2   20[COMRAM] int 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  w               2   25[COMRAM] int 
  2594 ;;  i               2   23[COMRAM] int 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2   16[COMRAM] int 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2604 ;;      Params:         6       0       0       0       0       0       0       0       0
  2605 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2606 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2607 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2608 ;;Total ram usage:       11 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    3
  2611 ;; This function calls:
  2612 ;;		_fputc
  2613 ;;		_fputs
  2614 ;;		_strlen
  2615 ;; This function is called by:
  2616 ;;		_xtoa
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text7
  2621  001388                     __ptext7:
  2622                           	callstack 0
  2623  001388                     _pad:
  2624                           	callstack 23
  2625  001388                     
  2626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2627  001388  A05E               	btfss	_flags^0,0,c
  2628  00138A  EFC9  F009         	goto	u981
  2629  00138E  EFCB  F009         	goto	u980
  2630  001392                     u981:
  2631  001392  EFD5  F009         	goto	l1789
  2632  001396                     u980:
  2633  001396                     
  2634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2635  001396  C013  F00A         	movff	pad@buf,fputs@s
  2636  00139A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2637  00139E  C011  F00C         	movff	pad@fp,fputs@fp
  2638  0013A2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2639  0013A6  ECF5  F00B         	call	_fputs	;wreg free
  2640  0013AA                     l1789:
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2643  0013AA  BE16               	btfsc	(pad@p+1)^0,7,c
  2644  0013AC  EFDA  F009         	goto	u991
  2645  0013B0  EFDC  F009         	goto	u990
  2646  0013B4                     u991:
  2647  0013B4  EFE2  F009         	goto	l1793
  2648  0013B8                     u990:
  2649  0013B8  C015  F01A         	movff	pad@p,pad@w
  2650  0013BC  C016  F01B         	movff	pad@p+1,pad@w+1
  2651  0013C0  EFE6  F009         	goto	l972
  2652  0013C4                     l1793:
  2653  0013C4  0E00               	movlw	0
  2654  0013C6  6E1B               	movwf	(pad@w+1)^0,c
  2655  0013C8  0E00               	movlw	0
  2656  0013CA  6E1A               	movwf	pad@w^0,c
  2657  0013CC                     l972:
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2660  0013CC  0E00               	movlw	0
  2661  0013CE  6E19               	movwf	(pad@i+1)^0,c
  2662  0013D0  0E00               	movlw	0
  2663  0013D2  6E18               	movwf	pad@i^0,c
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2666  0013D4  EFF8  F009         	goto	l1799
  2667  0013D8                     l1795:
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2670  0013D8  0E00               	movlw	0
  2671  0013DA  6E02               	movwf	(fputc@c+1)^0,c
  2672  0013DC  0E20               	movlw	32
  2673  0013DE  6E01               	movwf	fputc@c^0,c
  2674  0013E0  C011  F003         	movff	pad@fp,fputc@fp
  2675  0013E4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2676  0013E8  ECFD  F008         	call	_fputc	;wreg free
  2677  0013EC                     
  2678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2679  0013EC  4A18               	infsnz	pad@i^0,f,c
  2680  0013EE  2A19               	incf	(pad@i+1)^0,f,c
  2681  0013F0                     l1799:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2684  0013F0  501A               	movf	pad@w^0,w,c
  2685  0013F2  5C18               	subwf	pad@i^0,w,c
  2686  0013F4  5019               	movf	(pad@i+1)^0,w,c
  2687  0013F6  0A80               	xorlw	128
  2688  0013F8  6E17               	movwf	??_pad^0,c
  2689  0013FA  501B               	movf	(pad@w+1)^0,w,c
  2690  0013FC  0A80               	xorlw	128
  2691  0013FE  5817               	subwfb	??_pad^0,w,c
  2692  001400  A0D8               	btfss	status,0,c
  2693  001402  EF05  F00A         	goto	u1001
  2694  001406  EF07  F00A         	goto	u1000
  2695  00140A                     u1001:
  2696  00140A  EFEC  F009         	goto	l1795
  2697  00140E                     u1000:
  2698  00140E                     
  2699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2700  00140E  B05E               	btfsc	_flags^0,0,c
  2701  001410  EF0C  F00A         	goto	u1011
  2702  001414  EF0E  F00A         	goto	u1010
  2703  001418                     u1011:
  2704  001418  EF18  F00A         	goto	l1803
  2705  00141C                     u1010:
  2706  00141C                     
  2707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2708  00141C  C013  F00A         	movff	pad@buf,fputs@s
  2709  001420  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2710  001424  C011  F00C         	movff	pad@fp,fputs@fp
  2711  001428  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2712  00142C  ECF5  F00B         	call	_fputs	;wreg free
  2713  001430                     l1803:
  2714                           
  2715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2716  001430  C013  F001         	movff	pad@buf,strlen@s
  2717  001434  C014  F002         	movff	pad@buf+1,strlen@s+1
  2718  001438  ECCB  F00C         	call	_strlen	;wreg free
  2719  00143C  501A               	movf	pad@w^0,w,c
  2720  00143E  2401               	addwf	?_strlen^0,w,c
  2721  001440  6E11               	movwf	?_pad^0,c
  2722  001442  501B               	movf	(pad@w+1)^0,w,c
  2723  001444  2002               	addwfc	(?_strlen+1)^0,w,c
  2724  001446  6E12               	movwf	(?_pad+1)^0,c
  2725  001448  0012               	return		;funcret
  2726  00144A                     __end_of_pad:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _strlen *****************
  2730 ;; Defined at:
  2731 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2734 ;;		 -> dbuf(32), 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2737 ;;		 -> dbuf(32), 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2    0[COMRAM] unsigned int 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2747 ;;      Params:         2       0       0       0       0       0       0       0       0
  2748 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2750 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2751 ;;Total ram usage:        4 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_pad
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text8
  2761  001996                     __ptext8:
  2762                           	callstack 0
  2763  001996                     _strlen:
  2764                           	callstack 25
  2765  001996  C001  F003         	movff	strlen@s,strlen@a
  2766  00199A  C002  F004         	movff	strlen@s+1,strlen@a+1
  2767  00199E  EFD3  F00C         	goto	l1775
  2768  0019A2                     l1773:
  2769  0019A2  4A01               	infsnz	strlen@s^0,f,c
  2770  0019A4  2A02               	incf	(strlen@s+1)^0,f,c
  2771  0019A6                     l1775:
  2772  0019A6  C001  FFD9         	movff	strlen@s,fsr2l
  2773  0019AA  C002  FFDA         	movff	strlen@s+1,fsr2h
  2774  0019AE  50DF               	movf	indf2,w,c
  2775  0019B0  A4D8               	btfss	status,2,c
  2776  0019B2  EFDD  F00C         	goto	u951
  2777  0019B6  EFDF  F00C         	goto	u950
  2778  0019BA                     u951:
  2779  0019BA  EFD1  F00C         	goto	l1773
  2780  0019BE                     u950:
  2781  0019BE  5003               	movf	strlen@a^0,w,c
  2782  0019C0  5C01               	subwf	strlen@s^0,w,c
  2783  0019C2  6E01               	movwf	?_strlen^0,c
  2784  0019C4  5004               	movf	(strlen@a+1)^0,w,c
  2785  0019C6  5802               	subwfb	(strlen@s+1)^0,w,c
  2786  0019C8  6E02               	movwf	(?_strlen+1)^0,c
  2787  0019CA  0012               	return		;funcret
  2788  0019CC                     __end_of_strlen:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _fputs *****************
  2792 ;; Defined at:
  2793 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2796 ;;		 -> dbuf(32), 
  2797 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2798 ;;		 -> sprintf@f(6), 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  i               2   14[COMRAM] int 
  2801 ;;  c               1   13[COMRAM] unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  2    9[COMRAM] int 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2811 ;;      Params:         4       0       0       0       0       0       0       0       0
  2812 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2814 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2815 ;;Total ram usage:        7 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    2
  2818 ;; This function calls:
  2819 ;;		_fputc
  2820 ;; This function is called by:
  2821 ;;		_pad
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text9
  2826  0017EA                     __ptext9:
  2827                           	callstack 0
  2828  0017EA                     _fputs:
  2829                           	callstack 23
  2830  0017EA  0E00               	movlw	0
  2831  0017EC  6E10               	movwf	(fputs@i+1)^0,c
  2832  0017EE  0E00               	movlw	0
  2833  0017F0  6E0F               	movwf	fputs@i^0,c
  2834  0017F2  EF06  F00C         	goto	l1769
  2835  0017F6                     l1765:
  2836  0017F6  C00E  F001         	movff	fputs@c,fputc@c
  2837  0017FA  6A02               	clrf	(fputc@c+1)^0,c
  2838  0017FC  C00C  F003         	movff	fputs@fp,fputc@fp
  2839  001800  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2840  001804  ECFD  F008         	call	_fputc	;wreg free
  2841  001808  4A0F               	infsnz	fputs@i^0,f,c
  2842  00180A  2A10               	incf	(fputs@i+1)^0,f,c
  2843  00180C                     l1769:
  2844  00180C  500F               	movf	fputs@i^0,w,c
  2845  00180E  240A               	addwf	fputs@s^0,w,c
  2846  001810  6ED9               	movwf	fsr2l,c
  2847  001812  5010               	movf	(fputs@i+1)^0,w,c
  2848  001814  200B               	addwfc	(fputs@s+1)^0,w,c
  2849  001816  6EDA               	movwf	fsr2h,c
  2850  001818  50DF               	movf	indf2,w,c
  2851  00181A  6E0E               	movwf	fputs@c^0,c
  2852  00181C  500E               	movf	fputs@c^0,w,c
  2853  00181E  A4D8               	btfss	status,2,c
  2854  001820  EF14  F00C         	goto	u941
  2855  001824  EF16  F00C         	goto	u940
  2856  001828                     u941:
  2857  001828  EFFB  F00B         	goto	l1765
  2858  00182C                     u940:
  2859  00182C  0012               	return		;funcret
  2860  00182E                     __end_of_fputs:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _fputc *****************
  2864 ;; Defined at:
  2865 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  c               2    0[COMRAM] int 
  2868 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2869 ;;		 -> sprintf@f(6), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  2    0[COMRAM] int 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2881 ;;      Params:         4       0       0       0       0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2883 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2884 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2885 ;;Total ram usage:        9 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    1
  2888 ;; This function calls:
  2889 ;;		_putch
  2890 ;; This function is called by:
  2891 ;;		_pad
  2892 ;;		_vfpfcnvrt
  2893 ;;		_fputs
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text10
  2898  0011FA                     __ptext10:
  2899                           	callstack 0
  2900  0011FA                     _fputc:
  2901                           	callstack 23
  2902  0011FA  5003               	movf	fputc@fp^0,w,c
  2903  0011FC  1004               	iorwf	(fputc@fp+1)^0,w,c
  2904  0011FE  B4D8               	btfsc	status,2,c
  2905  001200  EF04  F009         	goto	u901
  2906  001204  EF06  F009         	goto	u900
  2907  001208                     u901:
  2908  001208  EF0F  F009         	goto	l1753
  2909  00120C                     u900:
  2910  00120C  5003               	movf	fputc@fp^0,w,c
  2911  00120E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2912  001210  A4D8               	btfss	status,2,c
  2913  001212  EF0D  F009         	goto	u911
  2914  001216  EF0F  F009         	goto	u910
  2915  00121A                     u911:
  2916  00121A  EF14  F009         	goto	l1755
  2917  00121E                     u910:
  2918  00121E                     l1753:
  2919  00121E  5001               	movf	fputc@c^0,w,c
  2920  001220  ECA5  F00D         	call	_putch
  2921  001224  EF61  F009         	goto	l1045
  2922  001228                     l1755:
  2923  001228  EE20 F004          	lfsr	2,4
  2924  00122C  5003               	movf	fputc@fp^0,w,c
  2925  00122E  26D9               	addwf	fsr2l,f,c
  2926  001230  5004               	movf	(fputc@fp+1)^0,w,c
  2927  001232  22DA               	addwfc	fsr2h,f,c
  2928  001234  50DE               	movf	postinc2,w,c
  2929  001236  10DE               	iorwf	postinc2,w,c
  2930  001238  B4D8               	btfsc	status,2,c
  2931  00123A  EF21  F009         	goto	u921
  2932  00123E  EF23  F009         	goto	u920
  2933  001242                     u921:
  2934  001242  EF3E  F009         	goto	l1759
  2935  001246                     u920:
  2936  001246  EE20 F004          	lfsr	2,4
  2937  00124A  5003               	movf	fputc@fp^0,w,c
  2938  00124C  26D9               	addwf	fsr2l,f,c
  2939  00124E  5004               	movf	(fputc@fp+1)^0,w,c
  2940  001250  22DA               	addwfc	fsr2h,f,c
  2941  001252  EE10 F002          	lfsr	1,2
  2942  001256  5003               	movf	fputc@fp^0,w,c
  2943  001258  26E1               	addwf	fsr1l,f,c
  2944  00125A  5004               	movf	(fputc@fp+1)^0,w,c
  2945  00125C  22E2               	addwfc	fsr1h,f,c
  2946  00125E  50DE               	movf	postinc2,w,c
  2947  001260  5CE6               	subwf	postinc1,w,c
  2948  001262  50E6               	movf	postinc1,w,c
  2949  001264  0A80               	xorlw	128
  2950  001266  6E09               	movwf	(??_fputc+4)^0,c
  2951  001268  50DE               	movf	postinc2,w,c
  2952  00126A  0A80               	xorlw	128
  2953  00126C  5809               	subwfb	(??_fputc+4)^0,w,c
  2954  00126E  B0D8               	btfsc	status,0,c
  2955  001270  EF3C  F009         	goto	u931
  2956  001274  EF3E  F009         	goto	u930
  2957  001278                     u931:
  2958  001278  EF61  F009         	goto	l1045
  2959  00127C                     u930:
  2960  00127C                     l1759:
  2961  00127C  EE20 F002          	lfsr	2,2
  2962  001280  5003               	movf	fputc@fp^0,w,c
  2963  001282  26D9               	addwf	fsr2l,f,c
  2964  001284  5004               	movf	(fputc@fp+1)^0,w,c
  2965  001286  22DA               	addwfc	fsr2h,f,c
  2966  001288  CFDE F005          	movff	postinc2,??_fputc
  2967  00128C  CFDD F006          	movff	postdec2,??_fputc+1
  2968  001290  C003  FFD9         	movff	fputc@fp,fsr2l
  2969  001294  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2970  001298  CFDE F007          	movff	postinc2,??_fputc+2
  2971  00129C  CFDD F008          	movff	postdec2,??_fputc+3
  2972  0012A0  5005               	movf	??_fputc^0,w,c
  2973  0012A2  2407               	addwf	(??_fputc+2)^0,w,c
  2974  0012A4  6ED9               	movwf	fsr2l,c
  2975  0012A6  5006               	movf	(??_fputc+1)^0,w,c
  2976  0012A8  2008               	addwfc	(??_fputc+3)^0,w,c
  2977  0012AA  6EDA               	movwf	fsr2h,c
  2978  0012AC  C001  FFDF         	movff	fputc@c,indf2
  2979  0012B0  EE20 F002          	lfsr	2,2
  2980  0012B4  5003               	movf	fputc@fp^0,w,c
  2981  0012B6  26D9               	addwf	fsr2l,f,c
  2982  0012B8  5004               	movf	(fputc@fp+1)^0,w,c
  2983  0012BA  22DA               	addwfc	fsr2h,f,c
  2984  0012BC  2ADE               	incf	postinc2,f,c
  2985  0012BE  0E00               	movlw	0
  2986  0012C0  22DD               	addwfc	postdec2,f,c
  2987  0012C2                     l1045:
  2988  0012C2  0012               	return		;funcret
  2989  0012C4                     __end_of_fputc:
  2990                           	callstack 0
  2991                           
  2992 ;; *************** function _putch *****************
  2993 ;; Defined at:
  2994 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  c               1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  c               1    0[COMRAM] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3011 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3012 ;;Total ram usage:        0 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_fputc
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text11
  3022  001B4A                     __ptext11:
  3023                           	callstack 0
  3024  001B4A                     _putch:
  3025                           	callstack 23
  3026  001B4A  0012               	return		;funcret
  3027  001B4C                     __end_of_putch:
  3028                           	callstack 0
  3029                           
  3030 ;; *************** function _isupper *****************
  3031 ;; Defined at:
  3032 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  c               2    0[COMRAM] int 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2    0[COMRAM] int 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3046 ;;      Params:         2       0       0       0       0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3048 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3049 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3050 ;;Total ram usage:        6 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_xtoa
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text12
  3060  00195E                     __ptext12:
  3061                           	callstack 0
  3062  00195E                     _isupper:
  3063                           	callstack 26
  3064  00195E  0EBF               	movlw	191
  3065  001960  6E03               	movwf	??_isupper^0,c
  3066  001962  0EFF               	movlw	255
  3067  001964  6E04               	movwf	(??_isupper+1)^0,c
  3068  001966  C001  F005         	movff	isupper@c,??_isupper+2
  3069  00196A  C002  F006         	movff	isupper@c+1,??_isupper+3
  3070  00196E  5003               	movf	??_isupper^0,w,c
  3071  001970  2605               	addwf	(??_isupper+2)^0,f,c
  3072  001972  5004               	movf	(??_isupper+1)^0,w,c
  3073  001974  2206               	addwfc	(??_isupper+3)^0,f,c
  3074  001976  5006               	movf	(??_isupper+3)^0,w,c
  3075  001978  E10A               	bnz	u1020
  3076  00197A  0E1A               	movlw	26
  3077  00197C  5C05               	subwf	(??_isupper+2)^0,w,c
  3078  00197E  A0D8               	btfss	status,0,c
  3079  001980  EFC4  F00C         	goto	u1021
  3080  001984  EFC7  F00C         	goto	u1020
  3081  001988                     u1021:
  3082  001988  0E01               	movlw	1
  3083  00198A  EFC8  F00C         	goto	u1030
  3084  00198E                     u1020:
  3085  00198E  0E00               	movlw	0
  3086  001990                     u1030:
  3087  001990  6E01               	movwf	?_isupper^0,c
  3088  001992  6A02               	clrf	(?_isupper+1)^0,c
  3089  001994  0012               	return		;funcret
  3090  001996                     __end_of_isupper:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _isalpha *****************
  3094 ;; Defined at:
  3095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  c               2    0[COMRAM] int 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  2    0[COMRAM] int 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3109 ;;      Params:         2       0       0       0       0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3111 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3112 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3113 ;;Total ram usage:        6 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_xtoa
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text13
  3123  0018B0                     __ptext13:
  3124                           	callstack 0
  3125  0018B0                     _isalpha:
  3126                           	callstack 26
  3127  0018B0  0E9F               	movlw	159
  3128  0018B2  6E03               	movwf	??_isalpha^0,c
  3129  0018B4  0EFF               	movlw	255
  3130  0018B6  6E04               	movwf	(??_isalpha+1)^0,c
  3131  0018B8  0E20               	movlw	32
  3132  0018BA  1001               	iorwf	isalpha@c^0,w,c
  3133  0018BC  6E05               	movwf	(??_isalpha+2)^0,c
  3134  0018BE  0E00               	movlw	0
  3135  0018C0  1002               	iorwf	(isalpha@c+1)^0,w,c
  3136  0018C2  6E06               	movwf	(??_isalpha+3)^0,c
  3137  0018C4  5003               	movf	??_isalpha^0,w,c
  3138  0018C6  2605               	addwf	(??_isalpha+2)^0,f,c
  3139  0018C8  5004               	movf	(??_isalpha+1)^0,w,c
  3140  0018CA  2206               	addwfc	(??_isalpha+3)^0,f,c
  3141  0018CC  5006               	movf	(??_isalpha+3)^0,w,c
  3142  0018CE  E10A               	bnz	u1040
  3143  0018D0  0E1A               	movlw	26
  3144  0018D2  5C05               	subwf	(??_isalpha+2)^0,w,c
  3145  0018D4  A0D8               	btfss	status,0,c
  3146  0018D6  EF6F  F00C         	goto	u1041
  3147  0018DA  EF72  F00C         	goto	u1040
  3148  0018DE                     u1041:
  3149  0018DE  0E01               	movlw	1
  3150  0018E0  EF73  F00C         	goto	u1050
  3151  0018E4                     u1040:
  3152  0018E4  0E00               	movlw	0
  3153  0018E6                     u1050:
  3154  0018E6  6E01               	movwf	?_isalpha^0,c
  3155  0018E8  6A02               	clrf	(?_isalpha+1)^0,c
  3156  0018EA  0012               	return		;funcret
  3157  0018EC                     __end_of_isalpha:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _init_leds_botons *****************
  3161 ;; Defined at:
  3162 ;;		line 59 in file "RTC.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		None
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3176 ;;      Params:         0       0       0       0       0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3179 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3180 ;;Total ram usage:        0 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_main
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text14
  3190  001B42                     __ptext14:
  3191                           	callstack 0
  3192  001B42                     _init_leds_botons:
  3193                           	callstack 30
  3194  001B42                     
  3195                           ;RTC.c: 60:     TRISDbits.TRISD0 = 0;
  3196  001B42  9095               	bcf	149,0,c	;volatile
  3197                           
  3198                           ;RTC.c: 61:     TRISDbits.TRISD1 = 0;
  3199  001B44  9295               	bcf	149,1,c	;volatile
  3200                           
  3201                           ;RTC.c: 63:     TRISBbits.TRISB7 = 1;
  3202  001B46  8E93               	bsf	147,7,c	;volatile
  3203  001B48  0012               	return		;funcret
  3204  001B4A                     __end_of_init_leds_botons:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _RTC_Read_Clock *****************
  3208 ;; Defined at:
  3209 ;;		line 27 in file "RTC.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  read_clock_a    1    wreg     unsigned char 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0
  3224 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3225 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3226 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3227 ;;Total ram usage:        2 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    3
  3230 ;; This function calls:
  3231 ;;		_I2C_Read
  3232 ;;		_I2C_Repeated_Start
  3233 ;;		_I2C_Start
  3234 ;;		_I2C_Write
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text15
  3241  0017A4                     __ptext15:
  3242                           	callstack 0
  3243  0017A4                     _RTC_Read_Clock:
  3244                           	callstack 27
  3245                           
  3246                           ;incstack = 0
  3247                           ;RTC_Read_Clock@read_clock_address stored from wreg
  3248  0017A4  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  3249  0017A6                     
  3250                           ;RTC.c: 27: void RTC_Read_Clock(char read_clock_address);RTC.c: 28: {;RTC.c: 29:     I2C
      +                          _Start(0xD0);
  3251  0017A6  0ED0               	movlw	208
  3252  0017A8  ECFE  F00C         	call	_I2C_Start
  3253                           
  3254                           ;RTC.c: 30:     I2C_Write(read_clock_address);
  3255  0017AC  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  3256  0017AE  EC52  F00D         	call	_I2C_Write
  3257                           
  3258                           ;RTC.c: 31:     I2C_Repeated_Start(0xD1);
  3259  0017B2  0ED1               	movlw	209
  3260  0017B4  EC15  F00D         	call	_I2C_Repeated_Start
  3261  0017B8                     
  3262                           ;RTC.c: 32:     sec = I2C_Read(0);
  3263  0017B8  0E00               	movlw	0
  3264  0017BA  EC76  F00C         	call	_I2C_Read
  3265  0017BE  6E03               	movwf	??_RTC_Read_Clock^0,c
  3266  0017C0  5003               	movf	??_RTC_Read_Clock^0,w,c
  3267  0017C2  0100               	movlb	0	; () banked
  3268  0017C4  6FE5               	movwf	_sec& (0+255),b
  3269  0017C6  6BE6               	clrf	(_sec+1)& (0+255),b
  3270  0017C8                     
  3271                           ; BSR set to: 0
  3272                           ;RTC.c: 33:     min = I2C_Read(0);
  3273  0017C8  0E00               	movlw	0
  3274  0017CA  EC76  F00C         	call	_I2C_Read
  3275  0017CE  6E03               	movwf	??_RTC_Read_Clock^0,c
  3276  0017D0  5003               	movf	??_RTC_Read_Clock^0,w,c
  3277  0017D2  0100               	movlb	0	; () banked
  3278  0017D4  6FE3               	movwf	_min& (0+255),b
  3279  0017D6  6BE4               	clrf	(_min+1)& (0+255),b
  3280  0017D8                     
  3281                           ; BSR set to: 0
  3282                           ;RTC.c: 34:     hour= I2C_Read(1);
  3283  0017D8  0E01               	movlw	1
  3284  0017DA  EC76  F00C         	call	_I2C_Read
  3285  0017DE  6E03               	movwf	??_RTC_Read_Clock^0,c
  3286  0017E0  5003               	movf	??_RTC_Read_Clock^0,w,c
  3287  0017E2  0100               	movlb	0	; () banked
  3288  0017E4  6FE1               	movwf	_hour& (0+255),b
  3289  0017E6  6BE2               	clrf	(_hour+1)& (0+255),b
  3290  0017E8                     
  3291                           ; BSR set to: 0
  3292  0017E8  0012               	return		;funcret
  3293  0017EA                     __end_of_RTC_Read_Clock:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _I2C_Start *****************
  3297 ;; Defined at:
  3298 ;;		line 68 in file "PIC18F4550_I2C_Source_File.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  slave_write_    1    wreg     unsigned char 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  slave_write_    1    1[COMRAM] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      unsigned char 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3312 ;;      Params:         0       0       0       0       0       0       0       0       0
  3313 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3315 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3316 ;;Total ram usage:        1 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:    2
  3319 ;; This function calls:
  3320 ;;		_I2C_Write
  3321 ;; This function is called by:
  3322 ;;		_RTC_Read_Clock
  3323 ;;		_RTC_Clock_Write
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text16
  3328  0019FC                     __ptext16:
  3329                           	callstack 0
  3330  0019FC                     _I2C_Start:
  3331                           	callstack 27
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;incstack = 0
  3335                           ;I2C_Start@slave_write_address stored from wreg
  3336  0019FC  6E02               	movwf	I2C_Start@slave_write_address^0,c
  3337  0019FE                     
  3338                           ;PIC18F4550_I2C_Source_File.c: 68: char I2C_Start(char slave_write_address);PIC18F4550_I
      +                          2C_Source_File.c: 69: {;PIC18F4550_I2C_Source_File.c: 70:     SSPCON2bits.SEN=1;
  3339  0019FE  80C5               	bsf	197,0,c	;volatile
  3340  001A00                     l223:
  3341  001A00  B0C5               	btfsc	197,0,c	;volatile
  3342  001A02  EF05  F00D         	goto	u1361
  3343  001A06  EF07  F00D         	goto	u1360
  3344  001A0A                     u1361:
  3345  001A0A  EF00  F00D         	goto	l223
  3346  001A0E                     u1360:
  3347  001A0E                     
  3348                           ;PIC18F4550_I2C_Source_File.c: 72:  SSPIF=0;
  3349  001A0E  969E               	bcf	3998,3,c	;volatile
  3350                           
  3351                           ;PIC18F4550_I2C_Source_File.c: 73:     if(!SSPSTATbits.S)
  3352  001A10  B6C7               	btfsc	199,3,c	;volatile
  3353  001A12  EF0D  F00D         	goto	u1371
  3354  001A16  EF0F  F00D         	goto	u1370
  3355  001A1A                     u1371:
  3356  001A1A  EF11  F00D         	goto	l1999
  3357  001A1E                     u1370:
  3358  001A1E  EF14  F00D         	goto	l227
  3359  001A22                     l1999:
  3360                           
  3361                           ;PIC18F4550_I2C_Source_File.c: 75:     return (I2C_Write(slave_write_address));;	Return 
      +                          value of _I2C_Start is never used
  3362  001A22  5002               	movf	I2C_Start@slave_write_address^0,w,c
  3363  001A24  EC52  F00D         	call	_I2C_Write
  3364  001A28                     l227:
  3365  001A28  0012               	return		;funcret
  3366  001A2A                     __end_of_I2C_Start:
  3367                           	callstack 0
  3368                           
  3369 ;; *************** function _I2C_Repeated_Start *****************
  3370 ;; Defined at:
  3371 ;;		line 79 in file "PIC18F4550_I2C_Source_File.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  slave_read_a    1    wreg     unsigned char 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      unsigned char 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0
  3386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3388 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3389 ;;Total ram usage:        1 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    2
  3392 ;; This function calls:
  3393 ;;		_I2C_Write
  3394 ;; This function is called by:
  3395 ;;		_RTC_Read_Clock
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text17
  3400  001A2A                     __ptext17:
  3401                           	callstack 0
  3402  001A2A                     _I2C_Repeated_Start:
  3403                           	callstack 27
  3404                           
  3405                           ;incstack = 0
  3406                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  3407  001A2A  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  3408  001A2C                     
  3409                           ;PIC18F4550_I2C_Source_File.c: 79: char I2C_Repeated_Start(char slave_read_address);PIC1
      +                          8F4550_I2C_Source_File.c: 80: {;PIC18F4550_I2C_Source_File.c: 81:     RSEN = 1;
  3410  001A2C  82C5               	bsf	4037,1,c	;volatile
  3411  001A2E                     l230:
  3412  001A2E  B2C5               	btfsc	4037,1,c	;volatile
  3413  001A30  EF1C  F00D         	goto	u1381
  3414  001A34  EF1E  F00D         	goto	u1380
  3415  001A38                     u1381:
  3416  001A38  EF17  F00D         	goto	l230
  3417  001A3C                     u1380:
  3418  001A3C                     
  3419                           ;PIC18F4550_I2C_Source_File.c: 83:     SSPIF = 0;
  3420  001A3C  969E               	bcf	3998,3,c	;volatile
  3421                           
  3422                           ;PIC18F4550_I2C_Source_File.c: 84:  if(!SSPSTATbits.S)
  3423  001A3E  B6C7               	btfsc	199,3,c	;volatile
  3424  001A40  EF24  F00D         	goto	u1391
  3425  001A44  EF26  F00D         	goto	u1390
  3426  001A48                     u1391:
  3427  001A48  EF28  F00D         	goto	l2007
  3428  001A4C                     u1390:
  3429  001A4C  EF2B  F00D         	goto	l234
  3430  001A50                     l2007:
  3431                           
  3432                           ;PIC18F4550_I2C_Source_File.c: 86:     I2C_Write(slave_read_address);
  3433  001A50  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  3434  001A52  EC52  F00D         	call	_I2C_Write
  3435  001A56                     l234:
  3436  001A56  0012               	return		;funcret
  3437  001A58                     __end_of_I2C_Repeated_Start:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _I2C_Write *****************
  3441 ;; Defined at:
  3442 ;;		line 101 in file "PIC18F4550_I2C_Source_File.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  data            1    wreg     unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  data            1    0[COMRAM] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      unsigned char 
  3449 ;; Registers used:
  3450 ;;		wreg, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0
  3457 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3459 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3460 ;;Total ram usage:        1 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    1
  3463 ;; This function calls:
  3464 ;;		_I2C_Ready
  3465 ;; This function is called by:
  3466 ;;		_RTC_Read_Clock
  3467 ;;		_I2C_Start
  3468 ;;		_I2C_Repeated_Start
  3469 ;;		_RTC_Clock_Write
  3470 ;;		_I2C_Start_Wait
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text18
  3475  001AA4                     __ptext18:
  3476                           	callstack 0
  3477  001AA4                     _I2C_Write:
  3478                           	callstack 28
  3479                           
  3480                           ;incstack = 0
  3481                           ;I2C_Write@data stored from wreg
  3482  001AA4  6E01               	movwf	I2C_Write@data^0,c
  3483  001AA6                     
  3484                           ;PIC18F4550_I2C_Source_File.c: 101: char I2C_Write(unsigned char data);PIC18F4550_I2C_So
      +                          urce_File.c: 102: {;PIC18F4550_I2C_Source_File.c: 103:       SSPBUF = data;
  3485  001AA6  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3486  001AAA                     
  3487                           ;PIC18F4550_I2C_Source_File.c: 104:       I2C_Ready();
  3488  001AAA  EC98  F00D         	call	_I2C_Ready	;wreg free
  3489  001AAE                     
  3490                           ;PIC18F4550_I2C_Source_File.c: 105:       if (ACKSTAT)
  3491  001AAE  ACC5               	btfss	4037,6,c	;volatile
  3492  001AB0  EF5C  F00D         	goto	u1291
  3493  001AB4  EF5E  F00D         	goto	u1290
  3494  001AB8                     u1291:
  3495  001AB8  EF61  F00D         	goto	l1921
  3496  001ABC                     u1290:
  3497  001ABC                     
  3498                           ;PIC18F4550_I2C_Source_File.c: 106:         return 1;
  3499  001ABC  0E01               	movlw	1
  3500  001ABE  EF62  F00D         	goto	l247
  3501  001AC2                     l1921:
  3502                           
  3503                           ;PIC18F4550_I2C_Source_File.c: 108:         return 2;
  3504  001AC2  0E02               	movlw	2
  3505  001AC4                     l247:
  3506  001AC4  0012               	return		;funcret
  3507  001AC6                     __end_of_I2C_Write:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _I2C_Read *****************
  3511 ;; Defined at:
  3512 ;;		line 12 in file "PIC18F4550_I2C_Source_File.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  flag            1    wreg     unsigned char 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  flag            1    0[COMRAM] unsigned char 
  3517 ;;  buffer          1    1[COMRAM] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      unsigned char 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3527 ;;      Params:         0       0       0       0       0       0       0       0       0
  3528 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3530 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3531 ;;Total ram usage:        2 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    1
  3534 ;; This function calls:
  3535 ;;		_I2C_Ack
  3536 ;;		_I2C_Nack
  3537 ;;		_I2C_Ready
  3538 ;; This function is called by:
  3539 ;;		_RTC_Read_Clock
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text19
  3544  0018EC                     __ptext19:
  3545                           	callstack 0
  3546  0018EC                     _I2C_Read:
  3547                           	callstack 28
  3548                           
  3549                           ;incstack = 0
  3550                           ;I2C_Read@flag stored from wreg
  3551  0018EC  6E01               	movwf	I2C_Read@flag^0,c
  3552  0018EE                     
  3553                           ;PIC18F4550_I2C_Source_File.c: 12: char I2C_Read(char flag);PIC18F4550_I2C_Source_File.c
      +                          : 14: {;PIC18F4550_I2C_Source_File.c: 15:         char buffer;;PIC18F4550_I2C_Source_Fil
      +                          e.c: 16:         RCEN = 1;
  3554  0018EE  86C5               	bsf	4037,3,c	;volatile
  3555  0018F0                     l195:
  3556  0018F0  A0C7               	btfss	199,0,c	;volatile
  3557  0018F2  EF7D  F00C         	goto	u1401
  3558  0018F6  EF7F  F00C         	goto	u1400
  3559  0018FA                     u1401:
  3560  0018FA  EF78  F00C         	goto	l195
  3561  0018FE                     u1400:
  3562  0018FE                     
  3563                           ;PIC18F4550_I2C_Source_File.c: 19:         buffer = SSPBUF;
  3564  0018FE  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3565  001902                     
  3566                           ;PIC18F4550_I2C_Source_File.c: 21:         if(flag==0)
  3567  001902  5001               	movf	I2C_Read@flag^0,w,c
  3568  001904  A4D8               	btfss	status,2,c
  3569  001906  EF87  F00C         	goto	u1411
  3570  00190A  EF89  F00C         	goto	u1410
  3571  00190E                     u1411:
  3572  00190E  EF8D  F00C         	goto	l2021
  3573  001912                     u1410:
  3574  001912                     
  3575                           ;PIC18F4550_I2C_Source_File.c: 22:             I2C_Ack();
  3576  001912  EC7A  F00D         	call	_I2C_Ack	;wreg free
  3577  001916  EF8F  F00C         	goto	l199
  3578  00191A                     l2021:
  3579                           
  3580                           ;PIC18F4550_I2C_Source_File.c: 24:             I2C_Nack();
  3581  00191A  EC70  F00D         	call	_I2C_Nack	;wreg free
  3582  00191E                     l199:
  3583                           
  3584                           ;PIC18F4550_I2C_Source_File.c: 25:         I2C_Ready();
  3585  00191E  EC98  F00D         	call	_I2C_Ready	;wreg free
  3586  001922                     
  3587                           ;PIC18F4550_I2C_Source_File.c: 26:         return(buffer);
  3588  001922  5002               	movf	I2C_Read@buffer^0,w,c
  3589  001924  0012               	return		;funcret
  3590  001926                     __end_of_I2C_Read:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function _I2C_Ready *****************
  3594 ;; Defined at:
  3595 ;;		line 43 in file "PIC18F4550_I2C_Source_File.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		None
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3609 ;;      Params:         0       0       0       0       0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3613 ;;Total ram usage:        0 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_I2C_Read
  3619 ;;		_I2C_Write
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text20
  3624  001B30                     __ptext20:
  3625                           	callstack 0
  3626  001B30                     _I2C_Ready:
  3627                           	callstack 28
  3628  001B30                     l206:
  3629  001B30  A69E               	btfss	3998,3,c	;volatile
  3630  001B32  EF9D  F00D         	goto	u1111
  3631  001B36  EF9F  F00D         	goto	u1110
  3632  001B3A                     u1111:
  3633  001B3A  EF98  F00D         	goto	l206
  3634  001B3E                     u1110:
  3635  001B3E                     
  3636                           ;PIC18F4550_I2C_Source_File.c: 46:     SSPIF=0;
  3637  001B3E  969E               	bcf	3998,3,c	;volatile
  3638  001B40  0012               	return		;funcret
  3639  001B42                     __end_of_I2C_Ready:
  3640                           	callstack 0
  3641                           
  3642 ;; *************** function _I2C_Nack *****************
  3643 ;; Defined at:
  3644 ;;		line 118 in file "PIC18F4550_I2C_Source_File.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		None
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3658 ;;      Params:         0       0       0       0       0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_I2C_Read
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text21
  3672  001AE0                     __ptext21:
  3673                           	callstack 0
  3674  001AE0                     _I2C_Nack:
  3675                           	callstack 28
  3676  001AE0                     
  3677                           ;PIC18F4550_I2C_Source_File.c: 120:     ACKDT=1;
  3678  001AE0  8AC5               	bsf	4037,5,c	;volatile
  3679                           
  3680                           ;PIC18F4550_I2C_Source_File.c: 121:  ACKEN=1;
  3681  001AE2  88C5               	bsf	4037,4,c	;volatile
  3682  001AE4                     l257:
  3683  001AE4  B8C5               	btfsc	4037,4,c	;volatile
  3684  001AE6  EF77  F00D         	goto	u1311
  3685  001AEA  EF79  F00D         	goto	u1310
  3686  001AEE                     u1311:
  3687  001AEE  EF72  F00D         	goto	l257
  3688  001AF2                     u1310:
  3689  001AF2  0012               	return		;funcret
  3690  001AF4                     __end_of_I2C_Nack:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _I2C_Ack *****************
  3694 ;; Defined at:
  3695 ;;		line 111 in file "PIC18F4550_I2C_Source_File.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		None
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3709 ;;      Params:         0       0       0       0       0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3712 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3713 ;;Total ram usage:        0 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_I2C_Read
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text22
  3723  001AF4                     __ptext22:
  3724                           	callstack 0
  3725  001AF4                     _I2C_Ack:
  3726                           	callstack 28
  3727  001AF4                     
  3728                           ;PIC18F4550_I2C_Source_File.c: 113:     ACKDT=0;
  3729  001AF4  9AC5               	bcf	4037,5,c	;volatile
  3730                           
  3731                           ;PIC18F4550_I2C_Source_File.c: 114:  ACKEN=1;
  3732  001AF6  88C5               	bsf	4037,4,c	;volatile
  3733  001AF8                     l251:
  3734  001AF8  B8C5               	btfsc	4037,4,c	;volatile
  3735  001AFA  EF81  F00D         	goto	u1301
  3736  001AFE  EF83  F00D         	goto	u1300
  3737  001B02                     u1301:
  3738  001B02  EF7C  F00D         	goto	l251
  3739  001B06                     u1300:
  3740  001B06  0012               	return		;funcret
  3741  001B08                     __end_of_I2C_Ack:
  3742                           	callstack 0
  3743                           
  3744 ;; *************** function _LCD_String_xy *****************
  3745 ;; Defined at:
  3746 ;;		line 63 in file "LCD_16x2_4bit_mode.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  row             1    wreg     unsigned char 
  3749 ;;  pos             1   10[COMRAM] unsigned char 
  3750 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  3751 ;;		 -> main@counters_min(10), main@counters(10), main@hours(10), STR_2(3), 
  3752 ;;		 -> STR_1(3), 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  row             1   13[COMRAM] unsigned char 
  3755 ;;  location        1   14[COMRAM] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3765 ;;      Params:         3       0       0       0       0       0       0       0       0
  3766 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3768 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3769 ;;Total ram usage:        5 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    3
  3772 ;; This function calls:
  3773 ;;		_LCD_Command
  3774 ;;		_LCD_String
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text23
  3781  001870                     __ptext23:
  3782                           	callstack 0
  3783  001870                     _LCD_String_xy:
  3784                           	callstack 27
  3785                           
  3786                           ;incstack = 0
  3787                           ;LCD_String_xy@row stored from wreg
  3788  001870  6E0E               	movwf	LCD_String_xy@row^0,c
  3789  001872                     
  3790                           ;LCD_16x2_4bit_mode.c: 66:     if(row<=1)
  3791  001872  0E02               	movlw	2
  3792  001874  600E               	cpfslt	LCD_String_xy@row^0,c
  3793  001876  EF3F  F00C         	goto	u1591
  3794  00187A  EF41  F00C         	goto	u1590
  3795  00187E                     u1591:
  3796  00187E  EF4A  F00C         	goto	l2193
  3797  001882                     u1590:
  3798  001882                     
  3799                           ;LCD_16x2_4bit_mode.c: 67:     {;LCD_16x2_4bit_mode.c: 68:         location = (0x80) | (
      +                          (pos) & 0x0f);
  3800  001882  500B               	movf	LCD_String_xy@pos^0,w,c
  3801  001884  0B0F               	andlw	15
  3802  001886  0980               	iorlw	128
  3803  001888  6E0F               	movwf	LCD_String_xy@location^0,c
  3804  00188A                     
  3805                           ;LCD_16x2_4bit_mode.c: 69:         LCD_Command(location);
  3806  00188A  500F               	movf	LCD_String_xy@location^0,w,c
  3807  00188C  EC87  F00B         	call	_LCD_Command
  3808                           
  3809                           ;LCD_16x2_4bit_mode.c: 70:     }
  3810  001890  EF51  F00C         	goto	l2197
  3811  001894                     l2193:
  3812                           
  3813                           ;LCD_16x2_4bit_mode.c: 72:     {;LCD_16x2_4bit_mode.c: 73:         location = (0xC0) | (
      +                          (pos) & 0x0f);
  3814  001894  500B               	movf	LCD_String_xy@pos^0,w,c
  3815  001896  0B0F               	andlw	15
  3816  001898  09C0               	iorlw	192
  3817  00189A  6E0F               	movwf	LCD_String_xy@location^0,c
  3818  00189C                     
  3819                           ;LCD_16x2_4bit_mode.c: 74:         LCD_Command(location);
  3820  00189C  500F               	movf	LCD_String_xy@location^0,w,c
  3821  00189E  EC87  F00B         	call	_LCD_Command
  3822  0018A2                     l2197:
  3823                           
  3824                           ;LCD_16x2_4bit_mode.c: 78:     LCD_String(msg);
  3825  0018A2  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
  3826  0018A6  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3827  0018AA  ECDD  F00A         	call	_LCD_String	;wreg free
  3828  0018AE  0012               	return		;funcret
  3829  0018B0                     __end_of_LCD_String_xy:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _LCD_String *****************
  3833 ;; Defined at:
  3834 ;;		line 53 in file "LCD_16x2_4bit_mode.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  msg             2    8[COMRAM] PTR const unsigned char 
  3837 ;;		 -> main@counters_pomos(10), main@counters_sec(10), main@counters_min(10), main@counters(10), 
  3838 ;;		 -> main@hours(10), main@mins(10), main@secs(10), STR_2(3), 
  3839 ;;		 -> STR_1(3), 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         2       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3854 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:        2 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    2
  3858 ;; This function calls:
  3859 ;;		_LCD_Char
  3860 ;; This function is called by:
  3861 ;;		_main
  3862 ;;		_LCD_String_xy
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text24
  3867  0015BA                     __ptext24:
  3868                           	callstack 0
  3869  0015BA                     _LCD_String:
  3870                           	callstack 27
  3871  0015BA                     
  3872                           ;LCD_16x2_4bit_mode.c: 53: void LCD_String(const char *msg);LCD_16x2_4bit_mode.c: 54: {;
      +                          LCD_16x2_4bit_mode.c: 55:  while((*msg)!=0)
  3873  0015BA  EFF3  F00A         	goto	l2033
  3874  0015BE                     l2029:
  3875                           
  3876                           ;LCD_16x2_4bit_mode.c: 56:  {;LCD_16x2_4bit_mode.c: 57:    LCD_Char(*msg);
  3877  0015BE  C009  FFF6         	movff	LCD_String@msg,tblptrl
  3878  0015C2  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  3879  0015C6  6AF8               	clrf	tblptru,c
  3880  0015C8  0E07               	movlw	(high __ramtop+-1)
  3881  0015CA  64F7               	cpfsgt	tblptrh,c
  3882  0015CC  D003               	bra	u1427
  3883  0015CE  0008               	tblrd		*
  3884  0015D0  50F5               	movf	tablat,w,c
  3885  0015D2  D005               	bra	u1420
  3886  0015D4                     u1427:
  3887  0015D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  3888  0015D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  3889  0015DC  50E7               	movf	indf1,w,c
  3890  0015DE                     u1420:
  3891  0015DE  EC61  F00B         	call	_LCD_Char
  3892  0015E2                     
  3893                           ;LCD_16x2_4bit_mode.c: 58:    msg++;
  3894  0015E2  4A09               	infsnz	LCD_String@msg^0,f,c
  3895  0015E4  2A0A               	incf	(LCD_String@msg+1)^0,f,c
  3896  0015E6                     l2033:
  3897                           
  3898                           ;LCD_16x2_4bit_mode.c: 55:  while((*msg)!=0)
  3899  0015E6  C009  FFF6         	movff	LCD_String@msg,tblptrl
  3900  0015EA  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  3901  0015EE  6AF8               	clrf	tblptru,c
  3902  0015F0  0E07               	movlw	(high __ramtop+-1)
  3903  0015F2  64F7               	cpfsgt	tblptrh,c
  3904  0015F4  D003               	bra	u1437
  3905  0015F6  0008               	tblrd		*
  3906  0015F8  50F5               	movf	tablat,w,c
  3907  0015FA  D005               	bra	u1430
  3908  0015FC                     u1437:
  3909  0015FC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3910  001600  CFF7 FFE2          	movff	tblptrh,fsr1h
  3911  001604  50E7               	movf	indf1,w,c
  3912  001606                     u1430:
  3913  001606  0900               	iorlw	0
  3914  001608  A4D8               	btfss	status,2,c
  3915  00160A  EF09  F00B         	goto	u1441
  3916  00160E  EF0B  F00B         	goto	u1440
  3917  001612                     u1441:
  3918  001612  EFDF  F00A         	goto	l2029
  3919  001616                     u1440:
  3920  001616  0012               	return		;funcret
  3921  001618                     __end_of_LCD_String:
  3922                           	callstack 0
  3923                           
  3924 ;; *************** function _LCD_Char *****************
  3925 ;; Defined at:
  3926 ;;		line 39 in file "LCD_16x2_4bit_mode.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  dat             1    wreg     unsigned char 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  dat             1    7[COMRAM] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3940 ;;      Params:         0       0       0       0       0       0       0       0       0
  3941 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3942 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3943 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3944 ;;Total ram usage:        2 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    1
  3947 ;; This function calls:
  3948 ;;		_MSdelay
  3949 ;; This function is called by:
  3950 ;;		_LCD_String
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text25
  3955  0016C2                     __ptext25:
  3956                           	callstack 0
  3957  0016C2                     _LCD_Char:
  3958                           	callstack 27
  3959                           
  3960                           ;incstack = 0
  3961                           ;LCD_Char@dat stored from wreg
  3962  0016C2  6E08               	movwf	LCD_Char@dat^0,c
  3963  0016C4                     
  3964                           ;LCD_16x2_4bit_mode.c: 39: void LCD_Char(unsigned char dat);LCD_16x2_4bit_mode.c: 40: {;
      +                          LCD_16x2_4bit_mode.c: 41:  LATD = (LATD & 0x0f) | (0xF0 & dat);
  3965  0016C4  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  3966  0016C8  0EF0               	movlw	240
  3967  0016CA  1607               	andwf	??_LCD_Char^0,f,c
  3968  0016CC  508C               	movf	140,w,c	;volatile
  3969  0016CE  0B0F               	andlw	15
  3970  0016D0  1007               	iorwf	??_LCD_Char^0,w,c
  3971  0016D2  6E8C               	movwf	140,c	;volatile
  3972  0016D4                     
  3973                           ;LCD_16x2_4bit_mode.c: 42:  LATD2 = 1;
  3974  0016D4  848C               	bsf	3980,2,c	;volatile
  3975  0016D6                     
  3976                           ;LCD_16x2_4bit_mode.c: 43:  LATD3 = 1;
  3977  0016D6  868C               	bsf	3980,3,c	;volatile
  3978  0016D8                     
  3979                           ;LCD_16x2_4bit_mode.c: 44:  __nop();
  3980  0016D8  F000               	nop	
  3981  0016DA                     
  3982                           ;LCD_16x2_4bit_mode.c: 45:  LATD3 = 0;
  3983  0016DA  968C               	bcf	3980,3,c	;volatile
  3984  0016DC                     
  3985                           ;LCD_16x2_4bit_mode.c: 46:  MSdelay(1);
  3986  0016DC  0E00               	movlw	0
  3987  0016DE  6E02               	movwf	(MSdelay@val+1)^0,c
  3988  0016E0  0E01               	movlw	1
  3989  0016E2  6E01               	movwf	MSdelay@val^0,c
  3990  0016E4  ECAD  F00B         	call	_MSdelay	;wreg free
  3991  0016E8                     
  3992                           ;LCD_16x2_4bit_mode.c: 47:     LATD = (LATD & 0x0f) | (dat<<4);
  3993  0016E8  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  3994  0016EC  3A07               	swapf	??_LCD_Char^0,f,c
  3995  0016EE  0EF0               	movlw	240
  3996  0016F0  1607               	andwf	??_LCD_Char^0,f,c
  3997  0016F2  508C               	movf	140,w,c	;volatile
  3998  0016F4  0B0F               	andlw	15
  3999  0016F6  1007               	iorwf	??_LCD_Char^0,w,c
  4000  0016F8  6E8C               	movwf	140,c	;volatile
  4001  0016FA                     
  4002                           ;LCD_16x2_4bit_mode.c: 48:  LATD3 = 1;
  4003  0016FA  868C               	bsf	3980,3,c	;volatile
  4004  0016FC                     
  4005                           ;LCD_16x2_4bit_mode.c: 49:  __nop();
  4006  0016FC  F000               	nop	
  4007  0016FE                     
  4008                           ;LCD_16x2_4bit_mode.c: 50:  LATD3 = 0;
  4009  0016FE  968C               	bcf	3980,3,c	;volatile
  4010                           
  4011                           ;LCD_16x2_4bit_mode.c: 51:  MSdelay(3);
  4012  001700  0E00               	movlw	0
  4013  001702  6E02               	movwf	(MSdelay@val+1)^0,c
  4014  001704  0E03               	movlw	3
  4015  001706  6E01               	movwf	MSdelay@val^0,c
  4016  001708  ECAD  F00B         	call	_MSdelay	;wreg free
  4017  00170C  0012               	return		;funcret
  4018  00170E                     __end_of_LCD_Char:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _LCD_Init *****************
  4022 ;; Defined at:
  4023 ;;		line 8 in file "LCD_16x2_4bit_mode.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4040 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4041 ;;Total ram usage:        0 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    2
  4044 ;; This function calls:
  4045 ;;		_LCD_Command
  4046 ;;		_MSdelay
  4047 ;; This function is called by:
  4048 ;;		_main
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text26
  4053  0019CC                     __ptext26:
  4054                           	callstack 0
  4055  0019CC                     _LCD_Init:
  4056                           	callstack 28
  4057  0019CC                     
  4058                           ;LCD_16x2_4bit_mode.c: 10:     TRISD = 0;
  4059  0019CC  0E00               	movlw	0
  4060  0019CE  6E95               	movwf	149,c	;volatile
  4061  0019D0                     
  4062                           ;LCD_16x2_4bit_mode.c: 11:     MSdelay(20);
  4063  0019D0  0E00               	movlw	0
  4064  0019D2  6E02               	movwf	(MSdelay@val+1)^0,c
  4065  0019D4  0E14               	movlw	20
  4066  0019D6  6E01               	movwf	MSdelay@val^0,c
  4067  0019D8  ECAD  F00B         	call	_MSdelay	;wreg free
  4068  0019DC                     
  4069                           ;LCD_16x2_4bit_mode.c: 12:     LCD_Command(0x02);
  4070  0019DC  0E02               	movlw	2
  4071  0019DE  EC87  F00B         	call	_LCD_Command
  4072  0019E2                     
  4073                           ;LCD_16x2_4bit_mode.c: 14:     LCD_Command(0x28);
  4074  0019E2  0E28               	movlw	40
  4075  0019E4  EC87  F00B         	call	_LCD_Command
  4076  0019E8                     
  4077                           ;LCD_16x2_4bit_mode.c: 16:  LCD_Command(0x01);
  4078  0019E8  0E01               	movlw	1
  4079  0019EA  EC87  F00B         	call	_LCD_Command
  4080  0019EE                     
  4081                           ;LCD_16x2_4bit_mode.c: 17:     LCD_Command(0x0c);
  4082  0019EE  0E0C               	movlw	12
  4083  0019F0  EC87  F00B         	call	_LCD_Command
  4084  0019F4                     
  4085                           ;LCD_16x2_4bit_mode.c: 18:  LCD_Command(0x06);
  4086  0019F4  0E06               	movlw	6
  4087  0019F6  EC87  F00B         	call	_LCD_Command
  4088  0019FA  0012               	return		;funcret
  4089  0019FC                     __end_of_LCD_Init:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function _LCD_Clear *****************
  4093 ;; Defined at:
  4094 ;;		line 82 in file "LCD_16x2_4bit_mode.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4108 ;;      Params:         0       0       0       0       0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4111 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4112 ;;Total ram usage:        0 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    2
  4115 ;; This function calls:
  4116 ;;		_LCD_Command
  4117 ;;		_MSdelay
  4118 ;; This function is called by:
  4119 ;;		_main
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text27
  4124  001B08                     __ptext27:
  4125                           	callstack 0
  4126  001B08                     _LCD_Clear:
  4127                           	callstack 28
  4128  001B08                     
  4129                           ;LCD_16x2_4bit_mode.c: 84:     LCD_Command(0x01);
  4130  001B08  0E01               	movlw	1
  4131  001B0A  EC87  F00B         	call	_LCD_Command
  4132                           
  4133                           ;LCD_16x2_4bit_mode.c: 85:     MSdelay(3);
  4134  001B0E  0E00               	movlw	0
  4135  001B10  6E02               	movwf	(MSdelay@val+1)^0,c
  4136  001B12  0E03               	movlw	3
  4137  001B14  6E01               	movwf	MSdelay@val^0,c
  4138  001B16  ECAD  F00B         	call	_MSdelay	;wreg free
  4139  001B1A  0012               	return		;funcret
  4140  001B1C                     __end_of_LCD_Clear:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _LCD_Command *****************
  4144 ;; Defined at:
  4145 ;;		line 21 in file "LCD_16x2_4bit_mode.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  cmd             1    wreg     unsigned char 
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  cmd             1    7[COMRAM] unsigned char 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0
  4160 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4161 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4162 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4163 ;;Total ram usage:        2 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    1
  4166 ;; This function calls:
  4167 ;;		_MSdelay
  4168 ;; This function is called by:
  4169 ;;		_LCD_Init
  4170 ;;		_LCD_String_xy
  4171 ;;		_LCD_Clear
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text28
  4176  00170E                     __ptext28:
  4177                           	callstack 0
  4178  00170E                     _LCD_Command:
  4179                           	callstack 28
  4180                           
  4181                           ;incstack = 0
  4182                           ;LCD_Command@cmd stored from wreg
  4183  00170E  6E08               	movwf	LCD_Command@cmd^0,c
  4184  001710                     
  4185                           ;LCD_16x2_4bit_mode.c: 21: void LCD_Command(unsigned char cmd );LCD_16x2_4bit_mode.c: 22
      +                          : {;LCD_16x2_4bit_mode.c: 23:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
  4186  001710  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  4187  001714  0EF0               	movlw	240
  4188  001716  1607               	andwf	??_LCD_Command^0,f,c
  4189  001718  508C               	movf	140,w,c	;volatile
  4190  00171A  0B0F               	andlw	15
  4191  00171C  1007               	iorwf	??_LCD_Command^0,w,c
  4192  00171E  6E8C               	movwf	140,c	;volatile
  4193  001720                     
  4194                           ;LCD_16x2_4bit_mode.c: 24:  LATD2 = 0;
  4195  001720  948C               	bcf	3980,2,c	;volatile
  4196  001722                     
  4197                           ;LCD_16x2_4bit_mode.c: 25:  LATD3 = 1;
  4198  001722  868C               	bsf	3980,3,c	;volatile
  4199  001724                     
  4200                           ;LCD_16x2_4bit_mode.c: 26:  __nop();
  4201  001724  F000               	nop	
  4202  001726                     
  4203                           ;LCD_16x2_4bit_mode.c: 27:  LATD3 = 0;
  4204  001726  968C               	bcf	3980,3,c	;volatile
  4205  001728                     
  4206                           ;LCD_16x2_4bit_mode.c: 28:  MSdelay(1);
  4207  001728  0E00               	movlw	0
  4208  00172A  6E02               	movwf	(MSdelay@val+1)^0,c
  4209  00172C  0E01               	movlw	1
  4210  00172E  6E01               	movwf	MSdelay@val^0,c
  4211  001730  ECAD  F00B         	call	_MSdelay	;wreg free
  4212  001734                     
  4213                           ;LCD_16x2_4bit_mode.c: 29:     LATD = (LATD & 0x0f) | (cmd<<4);
  4214  001734  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  4215  001738  3A07               	swapf	??_LCD_Command^0,f,c
  4216  00173A  0EF0               	movlw	240
  4217  00173C  1607               	andwf	??_LCD_Command^0,f,c
  4218  00173E  508C               	movf	140,w,c	;volatile
  4219  001740  0B0F               	andlw	15
  4220  001742  1007               	iorwf	??_LCD_Command^0,w,c
  4221  001744  6E8C               	movwf	140,c	;volatile
  4222  001746                     
  4223                           ;LCD_16x2_4bit_mode.c: 30:  LATD3 = 1;
  4224  001746  868C               	bsf	3980,3,c	;volatile
  4225  001748                     
  4226                           ;LCD_16x2_4bit_mode.c: 31:  __nop();
  4227  001748  F000               	nop	
  4228  00174A                     
  4229                           ;LCD_16x2_4bit_mode.c: 32:  LATD3 = 0;
  4230  00174A  968C               	bcf	3980,3,c	;volatile
  4231                           
  4232                           ;LCD_16x2_4bit_mode.c: 33:  MSdelay(3);
  4233  00174C  0E00               	movlw	0
  4234  00174E  6E02               	movwf	(MSdelay@val+1)^0,c
  4235  001750  0E03               	movlw	3
  4236  001752  6E01               	movwf	MSdelay@val^0,c
  4237  001754  ECAD  F00B         	call	_MSdelay	;wreg free
  4238  001758  0012               	return		;funcret
  4239  00175A                     __end_of_LCD_Command:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _MSdelay *****************
  4243 ;; Defined at:
  4244 ;;		line 88 in file "LCD_16x2_4bit_mode.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  val             2    0[COMRAM] unsigned int 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  j               2    4[COMRAM] unsigned int 
  4249 ;;  i               2    2[COMRAM] unsigned int 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4259 ;;      Params:         2       0       0       0       0       0       0       0       0
  4260 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4262 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4263 ;;Total ram usage:        6 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_main
  4269 ;;		_LCD_Init
  4270 ;;		_LCD_Command
  4271 ;;		_LCD_Char
  4272 ;;		_LCD_Clear
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text29
  4277  00175A                     __ptext29:
  4278                           	callstack 0
  4279  00175A                     _MSdelay:
  4280                           	callstack 30
  4281  00175A                     
  4282                           ;LCD_16x2_4bit_mode.c: 88: void MSdelay(unsigned int val);LCD_16x2_4bit_mode.c: 89: {;LC
      +                          D_16x2_4bit_mode.c: 90:  unsigned int i,j;;LCD_16x2_4bit_mode.c: 91:  for(i=0;i<val;i++)
  4283  00175A  0E00               	movlw	0
  4284  00175C  6E04               	movwf	(MSdelay@i+1)^0,c
  4285  00175E  0E00               	movlw	0
  4286  001760  6E03               	movwf	MSdelay@i^0,c
  4287  001762  EFC6  F00B         	goto	l1839
  4288  001766                     l1827:
  4289                           
  4290                           ;LCD_16x2_4bit_mode.c: 92:      for(j=0;j<165;j++);
  4291  001766  0E00               	movlw	0
  4292  001768  6E06               	movwf	(MSdelay@j+1)^0,c
  4293  00176A  0E00               	movlw	0
  4294  00176C  6E05               	movwf	MSdelay@j^0,c
  4295  00176E                     l1833:
  4296  00176E  4A05               	infsnz	MSdelay@j^0,f,c
  4297  001770  2A06               	incf	(MSdelay@j+1)^0,f,c
  4298  001772  5006               	movf	(MSdelay@j+1)^0,w,c
  4299  001774  E109               	bnz	u1090
  4300  001776  0EA5               	movlw	165
  4301  001778  5C05               	subwf	MSdelay@j^0,w,c
  4302  00177A  A0D8               	btfss	status,0,c
  4303  00177C  EFC2  F00B         	goto	u1091
  4304  001780  EFC4  F00B         	goto	u1090
  4305  001784                     u1091:
  4306  001784  EFB7  F00B         	goto	l1833
  4307  001788                     u1090:
  4308  001788  4A03               	infsnz	MSdelay@i^0,f,c
  4309  00178A  2A04               	incf	(MSdelay@i+1)^0,f,c
  4310  00178C                     l1839:
  4311  00178C  5001               	movf	MSdelay@val^0,w,c
  4312  00178E  5C03               	subwf	MSdelay@i^0,w,c
  4313  001790  5002               	movf	(MSdelay@val+1)^0,w,c
  4314  001792  5804               	subwfb	(MSdelay@i+1)^0,w,c
  4315  001794  A0D8               	btfss	status,0,c
  4316  001796  EFCF  F00B         	goto	u1101
  4317  00179A  EFD1  F00B         	goto	u1100
  4318  00179E                     u1101:
  4319  00179E  EFB3  F00B         	goto	l1827
  4320  0017A2                     u1100:
  4321  0017A2  0012               	return		;funcret
  4322  0017A4                     __end_of_MSdelay:
  4323                           	callstack 0
  4324                           
  4325 ;; *************** function _I2C_Stop *****************
  4326 ;; Defined at:
  4327 ;;		line 93 in file "PIC18F4550_I2C_Source_File.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      unsigned char 
  4334 ;; Registers used:
  4335 ;;		wreg
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4341 ;;      Params:         0       0       0       0       0       0       0       0       0
  4342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4344 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4345 ;;Total ram usage:        0 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; This function calls:
  4348 ;;		Nothing
  4349 ;; This function is called by:
  4350 ;;		_main
  4351 ;;		_RTC_Clock_Write
  4352 ;;		_I2C_Start_Wait
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text30
  4357  001B1C                     __ptext30:
  4358                           	callstack 0
  4359  001B1C                     _I2C_Stop:
  4360                           	callstack 30
  4361  001B1C                     
  4362                           ;PIC18F4550_I2C_Source_File.c: 95:     PEN = 1;
  4363  001B1C  84C5               	bsf	4037,2,c	;volatile
  4364  001B1E                     l239:
  4365  001B1E  B4C5               	btfsc	4037,2,c	;volatile
  4366  001B20  EF94  F00D         	goto	u1581
  4367  001B24  EF96  F00D         	goto	u1580
  4368  001B28                     u1581:
  4369  001B28  EF8F  F00D         	goto	l239
  4370  001B2C                     u1580:
  4371  001B2C                     
  4372                           ;PIC18F4550_I2C_Source_File.c: 97:     if(!SSPSTATbits.P);
  4373  001B2C  50C7               	movf	199,w,c	;volatile
  4374  001B2E  0012               	return		;funcret
  4375  001B30                     __end_of_I2C_Stop:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _I2C_Init *****************
  4379 ;; Defined at:
  4380 ;;		line 29 in file "PIC18F4550_I2C_Source_File.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4397 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_main
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text31
  4408  001AC6                     __ptext31:
  4409                           	callstack 0
  4410  001AC6                     _I2C_Init:
  4411                           	callstack 30
  4412  001AC6                     
  4413                           ;PIC18F4550_I2C_Source_File.c: 31:     TRISB0=1;
  4414  001AC6  8093               	bsf	3987,0,c	;volatile
  4415                           
  4416                           ;PIC18F4550_I2C_Source_File.c: 32:  TRISB1=1;
  4417  001AC8  8293               	bsf	3987,1,c	;volatile
  4418  001ACA                     
  4419                           ;PIC18F4550_I2C_Source_File.c: 33:  SSPSTAT=80;
  4420  001ACA  0E50               	movlw	80
  4421  001ACC  6EC7               	movwf	199,c	;volatile
  4422                           
  4423                           ;PIC18F4550_I2C_Source_File.c: 34:     SSPCON1=0x28;
  4424  001ACE  0E28               	movlw	40
  4425  001AD0  6EC6               	movwf	198,c	;volatile
  4426                           
  4427                           ;PIC18F4550_I2C_Source_File.c: 36:  SSPCON2=0;
  4428  001AD2  0E00               	movlw	0
  4429  001AD4  6EC5               	movwf	197,c	;volatile
  4430                           
  4431                           ;PIC18F4550_I2C_Source_File.c: 37:     SSPADD=((8000000/(4*100000))-1);
  4432  001AD6  0E13               	movlw	19
  4433  001AD8  6EC8               	movwf	200,c	;volatile
  4434  001ADA                     
  4435                           ;PIC18F4550_I2C_Source_File.c: 38:     SSPIE=1;
  4436  001ADA  869D               	bsf	3997,3,c	;volatile
  4437  001ADC                     
  4438                           ;PIC18F4550_I2C_Source_File.c: 39:     SSPIF=0;
  4439  001ADC  969E               	bcf	3998,3,c	;volatile
  4440  001ADE  0012               	return		;funcret
  4441  001AE0                     __end_of_I2C_Init:
  4442                           	callstack 0
  4443                           
  4444 ;; *************** function _Dec2Bcd *****************
  4445 ;; Defined at:
  4446 ;;		line 95 in file "LCD_16x2_4bit_mode.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  dec             2    8[COMRAM] int 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  bdc             2   12[COMRAM] int 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  2    8[COMRAM] int 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4460 ;;      Params:         2       0       0       0       0       0       0       0       0
  4461 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4462 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4463 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4464 ;;Total ram usage:        6 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    1
  4467 ;; This function calls:
  4468 ;;		___awdiv
  4469 ;;		___awmod
  4470 ;; This function is called by:
  4471 ;;		_main
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text32
  4476  001618                     __ptext32:
  4477                           	callstack 0
  4478  001618                     _Dec2Bcd:
  4479                           	callstack 29
  4480  001618                     
  4481                           ;LCD_16x2_4bit_mode.c: 96:     int bdc;;LCD_16x2_4bit_mode.c: 97:     bdc = ((dec/10) <<
      +                           4) + (dec % 10);
  4482  001618  C009  F001         	movff	Dec2Bcd@dec,___awdiv@dividend
  4483  00161C  C00A  F002         	movff	Dec2Bcd@dec+1,___awdiv@dividend+1
  4484  001620  0E00               	movlw	0
  4485  001622  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4486  001624  0E0A               	movlw	10
  4487  001626  6E03               	movwf	___awdiv@divisor^0,c
  4488  001628  EC62  F009         	call	___awdiv	;wreg free
  4489  00162C  C001  F00B         	movff	?___awdiv,??_Dec2Bcd
  4490  001630  C002  F00C         	movff	?___awdiv+1,??_Dec2Bcd+1
  4491  001634  3A0B               	swapf	??_Dec2Bcd^0,f,c
  4492  001636  3A0C               	swapf	(??_Dec2Bcd+1)^0,f,c
  4493  001638  0EF0               	movlw	240
  4494  00163A  160C               	andwf	(??_Dec2Bcd+1)^0,f,c
  4495  00163C  500B               	movf	??_Dec2Bcd^0,w,c
  4496  00163E  0B0F               	andlw	15
  4497  001640  120C               	iorwf	(??_Dec2Bcd+1)^0,f,c
  4498  001642  0EF0               	movlw	240
  4499  001644  160B               	andwf	??_Dec2Bcd^0,f,c
  4500  001646  C009  F001         	movff	Dec2Bcd@dec,___awmod@dividend
  4501  00164A  C00A  F002         	movff	Dec2Bcd@dec+1,___awmod@dividend+1
  4502  00164E  0E00               	movlw	0
  4503  001650  6E04               	movwf	(___awmod@divisor+1)^0,c
  4504  001652  0E0A               	movlw	10
  4505  001654  6E03               	movwf	___awmod@divisor^0,c
  4506  001656  EC25  F00A         	call	___awmod	;wreg free
  4507  00165A  5001               	movf	?___awmod^0,w,c
  4508  00165C  240B               	addwf	??_Dec2Bcd^0,w,c
  4509  00165E  6E0D               	movwf	Dec2Bcd@bdc^0,c
  4510  001660  5002               	movf	(?___awmod+1)^0,w,c
  4511  001662  200C               	addwfc	(??_Dec2Bcd+1)^0,w,c
  4512  001664  6E0E               	movwf	(Dec2Bcd@bdc+1)^0,c
  4513  001666                     
  4514                           ;LCD_16x2_4bit_mode.c: 98:     return bdc;
  4515  001666  C00D  F009         	movff	Dec2Bcd@bdc,?_Dec2Bcd
  4516  00166A  C00E  F00A         	movff	Dec2Bcd@bdc+1,?_Dec2Bcd+1
  4517  00166E  0012               	return		;funcret
  4518  001670                     __end_of_Dec2Bcd:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function ___awmod *****************
  4522 ;; Defined at:
  4523 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  dividend        2    0[COMRAM] int 
  4526 ;;  divisor         2    2[COMRAM] int 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  sign            1    5[COMRAM] unsigned char 
  4529 ;;  counter         1    4[COMRAM] unsigned char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  2    0[COMRAM] int 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4539 ;;      Params:         4       0       0       0       0       0       0       0       0
  4540 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4542 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4543 ;;Total ram usage:        6 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_main
  4549 ;;		_Dec2Bcd
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text33
  4554  00144A                     __ptext33:
  4555                           	callstack 0
  4556  00144A                     ___awmod:
  4557                           	callstack 30
  4558  00144A  0E00               	movlw	0
  4559  00144C  6E06               	movwf	___awmod@sign^0,c
  4560  00144E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4561  001450  EF2E  F00A         	goto	u1510
  4562  001454  EF2C  F00A         	goto	u1511
  4563  001458                     u1511:
  4564  001458  EF34  F00A         	goto	l2113
  4565  00145C                     u1510:
  4566  00145C  6C01               	negf	___awmod@dividend^0,c
  4567  00145E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4568  001460  B0D8               	btfsc	status,0,c
  4569  001462  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4570  001464  0E01               	movlw	1
  4571  001466  6E06               	movwf	___awmod@sign^0,c
  4572  001468                     l2113:
  4573  001468  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4574  00146A  EF3B  F00A         	goto	u1520
  4575  00146E  EF39  F00A         	goto	u1521
  4576  001472                     u1521:
  4577  001472  EF3F  F00A         	goto	l2117
  4578  001476                     u1520:
  4579  001476  6C03               	negf	___awmod@divisor^0,c
  4580  001478  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4581  00147A  B0D8               	btfsc	status,0,c
  4582  00147C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4583  00147E                     l2117:
  4584  00147E  5003               	movf	___awmod@divisor^0,w,c
  4585  001480  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4586  001482  B4D8               	btfsc	status,2,c
  4587  001484  EF46  F00A         	goto	u1531
  4588  001488  EF48  F00A         	goto	u1530
  4589  00148C                     u1531:
  4590  00148C  EF6C  F00A         	goto	l2133
  4591  001490                     u1530:
  4592  001490  0E01               	movlw	1
  4593  001492  6E05               	movwf	___awmod@counter^0,c
  4594  001494  EF50  F00A         	goto	l2123
  4595  001498                     l2121:
  4596  001498  90D8               	bcf	status,0,c
  4597  00149A  3603               	rlcf	___awmod@divisor^0,f,c
  4598  00149C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4599  00149E  2A05               	incf	___awmod@counter^0,f,c
  4600  0014A0                     l2123:
  4601  0014A0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4602  0014A2  EF55  F00A         	goto	u1541
  4603  0014A6  EF57  F00A         	goto	u1540
  4604  0014AA                     u1541:
  4605  0014AA  EF4C  F00A         	goto	l2121
  4606  0014AE                     u1540:
  4607  0014AE                     l2125:
  4608  0014AE  5003               	movf	___awmod@divisor^0,w,c
  4609  0014B0  5C01               	subwf	___awmod@dividend^0,w,c
  4610  0014B2  5004               	movf	(___awmod@divisor+1)^0,w,c
  4611  0014B4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4612  0014B6  A0D8               	btfss	status,0,c
  4613  0014B8  EF60  F00A         	goto	u1551
  4614  0014BC  EF62  F00A         	goto	u1550
  4615  0014C0                     u1551:
  4616  0014C0  EF66  F00A         	goto	l2129
  4617  0014C4                     u1550:
  4618  0014C4  5003               	movf	___awmod@divisor^0,w,c
  4619  0014C6  5E01               	subwf	___awmod@dividend^0,f,c
  4620  0014C8  5004               	movf	(___awmod@divisor+1)^0,w,c
  4621  0014CA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4622  0014CC                     l2129:
  4623  0014CC  90D8               	bcf	status,0,c
  4624  0014CE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4625  0014D0  3203               	rrcf	___awmod@divisor^0,f,c
  4626  0014D2  2E05               	decfsz	___awmod@counter^0,f,c
  4627  0014D4  EF57  F00A         	goto	l2125
  4628  0014D8                     l2133:
  4629  0014D8  5006               	movf	___awmod@sign^0,w,c
  4630  0014DA  B4D8               	btfsc	status,2,c
  4631  0014DC  EF72  F00A         	goto	u1561
  4632  0014E0  EF74  F00A         	goto	u1560
  4633  0014E4                     u1561:
  4634  0014E4  EF78  F00A         	goto	l2137
  4635  0014E8                     u1560:
  4636  0014E8  6C01               	negf	___awmod@dividend^0,c
  4637  0014EA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4638  0014EC  B0D8               	btfsc	status,0,c
  4639  0014EE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4640  0014F0                     l2137:
  4641  0014F0  C001  F001         	movff	___awmod@dividend,?___awmod
  4642  0014F4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4643  0014F8  0012               	return		;funcret
  4644  0014FA                     __end_of___awmod:
  4645                           	callstack 0
  4646                           
  4647 ;; *************** function ___awdiv *****************
  4648 ;; Defined at:
  4649 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  dividend        2    0[COMRAM] int 
  4652 ;;  divisor         2    2[COMRAM] int 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  quotient        2    6[COMRAM] int 
  4655 ;;  sign            1    5[COMRAM] unsigned char 
  4656 ;;  counter         1    4[COMRAM] unsigned char 
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  2    0[COMRAM] int 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4666 ;;      Params:         4       0       0       0       0       0       0       0       0
  4667 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4669 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4670 ;;Total ram usage:        8 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_Dec2Bcd
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text34
  4680  0012C4                     __ptext34:
  4681                           	callstack 0
  4682  0012C4                     ___awdiv:
  4683                           	callstack 29
  4684  0012C4  0E00               	movlw	0
  4685  0012C6  6E06               	movwf	___awdiv@sign^0,c
  4686  0012C8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4687  0012CA  EF6B  F009         	goto	u1450
  4688  0012CE  EF69  F009         	goto	u1451
  4689  0012D2                     u1451:
  4690  0012D2  EF71  F009         	goto	l2069
  4691  0012D6                     u1450:
  4692  0012D6  6C03               	negf	___awdiv@divisor^0,c
  4693  0012D8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4694  0012DA  B0D8               	btfsc	status,0,c
  4695  0012DC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4696  0012DE  0E01               	movlw	1
  4697  0012E0  6E06               	movwf	___awdiv@sign^0,c
  4698  0012E2                     l2069:
  4699  0012E2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4700  0012E4  EF78  F009         	goto	u1460
  4701  0012E8  EF76  F009         	goto	u1461
  4702  0012EC                     u1461:
  4703  0012EC  EF7E  F009         	goto	l2075
  4704  0012F0                     u1460:
  4705  0012F0  6C01               	negf	___awdiv@dividend^0,c
  4706  0012F2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4707  0012F4  B0D8               	btfsc	status,0,c
  4708  0012F6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4709  0012F8  0E01               	movlw	1
  4710  0012FA  1A06               	xorwf	___awdiv@sign^0,f,c
  4711  0012FC                     l2075:
  4712  0012FC  0E00               	movlw	0
  4713  0012FE  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4714  001300  0E00               	movlw	0
  4715  001302  6E07               	movwf	___awdiv@quotient^0,c
  4716  001304  5003               	movf	___awdiv@divisor^0,w,c
  4717  001306  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4718  001308  B4D8               	btfsc	status,2,c
  4719  00130A  EF89  F009         	goto	u1471
  4720  00130E  EF8B  F009         	goto	u1470
  4721  001312                     u1471:
  4722  001312  EFB3  F009         	goto	l2097
  4723  001316                     u1470:
  4724  001316  0E01               	movlw	1
  4725  001318  6E05               	movwf	___awdiv@counter^0,c
  4726  00131A  EF93  F009         	goto	l2083
  4727  00131E                     l2081:
  4728  00131E  90D8               	bcf	status,0,c
  4729  001320  3603               	rlcf	___awdiv@divisor^0,f,c
  4730  001322  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4731  001324  2A05               	incf	___awdiv@counter^0,f,c
  4732  001326                     l2083:
  4733  001326  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4734  001328  EF98  F009         	goto	u1481
  4735  00132C  EF9A  F009         	goto	u1480
  4736  001330                     u1481:
  4737  001330  EF8F  F009         	goto	l2081
  4738  001334                     u1480:
  4739  001334                     l2085:
  4740  001334  90D8               	bcf	status,0,c
  4741  001336  3607               	rlcf	___awdiv@quotient^0,f,c
  4742  001338  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4743  00133A  5003               	movf	___awdiv@divisor^0,w,c
  4744  00133C  5C01               	subwf	___awdiv@dividend^0,w,c
  4745  00133E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4746  001340  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4747  001342  A0D8               	btfss	status,0,c
  4748  001344  EFA6  F009         	goto	u1491
  4749  001348  EFA8  F009         	goto	u1490
  4750  00134C                     u1491:
  4751  00134C  EFAD  F009         	goto	l2093
  4752  001350                     u1490:
  4753  001350  5003               	movf	___awdiv@divisor^0,w,c
  4754  001352  5E01               	subwf	___awdiv@dividend^0,f,c
  4755  001354  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4756  001356  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4757  001358  8007               	bsf	___awdiv@quotient^0,0,c
  4758  00135A                     l2093:
  4759  00135A  90D8               	bcf	status,0,c
  4760  00135C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4761  00135E  3203               	rrcf	___awdiv@divisor^0,f,c
  4762  001360  2E05               	decfsz	___awdiv@counter^0,f,c
  4763  001362  EF9A  F009         	goto	l2085
  4764  001366                     l2097:
  4765  001366  5006               	movf	___awdiv@sign^0,w,c
  4766  001368  B4D8               	btfsc	status,2,c
  4767  00136A  EFB9  F009         	goto	u1501
  4768  00136E  EFBB  F009         	goto	u1500
  4769  001372                     u1501:
  4770  001372  EFBF  F009         	goto	l2101
  4771  001376                     u1500:
  4772  001376  6C07               	negf	___awdiv@quotient^0,c
  4773  001378  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4774  00137A  B0D8               	btfsc	status,0,c
  4775  00137C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4776  00137E                     l2101:
  4777  00137E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4778  001382  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4779  001386  0012               	return		;funcret
  4780  001388                     __end_of___awdiv:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function _Bcd2Dec *****************
  4784 ;; Defined at:
  4785 ;;		line 101 in file "LCD_16x2_4bit_mode.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  bcd             2    6[COMRAM] int 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  dec             2   11[COMRAM] int 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  2    6[COMRAM] int 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4799 ;;      Params:         2       0       0       0       0       0       0       0       0
  4800 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4801 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4802 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4803 ;;Total ram usage:        7 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    1
  4806 ;; This function calls:
  4807 ;;		___wmul
  4808 ;; This function is called by:
  4809 ;;		_main
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text35
  4814  00182E                     __ptext35:
  4815                           	callstack 0
  4816  00182E                     _Bcd2Dec:
  4817                           	callstack 29
  4818  00182E                     
  4819                           ;LCD_16x2_4bit_mode.c: 102:     int dec;;LCD_16x2_4bit_mode.c: 103:     dec = bcd + ((bc
      +                          d & 0x70) >> 4) * 10;
  4820  00182E  C007  F009         	movff	Bcd2Dec@bcd,??_Bcd2Dec
  4821  001832  C008  F00A         	movff	Bcd2Dec@bcd+1,??_Bcd2Dec+1
  4822  001836  0E04               	movlw	4
  4823  001838  6E0B               	movwf	(??_Bcd2Dec+2)^0,c
  4824  00183A                     u1605:
  4825  00183A  340A               	rlcf	(??_Bcd2Dec+1)^0,w,c
  4826  00183C  320A               	rrcf	(??_Bcd2Dec+1)^0,f,c
  4827  00183E  3209               	rrcf	??_Bcd2Dec^0,f,c
  4828  001840  2E0B               	decfsz	(??_Bcd2Dec+2)^0,f,c
  4829  001842  EF1D  F00C         	goto	u1605
  4830  001846  0E07               	movlw	7
  4831  001848  1409               	andwf	??_Bcd2Dec^0,w,c
  4832  00184A  6E01               	movwf	___wmul@multiplier^0,c
  4833  00184C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4834  00184E  0E00               	movlw	0
  4835  001850  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4836  001852  0E0A               	movlw	10
  4837  001854  6E03               	movwf	___wmul@multiplicand^0,c
  4838  001856  EC3F  F00D         	call	___wmul	;wreg free
  4839  00185A  5007               	movf	Bcd2Dec@bcd^0,w,c
  4840  00185C  2401               	addwf	?___wmul^0,w,c
  4841  00185E  6E0C               	movwf	Bcd2Dec@dec^0,c
  4842  001860  5008               	movf	(Bcd2Dec@bcd+1)^0,w,c
  4843  001862  2002               	addwfc	(?___wmul+1)^0,w,c
  4844  001864  6E0D               	movwf	(Bcd2Dec@dec+1)^0,c
  4845  001866                     
  4846                           ;LCD_16x2_4bit_mode.c: 104:     return dec;
  4847  001866  C00C  F007         	movff	Bcd2Dec@dec,?_Bcd2Dec
  4848  00186A  C00D  F008         	movff	Bcd2Dec@dec+1,?_Bcd2Dec+1
  4849  00186E  0012               	return		;funcret
  4850  001870                     __end_of_Bcd2Dec:
  4851                           	callstack 0
  4852                           
  4853 ;; *************** function ___wmul *****************
  4854 ;; Defined at:
  4855 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  multiplier      2    0[COMRAM] unsigned int 
  4858 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  product         2    4[COMRAM] unsigned int 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2    0[COMRAM] unsigned int 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0, prodl, prodh
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4870 ;;      Params:         4       0       0       0       0       0       0       0       0
  4871 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4873 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4874 ;;Total ram usage:        6 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_Bcd2Dec
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text36
  4884  001A7E                     __ptext36:
  4885                           	callstack 0
  4886  001A7E                     ___wmul:
  4887                           	callstack 29
  4888  001A7E  5001               	movf	___wmul@multiplier^0,w,c
  4889  001A80  0203               	mulwf	___wmul@multiplicand^0,c
  4890  001A82  CFF3 F005          	movff	prodl,___wmul@product
  4891  001A86  CFF4 F006          	movff	prodh,___wmul@product+1
  4892  001A8A  5001               	movf	___wmul@multiplier^0,w,c
  4893  001A8C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4894  001A8E  50F3               	movf	243,w,c
  4895  001A90  2606               	addwf	(___wmul@product+1)^0,f,c
  4896  001A92  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4897  001A94  0203               	mulwf	___wmul@multiplicand^0,c
  4898  001A96  50F3               	movf	243,w,c
  4899  001A98  2606               	addwf	(___wmul@product+1)^0,f,c
  4900  001A9A  C005  F001         	movff	___wmul@product,?___wmul
  4901  001A9E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4902  001AA2  0012               	return		;funcret
  4903  001AA4                     __end_of___wmul:
  4904                           	callstack 0
  4905                           
  4906                           	psect	rparam
  4907  0000                     
  4908                           	psect	idloc
  4909                           
  4910                           ;Config register IDLOC0 @ 0x200000
  4911                           ;	unspecified, using default values
  4912  200000                     	org	2097152
  4913  200000  FF                 	db	255
  4914                           
  4915                           ;Config register IDLOC1 @ 0x200001
  4916                           ;	unspecified, using default values
  4917  200001                     	org	2097153
  4918  200001  FF                 	db	255
  4919                           
  4920                           ;Config register IDLOC2 @ 0x200002
  4921                           ;	unspecified, using default values
  4922  200002                     	org	2097154
  4923  200002  FF                 	db	255
  4924                           
  4925                           ;Config register IDLOC3 @ 0x200003
  4926                           ;	unspecified, using default values
  4927  200003                     	org	2097155
  4928  200003  FF                 	db	255
  4929                           
  4930                           ;Config register IDLOC4 @ 0x200004
  4931                           ;	unspecified, using default values
  4932  200004                     	org	2097156
  4933  200004  FF                 	db	255
  4934                           
  4935                           ;Config register IDLOC5 @ 0x200005
  4936                           ;	unspecified, using default values
  4937  200005                     	org	2097157
  4938  200005  FF                 	db	255
  4939                           
  4940                           ;Config register IDLOC6 @ 0x200006
  4941                           ;	unspecified, using default values
  4942  200006                     	org	2097158
  4943  200006  FF                 	db	255
  4944                           
  4945                           ;Config register IDLOC7 @ 0x200007
  4946                           ;	unspecified, using default values
  4947  200007                     	org	2097159
  4948  200007  FF                 	db	255
  4949                           
  4950                           	psect	config
  4951                           
  4952                           ;Config register CONFIG1L @ 0x300000
  4953                           ;	PLL Prescaler Selection bits
  4954                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  4955                           ;	System Clock Postscaler Selection bits
  4956                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4957                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4958                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4959  300000                     	org	3145728
  4960  300000  01                 	db	1
  4961                           
  4962                           ;Config register CONFIG1H @ 0x300001
  4963                           ;	Oscillator Selection bits
  4964                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4965                           ;	Fail-Safe Clock Monitor Enable bit
  4966                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4967                           ;	Internal/External Oscillator Switchover bit
  4968                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4969  300001                     	org	3145729
  4970  300001  09                 	db	9
  4971                           
  4972                           ;Config register CONFIG2L @ 0x300002
  4973                           ;	Power-up Timer Enable bit
  4974                           ;	PWRT = OFF, PWRT disabled
  4975                           ;	Brown-out Reset Enable bits
  4976                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4977                           ;	Brown-out Reset Voltage bits
  4978                           ;	BORV = 3, Minimum setting 2.05V
  4979                           ;	USB Voltage Regulator Enable bit
  4980                           ;	VREGEN = OFF, USB voltage regulator disabled
  4981  300002                     	org	3145730
  4982  300002  1F                 	db	31
  4983                           
  4984                           ;Config register CONFIG2H @ 0x300003
  4985                           ;	Watchdog Timer Enable bit
  4986                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4987                           ;	Watchdog Timer Postscale Select bits
  4988                           ;	WDTPS = 32768, 1:32768
  4989  300003                     	org	3145731
  4990  300003  1E                 	db	30
  4991                           
  4992                           ; Padding undefined space
  4993  300004                     	org	3145732
  4994  300004  FF                 	db	255
  4995                           
  4996                           ;Config register CONFIG3H @ 0x300005
  4997                           ;	CCP2 MUX bit
  4998                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4999                           ;	PORTB A/D Enable bit
  5000                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5001                           ;	Low-Power Timer 1 Oscillator Enable bit
  5002                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5003                           ;	MCLR Pin Enable bit
  5004                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  5005  300005                     	org	3145733
  5006  300005  01                 	db	1
  5007                           
  5008                           ;Config register CONFIG4L @ 0x300006
  5009                           ;	Stack Full/Underflow Reset Enable bit
  5010                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5011                           ;	Single-Supply ICSP Enable bit
  5012                           ;	LVP = OFF, Single-Supply ICSP disabled
  5013                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5014                           ;	ICPRT = OFF, ICPORT disabled
  5015                           ;	Extended Instruction Set Enable bit
  5016                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5017                           ;	Background Debugger Enable bit
  5018                           ;	DEBUG = 0x1, unprogrammed default
  5019  300006                     	org	3145734
  5020  300006  81                 	db	129
  5021                           
  5022                           ; Padding undefined space
  5023  300007                     	org	3145735
  5024  300007  FF                 	db	255
  5025                           
  5026                           ;Config register CONFIG5L @ 0x300008
  5027                           ;	Code Protection bit
  5028                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5029                           ;	Code Protection bit
  5030                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5031                           ;	Code Protection bit
  5032                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5033                           ;	Code Protection bit
  5034                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5035  300008                     	org	3145736
  5036  300008  0F                 	db	15
  5037                           
  5038                           ;Config register CONFIG5H @ 0x300009
  5039                           ;	Boot Block Code Protection bit
  5040                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5041                           ;	Data EEPROM Code Protection bit
  5042                           ;	CPD = OFF, Data EEPROM is not code-protected
  5043  300009                     	org	3145737
  5044  300009  C0                 	db	192
  5045                           
  5046                           ;Config register CONFIG6L @ 0x30000A
  5047                           ;	Write Protection bit
  5048                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5049                           ;	Write Protection bit
  5050                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5051                           ;	Write Protection bit
  5052                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5053                           ;	Write Protection bit
  5054                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5055  30000A                     	org	3145738
  5056  30000A  0F                 	db	15
  5057                           
  5058                           ;Config register CONFIG6H @ 0x30000B
  5059                           ;	Configuration Register Write Protection bit
  5060                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5061                           ;	Boot Block Write Protection bit
  5062                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5063                           ;	Data EEPROM Write Protection bit
  5064                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5065  30000B                     	org	3145739
  5066  30000B  E0                 	db	224
  5067                           
  5068                           ;Config register CONFIG7L @ 0x30000C
  5069                           ;	Table Read Protection bit
  5070                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5071                           ;	Table Read Protection bit
  5072                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5073                           ;	Table Read Protection bit
  5074                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5075                           ;	Table Read Protection bit
  5076                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5077  30000C                     	org	3145740
  5078  30000C  0F                 	db	15
  5079                           
  5080                           ;Config register CONFIG7H @ 0x30000D
  5081                           ;	Boot Block Table Read Protection bit
  5082                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5083  30000D                     	org	3145741
  5084  30000D  40                 	db	64
  5085                           tosu	equ	0xFFF
  5086                           tosh	equ	0xFFE
  5087                           tosl	equ	0xFFD
  5088                           stkptr	equ	0xFFC
  5089                           pclatu	equ	0xFFB
  5090                           pclath	equ	0xFFA
  5091                           pcl	equ	0xFF9
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           prodh	equ	0xFF4
  5097                           prodl	equ	0xFF3
  5098                           indf0	equ	0xFEF
  5099                           postinc0	equ	0xFEE
  5100                           postdec0	equ	0xFED
  5101                           preinc0	equ	0xFEC
  5102                           plusw0	equ	0xFEB
  5103                           fsr0h	equ	0xFEA
  5104                           fsr0l	equ	0xFE9
  5105                           wreg	equ	0xFE8
  5106                           indf1	equ	0xFE7
  5107                           postinc1	equ	0xFE6
  5108                           postdec1	equ	0xFE5
  5109                           preinc1	equ	0xFE4
  5110                           plusw1	equ	0xFE3
  5111                           fsr1h	equ	0xFE2
  5112                           fsr1l	equ	0xFE1
  5113                           bsr	equ	0xFE0
  5114                           indf2	equ	0xFDF
  5115                           postinc2	equ	0xFDE
  5116                           postdec2	equ	0xFDD
  5117                           preinc2	equ	0xFDC
  5118                           plusw2	equ	0xFDB
  5119                           fsr2h	equ	0xFDA
  5120                           fsr2l	equ	0xFD9
  5121                           status	equ	0xFD8

Data Sizes:
    Strings     56
    Constant    0
    Data        0
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160    103     135
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@counters(BANK0[10]), 
		 -> main@hours(BANK0[10]), main@mins(BANK0[10]), main@secs(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[9]), STR_11(CODE[4]), STR_10(CODE[8]), STR_9(CODE[17]), 
		 -> STR_8(CODE[8]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[9]), STR_11(CODE[4]), STR_10(CODE[8]), STR_9(CODE[17]), 
		 -> STR_8(CODE[8]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[9]), STR_11(CODE[4]), STR_10(CODE[8]), STR_9(CODE[17]), 
		 -> STR_8(CODE[8]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@counters(BANK0[10]), 
		 -> main@hours(BANK0[10]), main@mins(BANK0[10]), main@secs(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1041_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@counters(BANK0[10]), 
		 -> main@hours(BANK0[10]), main@mins(BANK0[10]), main@secs(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@counters(BANK0[10]), 
		 -> main@hours(BANK0[10]), main@mins(BANK0[10]), main@secs(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@counters_min(BANK0[10]), main@counters(BANK0[10]), main@hours(BANK0[10]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@counters_pomos(BANK0[10]), main@counters_sec(BANK0[10]), main@counters_min(BANK0[10]), main@counters(BANK0[10]), 
		 -> main@hours(BANK0[10]), main@mins(BANK0[10]), main@secs(BANK0[10]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay
    _Dec2Bcd->___awdiv
    _Bcd2Dec->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                85    85      0   21867
                                             18 BANK0     85    85      0
                            _Bcd2Dec
                            _Dec2Bcd
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                     _RTC_Read_Clock
                            ___awmod
                   _init_leds_botons
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    7775
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6056
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5701
                                             66 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4263
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _init_leds_botons                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    3872
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2    1625
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0    1048
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    2052
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    2052
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0    1048
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2    1004
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Dec2Bcd                                              6     4      2    1423
                                              8 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Bcd2Dec                                              7     5      2     622
                                              6 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bcd2Dec
     ___wmul
   _Dec2Bcd
     ___awdiv
     ___awmod
   _I2C_Init
   _I2C_Stop
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _RTC_Read_Clock
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Write
       _I2C_Ready
   ___awmod
   _init_leds_botons
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      87       5       84.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     106      20        0.0%
DATA                 0      0     106       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 14 22:21:06 2020

                  __size_of_I2C_Ready 0012                    __size_of_I2C_Start 002E  
                        ?_LCD_Command 0001                           _SSPSTATbits 000FC7  
                  __size_of_I2C_Write 0022                                    l73 1B48  
                                  l67 17E8                                    l86 0AC8  
                        ___awdiv@sign 0006                   ___wmul@multiplicand 0003  
                         ?_LCD_String 0009                                   l120 170C  
                                 l200 1924                                   l114 19FA  
                                 l203 1ADE                                   l131 18AE  
                                 l117 1758                                   l142 17A2  
                                 l134 1B1A                                   l126 1616  
                                 l206 1B30                                   l230 1A2E  
                                 l223 1A00                                   l208 1B3E  
                                 l232 1A3C                                   l145 166E  
                                 l241 1B2C                                   l209 1B40  
                                 l225 1A0E                                   l234 1A56  
                                 l243 1B2E                                   l251 1AF8  
                                 l227 1A28                                   l148 186E  
                                 l260 1AF2                                   l254 1B06  
                                 l263 1AA2                                   l239 1B1E  
                                 l247 1AC4                                   l257 1AE4  
                                 l507 14F8                                   l195 18F0  
                                 l197 18FE                                   l199 191E  
                                 l494 1386                                   l941 16C0  
                                 l972 13CC                                   l982 0D8C  
                                 l975 140E                                   l991 0E2A  
                                 l984 0D94                                   l977 1448  
                                 _PEN 007E2A                                   u900 120C  
                                 u901 1208                                   u910 121E  
                                 u911 121A                                   u920 1246  
                                 u921 1242                                   u930 127C  
                                 u931 1278                                   u940 182C  
                                 u941 1828                                   u950 19BE  
                                 u951 19BA                                   u960 1956  
                                 u961 1950                                   u970 1958  
                                 u980 1396                                   u981 1392  
                                 u990 13B8                                   u991 13B4  
                                 _Day 00DF                       __end_of_I2C_Ack 1B08  
                                 _pad 1388                                   _min 00E3  
                                 _sec 00E5                                   _run 00D1  
                        ___awmod@sign 0006                                   wreg 000FE8  
                         LCD_Char@dat 0008                                  l1020 1552  
                                l1005 0FC6                                  l1021 155A  
                                l1030 1994                                  l1014 11F8  
                                l1007 1028                                  l1024 18EA  
                                l2003 1A2C                                  l2101 137E  
                                l2021 191A                                  l1045 12C2  
                                l1053 182C                                  l1062 19CA  
                                l2111 1464                                  l2031 15E2  
                                l2023 1922                                  l2015 18EE  
                                l2007 1A50                                  l1056 1B4A  
                                l1072 15B8                                  l2121 1498  
                                l2113 1468                                  l2105 144A  
                                l2041 1724                                  l2033 15E6  
                                l2017 1902                                  l2009 1A56  
                                l2201 1682                                  l2211 182E  
                                l2131 14D2                                  l2123 14A0  
                                l2115 1476                                  l2107 144E  
                                l2051 1748                                  l2043 1726  
                                l2035 1710                                  l2027 15BA  
                                l2019 1912                                  l1067 15B0  
                                l2203 168A                                  l2213 1866  
                                l2061 12C4                                  l2125 14AE  
                                l2133 14D8                                  l2117 147E  
                                l2109 145C                                  l2053 174A  
                                l2045 1728                                  l2037 1720  
                                l2029 15BE                                  l2141 14FA  
                                l2205 1692                                  l1078 195C  
                                l2055 1A7E                                  l2071 12F0  
                                l2063 12C8                                  l2135 14E8  
                                l2127 14C4                                  l2119 1490  
                                l2047 1734                                  l2039 1722  
                                l2151 17B8                                  l2143 1502  
                                l2207 16AE                                  l2311 0A80  
                                l2057 1A9A                                  l2081 131E  
                                l2073 12F8                                  l2065 12D6  
                                l2137 14F0                                  l2129 14CC  
                                l2217 1618                                  l2161 1AC6  
                                l2049 1746                                  l2153 17C8  
                                l2145 1510                                  l2401 0D2A  
                                l2313 0A8E                                  l2321 0AB0  
                                l2305 0A56                                  l2241 0844  
                                l2091 1358                                  l2083 1326  
                                l2075 12FC                                  l2067 12DE  
                                l2219 1666                                  l2163 1ACA  
                                l2171 19D0                                  l2155 17D8  
                                l2147 1536                                  l2403 0D36  
                                l2331 0AE8                                  l2323 0AC2  
                                l2315 0A9A                                  l2307 0A60  
                                l2251 0864                                  l2243 0848  
                                l2093 135A                                  l2085 1334  
                                l2077 1304                                  l2069 12E2  
                                l2165 1ADA                                  l2157 1B1C  
                                l2181 19F4                                  l2173 19DC  
                                l2149 17A6                                  l2341 0B56  
                                l2333 0B14                                  l2405 0D42  
                                l2325 0ACA                                  l2317 0AA4  
                                l2309 0A6C                                  l2261 088E  
                                l2253 086E                                  l2245 0850  
                                l2237 083A                                  l2095 1360  
                                l2087 133A                                  l2079 1316  
                                l2167 1ADC                                  l2183 1B08  
                                l2175 19E2                                  l2191 188A  
                                l2159 1B42                                  l2343 0B6A  
                                l2351 0B9E                                  l2335 0B30  
                                l2327 0ADE                                  l2319 0AAC  
                                l2271 08EE                                  l2263 0896  
                                l2255 0876                                  l2247 0854  
                                l2239 083E                                  l2089 1350  
                                l2097 1366                                  l2177 19E8  
                                l2169 19CC                                  l2193 1894  
                                l2185 1872                                  l1801 141C  
                                l2353 0BB2                                  l2345 0B7E  
                                l2361 0BD2                                  l2337 0B4C  
                                l2329 0AE4                                  l2281 0976  
                                l2273 0928                                  l2265 08A8  
                                l2257 087E                                  l2249 0858  
                                l2099 1376                                  l2179 19EE  
                                l2195 189C                                  l2187 1872  
                                l1811 18B0                                  l1803 1430  
                                l2371 0C22                                  l2363 0BE4  
                                l2355 0BCA                                  l2347 0B96  
                                l2339 0B52                                  l2283 0994  
                                l2275 093E                                  l2291 09E0  
                                l2267 08AE                                  l2259 0886  
                                l2197 18A2                                  l2189 1882  
                                l1821 15A4                                  l1901 0FDA  
                                l2381 0C5C                                  l2373 0C2E  
                                l2365 0BF6                                  l2357 0BCC  
                                l2349 0B98                                  l2293 09E8  
                                l2285 09B2                                  l2277 0950  
                                l2269 08B2                                  l1911 1AAA  
                                l1807 195E                                  l1751 120C  
                                l1815 155C                                  l1903 0FEA  
                                l2199 1670                                  l2391 0CA2  
                                l2375 0C32                                  l2367 0BFA  
                                l2383 0C60                                  l2359 0BCE  
                                l2295 0A04                                  l2287 09C4  
                                l2279 095A                                  l1833 176E  
                                l1825 175A                                  l1841 1B30  
                                l1921 1AC2                                  l1913 1AAE  
                                l1753 121E                                  l1905 1000  
                                l2393 0CB6                                  l2385 0C74  
                                l2377 0C3E                                  l2369 0C10  
                                l2297 0A22                                  l2289 09D0  
                                l1835 1772                                  l1827 1766  
                                l1931 16D8                                  l1915 1ABC  
                                l1755 1228                                  l1763 17EA  
                                l1771 1996                                  l1819 1592  
                                l1851 0DAA                                  l1843 0D54  
                                l2395 0CD4                                  l2387 0C7A  
                                l2379 0C50                                  l2299 0A40  
                                l1837 1788                                  l1941 16FC  
                                l1933 16DA                                  l1925 16C4  
                                l1909 1AA6                                  l1757 1246  
                                l1749 11FA                                  l1765 17F6  
                                l1773 19A2                                  l1781 1926  
                                l1861 0DEA                                  l1853 0DB2  
                                l1845 0D64                                  l2397 0CF2  
                                l2389 0C8E                                  l1839 178C  
                                l1943 16FE                                  l1935 16DC  
                                l1927 16D4                                  l1759 127C  
                                l1767 1808                                  l1775 19A6  
                                l1791 13B8                                  l1871 0E5E  
                                l1863 0DF2                                  l1855 0DD2  
                                l1847 0D66                                  l1951 104E  
                                l2399 0D18                                  l1937 16E8  
                                l1929 16D6                                  l1945 1AF4  
                                l1769 180C                                  l1777 19BE  
                                l1793 13C4                                  l1785 1388  
                                l1873 0E70                                  l1881 0ED0  
                                l1865 0E0E                                  l1857 0DDA  
                                l1849 0D80                                  l1961 10BA  
                                l1953 105C                                  l1939 16FA  
                                l1947 1AE0                                  l1795 13D8  
                                l1787 1396                                  l1891 0F66  
                                l1883 0EE0                                  l1867 0E1E  
                                l1859 0DE4                                  l1963 10D0  
                                l1971 1156                                  l1955 106E  
                                l1797 13EC                                  l1789 13AA  
                                l1893 0F84                                  l1885 0EE6  
                                l1877 0EAA                                  l1973 117A  
                                l1981 11A8                                  l1965 10DE  
                                l1957 1072                                  l1949 102A  
                                ?_pad 0011                                  l1799 13F0  
                                l1895 0F9E                                  l1887 0EEC  
                                l1879 0EBC                                  l1983 11B6  
                                l1975 1188                                  l1967 111A  
                                l1959 1096                                  l1897 0FB8  
                                l1889 0F4A                                  l1977 119C  
                                l1995 19FE                                  l1899 0FD4  
                                l1987 11C2                                  l1989 11E6  
                                l1999 1A22                                  STR_1 0836  
                                STR_2 0833                                  STR_3 082B  
                                STR_4 081F                                  STR_5 081B  
                                STR_6 082B                                  STR_7 081F  
                                STR_8 081B                                  STR_9 0801  
                                u1000 140E                                  u1001 140A  
                                u1010 141C                                  u1011 1418  
                                u1100 17A2                                  u1020 198E  
                                u1101 179E                                  u1021 1988  
                                u1110 1B3E                                  u1030 1990  
                                u1111 1B3A                                  u1040 18E4  
                                u1200 0EA6                                  u1120 0D64  
                                u1041 18DE                                  u1121 0D60  
                                u1050 18E6                                  u1210 0EBC  
                                u1130 0D80                                  u1211 0EB8  
                                u1131 0D7C                                  u1300 1B06  
                                u1060 158C                                  u1220 0F24  
                                u1140 0DAA                                  u1301 1B02  
                                u1061 1586                                  u1141 0DA6  
                                u1310 1AF2                                  u1070 158E  
                                u1230 0F66                                  u1150 0E0E  
                                u1311 1AEE                                  u1231 0F62  
                                u1151 0E0A                                  u1400 18FE  
                                u1080 15A4                                  u1240 0F84  
                                u1160 0E58                                  u1320 104E  
                                u1401 18FA                                  u1081 15A0  
                                u1241 0F80                                  u1225 0F12  
                                u1161 0E52                                  u1321 104A  
                                u1090 1788                                  u1410 1912  
                                u1250 0F9E                                  u1170 0E5A  
                                u1330 1096                                  u1091 1784  
                                u1411 190E                                  u1251 0F9A  
                                u1331 1092                                  u1500 1376  
                                u1420 15DE                                  u1260 0FB8  
                                u1180 0E70                                  u1340 10BA  
                                u1501 1372                                  u1261 0FB4  
                                u1181 0E6C                                  u1341 10B6  
                                u1510 145C                                  u1430 1606  
                                u1270 0FC6                                  u1190 0EA4  
                                u1350 117A                                  u1511 1458  
                                u1271 0FC2                                  u1191 0E9E  
                                u1351 1176                                  u1520 1476  
                                u1440 1616                                  u1360 1A0E  
                                u1280 0FD4                                  _LATD 000F8C  
                                u1521 1472                                  u1441 1612  
                                u1361 1A0A                                  u1281 0FD0  
                                u1450 12D6                                  u1530 1490  
                                u1290 1ABC                                  u1370 1A1E  
                                u1610 08A8                                  u1451 12D2  
                                u1531 148C                                  u1427 15D4  
                                u1291 1AB8                                  u1371 1A1A  
                                u1611 08A4                                  u1460 12F0  
                                u1540 14AE                                  u1380 1A3C  
                                u1700 0B30                                  u1605 183A  
                                u1461 12EC                                  u1541 14AA  
                                u1437 15FC                                  u1381 1A38  
                                u1701 0B2C                                  u1470 1316  
                                u1550 14C4                                  u1390 1A4C  
                                u1710 0B6A                                  u1630 08EE  
                                u1471 1312                                  u1551 14C0  
                                u1391 1A48                                  u1711 0B66  
                                u1631 08EA                                  u1480 1334  
                                u1560 14E8                                  u1720 0B7E  
                                u1624 08CC                                  u1481 1330  
                                u1561 14E4                                  u1721 0B7A  
                                u1625 08C6                                  u1490 1350  
                                u1570 1552                                  u1730 0BB2  
                                u1650 0928                                  u1491 134C  
                                u1571 154E                                  u1731 0BAE  
                                u1651 0924                                  u1580 1B2C  
                                u1740 0BE4                                  u1660 0A80  
                                u1644 0906                                  u1581 1B28  
                                u1741 0BE0                                  u1661 0A7C  
                                u1645 0900                                  u1590 1882  
                                u1750 0BF6                                  u1670 0A8E  
                                u1591 187E                                  u1751 0BF2  
                                u1671 0A8A                                  u1680 0AC2  
                                u1681 0ABE                                  u1690 0B14  
                                u1691 0B10                                  _RCEN 007E2B  
                                _RSEN 007E29                       __end_of_Bcd2Dec 1870  
                                _Date 00DD                       __end_of_Dec2Bcd 1670  
                                _Year 00D9                        main@Clock_type 00C5  
                                _dbuf 0100                                  _main 083A  
                     ?_RTC_Read_Clock 0001                                  _hour 00E1  
                    __end_of_I2C_Nack 1AF4                    __size_of_LCD_Clear 0014  
                                _prec 00CB                      __end_of_I2C_Init 1AE0  
                    __end_of_I2C_Read 1926                                  _nout 00C7  
                                pad@i 0018                                  pad@p 0015  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 001A  
                                fsr2l 000FD9                                  _xtoa 0D54  
                    __end_of_I2C_Stop 1B30                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                     __end_of_MSdelay 17A4                         _LCD_String_xy 1870  
                        ___param_bank 000000      RTC_Read_Clock@read_clock_address 0004  
                               ??_pad 0017                      __end_of_LCD_Char 170E  
                    __end_of_LCD_Init 19FC                                 ?_main 0001  
                               _ACKEN 007E2C                                 _ACKDT 007E2D  
                     __end_of___awdiv 1388                                 STR_10 0823  
                               STR_11 082F                                 STR_12 0812  
                     __end_of___awmod 14FA                       ___awdiv@divisor 0003  
                               ?_xtoa 001C                                 _LATD2 007C62  
                               _LATD3 007C63                          main@counters 0093  
                     ___awdiv@counter 0005                          vfpfcnvrt@fmt 0045  
                        vfpfcnvrt@llu 004D                                 _TRISD 000F95  
                               _SSPIE 007CEB                                 _SSPIF 007CF3  
                               _Month 00DB                                 _flags 005E  
                               _fputc 11FA                       __end_of_isalpha 18EC  
                               _fputs 17EA                     __end_of_I2C_Ready 1B42  
                               pad@fp 0011                                 _width 00C9  
                               _putch 1B4A                       __end_of_islower 195E  
                   __end_of_I2C_Start 1A2A                     __end_of_I2C_Write 1AC6  
                     __end_of_isupper 1996                                 tablat 000FF5  
                               status 000FD8                   __size_of_LCD_String 005E  
                     __end_of_sprintf 16C2                                 xtoa@c 0041  
                               xtoa@d 001E                                 xtoa@i 003F  
                               xtoa@n 0037                                 xtoa@p 0033  
                               xtoa@w 0035                                 xtoa@x 0026  
                     __end_of_toupper 15BA                        ?_LCD_String_xy 000B  
                        _toupper$1208 000D                       __initialization 1A58  
                        __end_of_main 0D54                          __end_of_xtoa 102A  
                           ??_I2C_Ack 0001                                ??_main 0072  
                              ??_xtoa 0027                     __end_of_LCD_Clear 1B1C  
                       __activetblptr 000002                             ??_Bcd2Dec 0009  
                           ??_Dec2Bcd 000B                                ?_fputc 0001  
                              ?_fputs 000A                      ___awdiv@dividend 0001  
                              ?_putch 0001                      LCD_String_xy@msg 000C  
                    LCD_String_xy@pos 000B                      LCD_String_xy@row 000E  
                           ??_MSdelay 0003                                _OSCCON 000FD3  
                              _SSPADD 000FC8                                _TRISB0 007C98  
                              _TRISB1 007C99                                _SSPBUF 000FC9  
                        vfprintf@cfmt 005C                                ___wmul 1A7E  
                           ??___awdiv 0005                             ??___awmod 0005  
                              _alarma 00D7                                clear_0 1A5E  
                              clear_1 1A6A                      ___awdiv@quotient 0007  
                     ___awmod@divisor 0003                       ___awmod@counter 0005  
                  _I2C_Repeated_Start 1A2A                                pad@buf 0013  
                __size_of_LCD_Command 004C                                _strlen 1996  
                              fputc@c 0001                                fputs@c 000E  
                              fputs@i 000F                             ?_I2C_Nack 0001  
                              fputs@s 000A                             ??_isalpha 0003  
                           ?_I2C_Init 0001                             ?_I2C_Read 0001  
                           ?_I2C_Stop 0001                         main@print_min 00BF  
                       main@print_sec 00BD                             ??_islower 0003  
                        __mediumconst 0000                                tblptrh 000FF7  
                           ??_isupper 0003                                tblptrl 000FF6  
                              tblptru 000FF8                   ?_I2C_Repeated_Start 0001  
                              putch@c 0001                      __end_of_vfprintf 155C  
                           ??_sprintf 005E             __size_of_init_leds_botons 0008  
                              xtoa@fp 001C                             ??_toupper 0009  
                           ?_LCD_Char 0001                            __accesstop 0060  
             __end_of__initialization 1A74                             ?_LCD_Init 0001  
                     ??_LCD_String_xy 000E                         ___rparam_used 000001  
                ??_I2C_Repeated_Start 0002                        __pcstackCOMRAM 0001  
                       __end_of_fputc 12C4                         __end_of_fputs 182E  
                       __end_of_putch 1B4C                          ??_LCD_String 000B  
                          ??_I2C_Nack 0001                            ??_I2C_Init 0001  
                          ??_I2C_Read 0001                            ??_I2C_Stop 0001  
                    ??_RTC_Read_Clock 0003                               ??_fputc 0005  
                             ??_fputs 000E                               ??_putch 0001  
                          __pbssBANK0 00C7                            __pbssBANK1 0100  
                          ??_LCD_Char 0007                            ??_LCD_Init 0009  
                  __end_of_LCD_String 1618                          I2C_Read@flag 0001  
                      I2C_Read@buffer 0002                               ?___wmul 0001  
                             _I2C_Ack 1AF4                               _ACKSTAT 007E2E  
                             ?_strlen 0001                    __size_of_vfpfcnvrt 01D0  
                             _Bcd2Dec 182E                               _Dec2Bcd 1618  
                             _SSPCON1 000FC6                               _SSPCON2 000FC5  
                             _SSPSTAT 000FC7                               _MSdelay 175A  
                           _I2C_Ready 1B30                             _I2C_Start 19FC  
                           _I2C_Write 1AA4                         LCD_String@msg 0009  
                          _count_pomo 00CF                               __Hparam 0000  
                             __Lparam 0000                               ___awdiv 12C4  
                             ___awmod 144A                       __size_of___wmul 0026  
                           ?_vfprintf 0056                          __psmallconst 0800  
                             __pcinit 1A58                               __ramtop 0800  
                             __ptext0 083A                               __ptext1 1670  
                             __ptext2 14FA                               __ptext3 102A  
                             __ptext4 0D54                               __ptext5 155C  
                             __ptext6 1926                               __ptext7 1388  
                             __ptext8 1996                               __ptext9 17EA  
                     __size_of_strlen 0036                          __size_of_pad 00C2  
                             _isalpha 18B0                      ___awmod@dividend 0001  
                             _islower 1926                               _isupper 195E  
                           _LCD_Clear 1B08                      _init_leds_botons 1B42  
                             main@aux 00BB                               _sprintf 1670  
                             _toupper 155C                  end_of_initialization 1A74  
                             fputc@fp 0003                        LCD_Command@cmd 0008  
                       __Lmediumconst 0000                               fputs@fp 000C  
                    main@counters_min 007F                      main@counters_sec 0075  
                          ?_I2C_Ready 0001                        main@print_fail 00C3  
                          ?_I2C_Start 0001                            ?_I2C_Write 0001  
                      main@print_pomo 00C1                     __end_of_vfpfcnvrt 11FA  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                          ??_vfprintf 005C                               strlen@a 0003  
                             strlen@s 0001                             _PORTBbits 000F81  
                           _TRISBbits 000F93                             _TRISDbits 000F95  
                          ?_LCD_Clear 0001                     __size_of_I2C_Nack 0014  
                   __size_of_I2C_Init 001A                     __size_of_I2C_Read 003A  
                   __size_of_I2C_Stop 0014                     __size_of_LCD_Char 004C  
                   __size_of_LCD_Init 0030                         ??_LCD_Command 0007  
                         vfpfcnvrt@ap 0047                           vfpfcnvrt@fp 0043  
                      __end_of___wmul 1AA4                        __end_of_strlen 19CC  
                 start_initialization 1A58                           __end_of_pad 144A  
I2C_Repeated_Start@slave_read_address 0002                           ??_I2C_Ready 0001  
                         ??_I2C_Start 0002                           ??_I2C_Write 0001  
               __end_of_LCD_String_xy 18B0                           vfprintf@fmt 0058  
         __size_of_I2C_Repeated_Start 002E                              ??___wmul 0005  
                            ?_I2C_Ack 0001                              ??_strlen 0003  
                 __end_of_LCD_Command 175A                           __pbssCOMRAM 005E  
                       __pcstackBANK0 0060                              ?_Bcd2Dec 0007  
                         ??_LCD_Clear 0009                              ?_Dec2Bcd 0009  
                            ?_MSdelay 0001                       _count_pomo_fail 00CD  
                          Bcd2Dec@bcd 0007                            Bcd2Dec@dec 000C  
                            ?___awdiv 0001              __end_of_init_leds_botons 1B4A  
                            ?___awmod 0001                     __size_of_vfprintf 0062  
                         __smallconst 0800                              _I2C_Nack 1AE0  
                            ?_isalpha 0001                              _I2C_Init 1AC6  
                            _I2C_Read 18EC                              _I2C_Stop 1B1C  
                            ?_islower 0001                              ?_isupper 0001  
                          Dec2Bcd@bdc 000D                            Dec2Bcd@dec 0009  
               LCD_String_xy@location 000F                              ?_sprintf 0060  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                            ?_toupper 0007                        __size_of_putch 0002  
                            MSdelay@i 0003                              MSdelay@j 0005  
                            _LCD_Char 16C2                              _LCD_Init 19CC  
                      ___wmul@product 0005                              _LATDbits 000F8C  
             __size_of_RTC_Read_Clock 0046                             main@AM_PM 00C6  
                         _LCD_Command 170E                             _vfpfcnvrt 102A  
                           _xtoa$1125 002F                             _xtoa$1126 0031  
                    __size_of_I2C_Ack 0014                     ___wmul@multiplier 0001  
                           main@hours 00B1                      __size_of_Bcd2Dec 0042  
                          vfpfcnvrt@c 0055                      __size_of_Dec2Bcd 0058  
        I2C_Start@slave_write_address 0002                      __size_of_MSdelay 004A  
                         _counter_min 00D3                           _counter_sec 00D5  
                            __Hrparam 0000                            vfprintf@ap 005A  
                            __Lrparam 0000                            vfprintf@fp 0056  
                       I2C_Write@data 0001                      __size_of___awdiv 00C4  
                    __size_of___awmod 00B0                            ?_vfpfcnvrt 0043  
                  main@counters_pomos 0089                            sprintf@fmt 0062  
                    __size_of_isalpha 003C                      __size_of_islower 0038  
                            __ptext10 11FA                              __ptext11 1B4A  
                            __ptext20 1B30                              __ptext12 195E  
                            __ptext21 1AE0                              __ptext13 18B0  
                            __ptext30 1B1C                              __ptext22 1AF4  
                            __ptext14 1B42                              __ptext31 1AC6  
                            __ptext23 1870                              __ptext15 17A4  
                            __ptext32 1618                              __ptext24 15BA  
                            __ptext16 19FC                              __ptext33 144A  
                            __ptext25 16C2                              __ptext17 1A2A  
                            __ptext34 12C4                              __ptext26 19CC  
                            __ptext18 1AA4                              __ptext35 182E  
                            __ptext27 1B08                              __ptext19 18EC  
                            __ptext36 1A7E                              __ptext28 170E  
                            __ptext29 175A                      __size_of_isupper 0038  
                    __size_of_sprintf 0052                      __size_of_toupper 005E  
                       __size_of_main 051A                         __size_of_xtoa 02D6  
                          MSdelay@val 0001                              _vfprintf 14FA  
                            main@mins 00A7                              main@secs 009D  
                          _LCD_String 15BA                              isalpha@c 0001  
                           sprintf@ap 006A                              islower@c 0001  
          __end_of_I2C_Repeated_Start 1A58                              isupper@c 0001  
                      _RTC_Read_Clock 17A4                     ?_init_leds_botons 0001  
                         ??_vfpfcnvrt 0049                    ??_init_leds_botons 0001  
                            sprintf@f 006C                              sprintf@s 0060  
                            toupper@c 0007                __size_of_LCD_String_xy 0040  
                         _SSPCON2bits 000FC5                __end_of_RTC_Read_Clock 17EA  
